{"version":3,"sources":["LoginPage.js","Uploader.js","DataDef.js","img/icon_add_process.svg","img/icon_delete_process.svg","Inspector.js","img/logo_otos.svg","Main.js","App.js","reportWebVitals.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","LoginPage","Uploader","props","history","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","useState","tempFile","setTempFile","loadingDialogOpen","setLoadingDialogOpen","upload","ocr","uploadState","setUploadState","style","display","marginBottom","Typography","variant","noWrap","Box","fontWeight","m","marginLeft","paddingTop","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","List","margin","ListItem","CircularProgress","size","height","marginTop","gap","Button","component","width","background","color","type","accept","onChange","e","preventDefault","target","files","name","onClick","getFile","axios","post","then","res","console","log","put","data","body","upload_url","headers","timer","setInterval","result","clearInterval","getOcrData","push","catch","err","fontSize","TableInfo","WPS_tables","pDefineds","processAvailbleTables","Inspector","classes","makeStyles","title","content","leftPaper","overflow","rightPaper","padding","notePaper","dbBtn","prevBtn","nextBtn","submitTableBtn","tableCard","paddingLeft","tableCardGas","cardNum","select","marginRight","preDefinedSelect","formControl","border","borderColor","borderRadius","addProcessBtn","justify","useStyles","ocrData","numPages","setNumPages","pageNumber","setPageNumber","left","top","tableAreaRect","setTableAreaRect","zoomState","setZoomState","currentTable","setCurrentTable","clonedTable","setClonedTable","clonedTable2","setClonedTable2","total","current","finished","isProcessAvailable","tableState","setTableState","DBState","setDBState","saveState","setSaveState","count","first","second","third","processState","setProcessState","makeField","typeStr","arr","key","idx","process","undefined","TextField","inputProps","value","newArr","length","className","defaultValue","map","item","CardContent","makeCard","fieldTypeArr","split","gridTemplateColumns","makeCardforGas","moveTable","to","toMove","prevState","loadTable","cloneDeep","Object","keys","forEach","join","i","includes","addProcess","deleteProcess","position","submitTable","indexOf","concat","tempJson","tempJsonC","tempJsonC2","useEffect","userFile","disabled","setTimeout","IconButton","Paper","elevation","file","onLoadError","error","onLoadSuccess","noData","textAlign","scale","Grid","container","src","deleteIcon","cursor","addIcon","InputBase","borderLeft","borderTop","myTheme","theme","root","appBar","zIndex","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","ClippedDrawer","setUserFile","setOcrData","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","render","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"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","file":"static/js/main.76315f11.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { Button, CssBaseline, TextField, Typography, Card, Box, Container } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { login } from './auth.js';\nimport { useHistory } from \"react-router-dom\"\n\nconst myTheme = createMuiTheme({\n  palette: {\n      primary: {\n          light: '#58a5f0',\n          main: '#0277bd',\n          dark: '#58a5f0',\n          contrastText: '#fff',\n      }\n  }\n})\n\nfunction LoginPage(theme) {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const submit = e => {\n      e.preventDefault();\n      enqueueSnackbar('로그인 요청 중...')\n      login({email, password})\n      .then(()=> {\n        sessionStorage.setItem('userId', email);\n        history.push(\"/\");\n        closeSnackbar();\n      })\n      .catch(()=> \n        enqueueSnackbar('아이디 또는 비밀번호가 올바르지 않습니다', {variant: 'error',})\n      );\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        \n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        title: {\n          marginBottom: 30,\n        },\n        logincard: {\n          marginTop: 120,\n        },\n        form: {\n          color: 'black',\n          width: '80%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={myTheme}>\n        <Container className={classes.main} maxWidth=\"xs\">\n            <CssBaseline />\n            <Card className={classes.logincard}>\n            <div className={classes.paper}>\n                <Typography variant=\"h4\" noWrap className={classes.title}>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                  Kant | Admin\n                  </Box>\n                </Typography>\n                <form className={classes.form} onSubmit={submit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"id\"\n                    label=\"아이디\"\n                    name=\"id\"\n                    autoFocus\n                    onChange={e=> setEmail(e.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"비밀번호\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={e=> setPassword(e.target.value)}\n                />\n                \n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={(email === '') || (password === '') }\n                >\n                    로그인\n                </Button>\n                \n                </form>\n            </div>\n            </Card>            \n            </Container>\n            </ThemeProvider>\n        )\n    }\n\nexport default LoginPage;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Dialog, Grid, IconButton, Paper, DialogTitle, List, ListItem, CircularProgress } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useSnackbar } from 'notistack';\nimport Modal from './Modal.js'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useHistory } from 'react-router';\n\n\nexport default function Uploader(props) {\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n    const sampleData = {\n        \"Company\": \"S_T\",\n        \"WPS_Doc_Info\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.06693921983242035,\n                \"right\": 1.0,\n                \"bottom\": 0.16817045211791992\n            },\n            \"fields\": {\n                \"WPS_No\": [\n                    \"F-1010-001\"\n                ],\n                \"Date\": [\n                    \"20. JUL, 2012\"\n                ],\n                \"Rev_No\": [\n                    \"-\",\n                    \"Rev. No.\",\n                    \"o\"\n                ],\n                \"Rev_Date\": [],\n                \"Supporting_PQR_No\": [\n                    \"QGTFC-10H.10H-211A\"\n                ],\n                \"Impact_Test\": [\n                    \"YES\",\n                    \"( C)\",\n                    \"NO\"\n                ],\n                \"Welding_Process\": [\n                    \"FCAW\"\n                ],\n                \"Type\": [\n                    \"SEMI-AUTO\"\n                ],\n                \"Code\": []\n            }\n        },\n        \"WPS_QW_402\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.1790739744901657,\n                \"right\": 0.5,\n                \"bottom\": 0.2804385721683502\n            },\n            \"fields\": {\n                \"Type_of_Joint\": [\n                    \"SEE JOINT DETAIL\"\n                ],\n                \"Backing_Material\": [\n                    \"FILLET :\",\n                    \"BASE METAL\"\n                ],\n                \"Backing\": [\n                    \"Yes\",\n                    \"FC\",\n                    \"No\"\n                ],\n                \"Root_Spacing\": [],\n                \"Retainers\": [\n                    \"NONE\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_403\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.2904154360294342,\n                \"right\": 0.5,\n                \"bottom\": 0.4990725517272949\n            },\n            \"fields\": {\n                \"P_No\": [\n                    \"1\"\n                ],\n                \"Gr_No\": [\n                    \"1\"\n                ],\n                \"to_P_No\": [],\n                \"to_Gr_No\": [],\n                \"or_Spec_Type_and_Grade\": [\n                    \"*1 ( See Note.)\"\n                ],\n                \"Qualified_Thickness_Range\": [\n                    \"GROOVE :\",\n                    \"5 ~ 46mm\",\n                    \"FILLET :\",\n                    \"ALL\"\n                ],\n                \"Depo_Weld_Metal\": [],\n                \"Pipe_Diameter_Range\": [\n                    \"-\"\n                ],\n                \"Max_Pass_Thk_Limit\": [\n                    \"4mm\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_404\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.5097125768661499,\n                \"right\": 0.5,\n                \"bottom\": 0.8120782971382141\n            },\n            \"fields\": {\n                \"F_No\": [\n                    \"6\"\n                ],\n                \"A_No\": [\n                    \"8\"\n                ],\n                \"Specification_No\": [\n                    \"5.22\"\n                ],\n                \"AWS_Class\": [\n                    \"E2209T1-4\"\n                ],\n                \"Brand_Name\": [],\n                \"Depo_Weld_Metal\": [],\n                \"Filler_Product_Form\": [\n                    \"FLUX CORED\"\n                ],\n                \"Size\": [\n                    \"1.2mm\"\n                ],\n                \"Supplemental\": [],\n                \"Alloy_Element\": [],\n                \"Flux_Wire_Class\": [\n                    \"N/A\"\n                ],\n                \"Alloy_Flux\": [],\n                \"Flux_Trade_Name\": [\n                    \"N/A\"\n                ],\n                \"Flux_Type\": [],\n                \"Recrushed_Slag\": [],\n                \"Consumable_Insert\": [\n                    \"NONE\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_405\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.8227624297142029,\n                \"right\": 0.5,\n                \"bottom\": 1.0\n            },\n            \"fields\": {\n                \"Position_of_Groove\": [\n                    \"ALL\"\n                ],\n                \"Position_of_Fillet\": [\n                    \"ALL\"\n                ],\n                \"Welding_Progression\": [\n                    \"UP\",\n                    \"FC\",\n                    \"DOWN -\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_406\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.35335198044776917,\n                \"right\": 1.0,\n                \"bottom\": 0.43557727336883545\n            },\n            \"fields\": {\n                \"Min_Preheat_Temp\": [\n                    \"Min. 10 °\"\n                ],\n                \"Max_Interpass_Temp\": [\n                    \"Max. 150 °C\"\n                ],\n                \"Preheat_Maintain\": [\n                    \"N/A\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_407\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.44642001390457153,\n                \"right\": 1.0,\n                \"bottom\": 0.5704269409179688\n            },\n            \"fields\": {\n                \"Postweld_Heat_Treat_Temp\": [\n                    \"N/A\"\n                ],\n                \"Holding_Time\": [\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"N/A\"\n                ]\n            }\n        },\n        \"WPS_QW_408\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.5807933211326599,\n                \"right\": 1.0,\n                \"bottom\": 0.7189614176750183\n            },\n            \"fields\": {\n                \"Shielding_Gas\": [\n                    \"Ar /CO2\",\n                    \"75%/25%\",\n                    \"15-20//mm\"\n                ],\n                \"Backing_Gas\": [\n                    \"N/A\",\n                    \"N/A\",\n                    \"N/A\"\n                ],\n                \"Trailing_Gas\": [\n                    \"N/A\",\n                    \"N/A\",\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_409\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.7296864986419678,\n                \"right\": 1.0,\n                \"bottom\": 0.8603706955909729\n            },\n            \"fields\": {\n                \"Pulsing_Current\": [],\n                \"Current\": [],\n                \"Polarity\": [],\n                \"Tungsten_Electrode_Type\": [\n                    \"N/A\"\n                ],\n                \"Tungsten_Electrode_Size\": [\n                    \"N/A\"\n                ],\n                \"Mode_of_Metal_Transfer\": [\n                    \"SPRAY / GLOBULAR\"\n                ],\n                \"Heat_Input\": [],\n                \"Electrode_Wire_Feed_Speed_Range\": [\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_410\": {\n            \"page\": 2,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.13226628303527832,\n                \"right\": 1.0,\n                \"bottom\": 0.23131555318832397\n            },\n            \"fields\": {\n                \"Stringer_or_Weave_Bead\": [\n                    \"BOTH\"\n                ],\n                \"Orifice_Gas_Cup_or_Nozzle_Tip\": [\n                    \"12 21mm\"\n                ],\n                \"Initial_or_Interpass_Cleaning\": [\n                    \"BRUSHING and/or GRINDING\"\n                ],\n                \"Contact_Tube_to_Work_Dist\": [\n                    \"N/A\"\n                ],\n                \"Closed_to_Out_Chamber\": [],\n                \"Use_of_Thermal_Process\": [],\n                \"Method_of_Back_Gouging\": [\n                    \"GRINDING / PLASMA\"\n                ],\n                \"Single_or_Multiple_Pass\": [\n                    \"MULTIPLE\"\n                ],\n                \"Single_or_Multiple_Electrode\": [\n                    \"SINGLE\"\n                ],\n                \"Multiple_Electrode_Spacing\": [],\n                \"Manual_or_Automatic\": [],\n                \"Peening\": [\n                    \"NONE\",\n                    \"NONE\"\n                ],\n                \"Oscillation\": [\n                    \"N/A\",\n                    \"475447\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_NOTES\": {\n            \"page\": 2,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.5419971346855164,\n                \"right\": 1.0,\n                \"bottom\": 0.9454333782196045\n            },\n            \"fields\": {\n                \"Instructions\": [\n                    \"1. APPLICABLE METAL.\",\n                    \"ANY MATERIAL OF P No. 10H GR 1 AND P No. 10H GR 1OF QW-422 IN SECTION IX ASME CODE.\",\n                    \"2. THE FOLLOWING VARIABLES ARE NOT APPLIED TO THIS WPS.\",\n                    \"-QW 407.4 T LIMITS\",\n                    \"-QW 410.15 ELECTRODE SPACING\",\n                    \"-QW 410.64 USE OF THERMAL PROCESSES\",\n                    \"3. THE GAS PURGE SHOULD BE HELD UNTIL AT LEAST 2 LAYERS OF WELD HAVE BEEN DEPOSITED.\",\n                    \"0\",\n                    \"S.J.PARK 15-4-2020 1.20.12\",\n                    \"J.H.KIM\",\n                    \"P.R.KIM\",\n                    \"July 20,2012.\",\n                    \"their\",\n                    \"HSBCT\",\n                    \"T. Y. Jang/Date\"\n                ]\n            }\n        }\n    };\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            props.getFile(tempFile)\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                console.log(res);\n                axios.put(res.data.body.upload_url, tempFile)\n                .then((res) => {\n                    console.log(res);\n                    setUploadState({...uploadState, upload: true})\n                    axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                        \"action\": \"OCR\",\n                        \"file\": tempFile.name\n                    }, {headers : {\"InvocationType\":\"Event\"}})\n                    .then((res) => {\n                        console.log(res);\n                        const timer = setInterval(() => {\n                            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                \"action\": \"RESULT\",\n                                \"file\": tempFile.name\n                            })\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.body.result === \"OK\") {\n                                    clearInterval(timer);\n                                    props.getOcrData(res.data.body.data[0]);\n                                    setUploadState({...uploadState, ocr: true})\n                                    history.push('/inspect')\n                                }\n                            })\n                        }, 5000);\n                    })\n                })\n            })\n            .catch((err)=> {\n                setLoadingDialogOpen(false)\n                enqueueSnackbar('에러 발생', {variant: 'error'})\n            })\n            // props.getOcrData(sampleData);\n            // history.push('/inspect');\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'})\n        }\n    }\n\n    return (\n        <>\n        <div style={{display:'flex', marginBottom:10}}>\n            <Typography variant=\"h5\" noWrap >\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n                Upload Data\n            </Box>\n            </Typography>\n            {/* page navigation button\n            <IconButton><ArrowBackIosIcon fontSize=\"small\"/></IconButton>\n            <Typography variant=\"h7\" style={{marginTop:14}}>1 페이지</Typography>\n            <IconButton><ArrowForwardIosIcon fontSize=\"small\"/></IconButton> */}\n            <div style={{marginLeft:'auto', paddingTop:5}}>\n                \n            </div>\n        </div>\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"simple-dialog-title\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"simple-dialog-title\">업로드 및 OCR</DialogTitle>\n            <List style={{ margin:10 }}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n        <div style={{ height: '100%', marginTop:20, marginLeft:10}}>\n            <div style={{display: 'flex', gap: '20px'}}>\n                {/* <Typography style={{ marginTop:5 }}>업로드 파일 :</Typography> */}\n                <Button variant=\"outlined\" component=\"label\" style={{width:292, height:35, background:\"rgba(23, 62, 139, 1)\", color:\"white\"}}>\n                    <input type=\"file\" style={{display:\"none\"}}accept=\"application/pdf\" onChange={handleFile} />\n                    {tempFile==null ? \"업로드\" : \"업로드 : \"+ tempFile.name}\n                </Button>\n                \n                <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}><CachedIcon fontSize='small'/>&nbsp;&nbsp;실행</Button> \n            </div>\n        </div>\n        </>\n    );\n}","export const TableInfo = {\r\n    \"WPS_Doc_Info\": {\r\n        \"WPS_No\": \"T\",\r\n        \"Date\": \"T/D\",\r\n        \"Impact_Test\": \"T/P\",\r\n        \"Rev_No\": \"T\",\r\n        \"Rev_Date\": \"T\",\r\n        \"Supporting_PQR_No\": \"T/T/T\",\r\n        \"Welding_Process\": \"T/P\",\r\n        \"Type\": \"T/P\",\r\n        \"Code\": \"T\"\r\n    }, \"WPS_QW_402\": {\r\n        \"Type_of_Joint\": \"T\",\r\n        \"Backing\": \"T/P\",\r\n        \"Backing_Material\": \"T/P/P\",\r\n        \"Root_Spacing\": \"T/~/T/mm\",\r\n        \"Retainers\": \"T/P\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_403\": {\r\n        \"P_No\": \"T\",\r\n        \"Gr_No\": \"T/T/T\",\r\n        \"to_P_No\": \"T\",\r\n        \"to_Gr_No\": \"T/T/T\",\r\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\r\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\r\n        \"Depo_Weld_Metal\": \"T/mm\",\r\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\r\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_404\": {\r\n        \"F_No\": \"T\",\r\n        \"A_No\": \"T\",\r\n        \"Specification_No\": \"T\",\r\n        \"AWS_Class\": \"T\",\r\n        \"Brand_Name\": \"T\",\r\n        \"Depo_Weld_Metal\": \"T/mm\",\r\n        \"Filler_Product_Form\": \"T\",\r\n        \"Size\": \"T/T/mm\",\r\n        \"Supplemental\": 'T',\r\n        \"Alloy_Element\": \"T\",\r\n        \"Flux_Wire_Class\": \"T\",\r\n        \"Alloy_Flux\": \"T\",\r\n        \"Flux_Trade_Name\": \"T\",\r\n        \"Flux_Type\": \"T\",\r\n        \"Recrushed_Slag\": \"T\",\r\n        \"Consumable_Insert\": \"T\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_405\": {\r\n        \"Position_of_Groove\": \"T/P\",\r\n        \"Position_of_Fillet\": \"T/P\",\r\n        \"Welding_Progression\": \"T/P\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_406\": {\r\n        \"Min_Preheat_Temp\": \"T/°C\",\r\n        \"Max_Interpass_Temp\": \"T/°C\",\r\n        \"Preheat_Maintain\": \"T\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_407\": {\r\n        \"Postweld_Heat_Treat_Temp\": \"T/~/T/°C\",\r\n        \"Holding_Time\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_408\": {\r\n        \"Shielding\": \"T/T/T\",\r\n        \"Backing\": \"T/T/T\",\r\n        \"Trailing\": \"T/T/T\",\r\n        \"Shielding_Gas\": \"T/T/T\",\r\n        \"Backing_Gas\": \"T/T/T\",\r\n        \"Trailing_Gas\": \"T/T/T\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_409\": {\r\n        \"Current\": \"T/P\",\r\n        \"Polarity\": \"T/P\",\r\n        \"Tungsten_Electrode_Type\": \"T\",\r\n        \"Tungsten_Electrode_Size\": \"T/T/mm\",\r\n        \"Pulsing_Current\": \"T\",\r\n        \"Mode_of_Metal_Transfer\": \"T/P\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_410\": {\r\n        \"Stringer_or_Weave_Bead\": \"T/P\",\r\n        \"Orifice_Gas_Cup_or_Nozzle_Tip\": \"T/~/T/mm\",\r\n        \"Initial_or_Interpass_Cleaning\": \"T/T/P\",\r\n        \"Contact_Tube_to_Work_Dist\": \"T/~/T/mm\",\r\n        \"Closed_to_Out_Chamber\": \"T\",\r\n        \"Use_of_Thermal_Process\": \"T\",\r\n        \"Method_of_Back_Gouging\": \"T\",\r\n        \"Single_or_Multiple_Pass\": \"T\",\r\n        \"Single_or_Multiple_Electrode\": 'T',\r\n        \"Multiple_Electrode_Spacing\": \"T/mm\",\r\n        \"Peening\": \"T\",\r\n        \"Oscillation\": \"T/mm\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_ELECTRODE\": {\r\n        \"Layer_No\": \"T\",\r\n        \"Welding_Process\": \"T\",\r\n        \"MAX_WM_Thickness\": \"T\",\r\n        \"F_No\": \"T\",\r\n        \"A_No\": \"T\",\r\n        \"SFA_No\": \"T\",\r\n        \"Filler_Metal_Class\": \"T\",\r\n        \"Filler_Metal_Dia\": \"T\",\r\n        \"Current_Type_Polar\": 'T',\r\n        \"Current_Amperes_Range\": \"T\",\r\n        \"Voltage_Range\": \"T\",\r\n        \"Travel_Speed_mm_min\": \"T\",\r\n        \"Travel_Speed_cm_min\": \"T\",\r\n        \"Heat_Input_kJ_mm\": \"T\",\r\n        \"Heat_Input_kJ_cm\": \"T\",\r\n        \"Heat_Input_J_mm\": \"T\",\r\n        \"Shielding_Gas_Flow_Rate\": \"T\"\r\n    }\r\n};\r\nexport const WPS_tables = [\r\n    \"WPS_Doc_Info\", \r\n    \"WPS_QW_402\",\r\n    \"WPS_QW_403\", \r\n    \"WPS_QW_404\",\r\n    \"WPS_QW_405\",\r\n    \"WPS_QW_406\",\r\n    \"WPS_QW_407\",\r\n    \"WPS_QW_408\",\r\n    \"WPS_QW_409\",\r\n    \"WPS_QW_410\",\r\n    \"WPS_ELECTRODE\"\r\n];\r\n\r\nexport const pDefineds = {\r\n    \"Impact_Test\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\r\n    \"Type\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\r\n    \"Welding_Process\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\r\n    \"Backing\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\r\n    \"Backing_Material\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\r\n    \"Retainers\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\r\n    \"Position_of_Groove\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\r\n    \"Position_of_Fillet\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\r\n    \"Welding_Progression\": [\"UP\", \"DOWN\", \"N/A\"],\r\n    \"Current\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\r\n    \"Polarity\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\r\n    \"Mode_of_Metal_Transfer\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\r\n    \"Stringer_or_Weave_Bead\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\r\n    \"Initial_or_Interpass_Cleaning\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\r\n    \"Method_of_Back_Gouging\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"]\r\n}\r\nexport const processAvailbleTables = [\"WPS_QW_404\", \"WPS_QW_405\", \"WPS_QW_408\", \"WPS_QW_409\", \"WPS_QW_410\"]","export default __webpack_public_path__ + \"static/media/icon_add_process.f73162a2.svg\";","export default __webpack_public_path__ + \"static/media/icon_delete_process.94d578bf.svg\";","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Card, CardContent, Grid, IconButton, Paper, TextField, Switch, FormControlLabel, FormControl, InputLabel, Select, MenuItem, NativeSelect, InputBase } from '@material-ui/core'\nimport { Dialog, DialogTitle, List, ListItem, CircularProgress } from '@material-ui/core'\nimport { useSnackbar } from 'notistack';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport { TableInfo, WPS_tables, pDefineds, processAvailbleTables } from './DataDef.js'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport { cloneDeep } from 'lodash';\nimport addIcon from './img/icon_add_process.svg';\nimport deleteIcon from './img/icon_delete_process.svg'\n\n\n\nexport default function Inspector(props) {\n    const useStyles = makeStyles({\n        title: {\n            display: 'flex', \n            gap: 10\n        },\n        content: {\n            width: '100%', \n            display: 'flex', \n            gap: 25, \n            marginTop: 5, \n            marginLeft: 10\n        },\n        leftPaper: {\n            width: '650px', \n            height: '600px', \n            overflow: 'scroll'\n        },\n        rightPaper: {\n            width: '600px', \n            height: '600px', \n            marginTop: 20, \n            padding: 10,\n            overflow: 'scroll'\n        },\n        notePaper: {\n            width: '1234px', \n            height: '136px', \n            marginTop: 10, \n            padding: 10,\n            overflow: 'scroll'\n        },\n        dbBtn: {\n            marginTop: 10\n        },\n        prevBtn: {\n            width:98, height:23, background:\"rgba(23, 62, 139, 1)\", color:\"white\",\n            marginTop: 10\n        },\n        nextBtn: {\n            width:98, height:23, background:\"rgba(23, 62, 139, 1)\", color:\"white\",\n            marginTop: 10, \n            marginLeft: \"auto\"\n        },\n        submitTableBtn: {\n            width:98, height:23, background:\"#DD2818\", color:\"white\",\n            marginTop: 10, \n            marginLeft: \"auto\"\n        },\n        tableCard: {\n            display: 'grid',\n            marginTop: 10,\n            paddingLeft: 10,\n            height: 42,\n            gap: 3,\n        },\n        tableCardGas: {\n            width: 120,\n            marginTop: 10,\n            paddingLeft: 10,\n            height: 42,\n            gap: 3,\n        },\n        cardNum: {\n            marginLeft: -10,\n            fontWeight: 'bold',\n            fontSize: 14,\n            // textDecoration: 'underline'\n        },\n        select: {\n            width: 80,\n            height: 20,\n            marginRight: 10,\n            fontSize: 8\n        },\n        preDefinedSelect: {\n            height: 20,\n            marginTop: 15,\n            marginLeft: 3,\n            fontSize: 8\n        },\n        formControl: {\n            width: 80,\n            height: 20,\n            marginTop: '10px',\n            marginLeft: '0px',\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n              border: '1px solid',\n              borderColor: \"#707070\",\n              borderRadius: \"4px\",\n            },\n        },\n        addProcessBtn: {\n            marginTop: 5,\n            fontSize: 12,\n            width: 150,\n            height: 30,\n            justify:\"center\"\n        }\n      });\n    const classes = useStyles();\n    const history = useHistory();\n    const ocrData = props.ocrData;\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const onDocumentLoadSuccess = ({numPages}) => {\n        setNumPages(numPages)\n    };\n    const [tableAreaRect, setTableAreaRect] = useState({\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n    });\n    const [zoomState, setZoomState] = useState(2.2);\n    const [currentTable, setCurrentTable] = useState({});\n    const [clonedTable, setClonedTable] = useState({});\n    const [clonedTable2, setClonedTable2] = useState({});\n    const [tableState, setTableState] = useState({\n        total: 0,\n        current: 0,\n        finished: [],\n        title: \"\",\n        isProcessAvailable: false\n    });\n    const [DBState, setDBState] = useState({});\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [saveState, setSaveState] = useState(false)\n    const [processState, setProcessState] = useState({\n        count: 1,\n        first: \"GTAW\",\n        second: \"GTAW\",\n        third: \"GTAW\"\n    });\n\n    const makeField = (typeStr, arr, key, idx, process) => { // process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\n        switch (typeStr) {\n            case \"T\":\n                if (arr[idx] === undefined) {\n                    return <TextField margin=\"dense\" inputProps={{style: {fontSize: 10}}} value={\"\"} fullWidth variant=\"outlined\" \n                    onChange={e=> {\n                        let newArr = arr;\n                        while (newArr.length <= idx) {\n                            newArr.push(\"\");\n                        }\n                        newArr[idx] = e.target.value;\n                        if (process === 1) {\n                            setClonedTable({\n                                ...clonedTable,\n                                [key]: newArr\n                            })\n                        } else if (process === 2) {\n                            setClonedTable2({\n                                ...clonedTable2,\n                                [key]: newArr\n                            })\n                        } else {\n                            setCurrentTable({\n                                ...currentTable,\n                                [key]: newArr\n                            })\n                        }\n                    }}/>\n                }\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 10}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    if (process === 1) {\n                        setClonedTable({\n                            ...clonedTable,\n                            [key]: newArr\n                        })\n                    } else if (process === 2) {\n                        setClonedTable2({\n                            ...clonedTable2,\n                            [key]: newArr\n                        })\n                    } else {\n                        setCurrentTable({\n                            ...currentTable,\n                            [key]: newArr\n                        })\n                    }\n                }}/>\n            case \"YN\":\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 10}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    if (process === 1) {\n                        setClonedTable({\n                            ...clonedTable,\n                            [key]: newArr\n                        })\n                    } else if (process === 2) {\n                        setClonedTable2({\n                            ...clonedTable2,\n                            [key]: newArr\n                        })\n                    } else {\n                        setCurrentTable({\n                            ...currentTable,\n                            [key]: newArr\n                        })\n                    }\n                }}/>\n            case \"D\":\n                return <input type=\"date\" value={arr[idx]} onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    if (process === 1) {\n                        setClonedTable({\n                            ...clonedTable,\n                            [key]: newArr\n                        })\n                    } else if (process === 2) {\n                        setClonedTable2({\n                            ...clonedTable2,\n                            [key]: newArr\n                        })\n                    } else {\n                        setCurrentTable({\n                            ...currentTable,\n                            [key]: newArr\n                        })\n                    }\n                }}></input>\n            case \"P\": // predefined selector\n                return <select\n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    if (process === 1) {\n                        setClonedTable({\n                            ...clonedTable,\n                            [key]: newArr\n                        })\n                    } else if (process === 2) {\n                        setClonedTable2({\n                            ...clonedTable2,\n                            [key]: newArr\n                        })\n                    } else {\n                        setCurrentTable({\n                            ...currentTable,\n                            [key]: newArr\n                        })\n                    }}}\n                    className={classes.preDefinedSelect}\n                    style={{width: 60/processState.count + 25}}\n                    defaultValue={pDefineds[key][0]}\n                    value={arr[idx]}\n                    >\n                    {pDefineds[key].map((item) => {\n                        return <option value={item}>{item}</option>\n                    })}\n                </select>\n            default:\n                return <CardContent className={classes.cardNum}>{typeStr}</CardContent>\n        }\n    }\n\n    const makeCard = (key, process) => {\n        const fieldTypeArr = TableInfo[tableState.title][key].split('/');\n        if (fieldTypeArr.length <= 1) {\n            return (<div className={classes.tableCard} style={{gridTemplateColumns: `${355/processState.count}px`}}>\n                        {fieldTypeArr.map((typeStr, idx) => {\n                            return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                        })}\n                        {/* {openAddProcess ? \n                        fieldTypeArr.map((typeStr, idx) => {\n                            return makeField(typeStr, currentTable[key], key, idx)\n                        }) : null} */}\n                    </div>)\n        } else if (fieldTypeArr.length === 2) {\n            return (<div variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: `${180/processState.count}px ${180/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 3) {\n            return (<div variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: `${120/processState.count}px ${120/processState.count}px ${120/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 4) {\n            return (<div variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: `${90/processState.count}px ${45/processState.count}px ${90/processState.count}px ${45/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 5) {\n            return (<div variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '70px 70px 30px 70px 70px'}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        }\n    }\n\n    const makeCardforGas = (key, process) => {\n        const fieldTypeArr = TableInfo[tableState.title][key].split('/');\n        if (fieldTypeArr.length <= 1) {\n            return (<div className={classes.tableCardGas} style={{gridTemplateColumns: `${355/processState.count}px`}}>\n                        {fieldTypeArr.map((typeStr, idx) => {\n                            return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                        })}\n                        {/* {openAddProcess ? \n                        fieldTypeArr.map((typeStr, idx) => {\n                            return makeField(typeStr, currentTable[key], key, idx)\n                        }) : null} */}\n                    </div>)\n        } else if (fieldTypeArr.length === 2) {\n            return (<div variant=\"outlined\" className={classes.tableCardGas} style={{gridTemplateColumns: `${180/processState.count}px ${180/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 3) {\n            return (<div variant=\"outlined\" className={classes.tableCardGas} style={{gridTemplateColumns: `${120/processState.count}px ${120/processState.count}px ${120/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 4) {\n            return (<div variant=\"outlined\" className={classes.tableCardGas} style={{gridTemplateColumns: `${90/processState.count}px ${45/processState.count}px ${90/processState.count}px ${45/processState.count}px`}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        } else if (fieldTypeArr.length === 5) {\n            return (<div variant=\"outlined\" className={classes.tableCardGas} style={{gridTemplateColumns: '70px 70px 30px 70px 70px'}}>\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, process===1 ? clonedTable[key] : process===2 ? clonedTable2[key] : currentTable[key], key, idx, process)\n                            })}\n                        </div>)\n        }\n    }\n\n    // const makeFieldForNewProcess = (typeStr, arr, key, idx) => {\n    //     switch (typeStr) {\n    //         case \"T\":\n    //             if (arr === undefined) {\n    //                 return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={\"\"} fullWidth variant=\"outlined\" \n    //                 onChange={e=> {\n    //                     let newArr = arr;\n    //                     while (newArr.length <= idx) {\n    //                         newArr.push(\"\");\n    //                     }\n    //                     newArr[idx] = e.target.value;\n    //                     setClonedTable({\n    //                     ...clonedTable,\n    //                     [key]: newArr\n    //                     })\n    //                 }}/>\n    //             }\n    //             return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n    //             onChange={e=> {\n    //                 console.log({...ocrData[WPS_tables[2]][\"fields\"]});\n    //                 let newArr = arr;\n    //                 newArr[idx] = e.target.value\n    //                 setClonedTable({\n    //                     ...clonedTable,\n    //                     [key]: newArr\n    //                 });\n    //             }}/>\n    //         case \"YN\":\n    //             return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n    //             onChange={e=> {\n    //                 let newArr = arr;\n    //                 newArr[idx] = e.target.value\n    //                 setClonedTable({\n    //                     ...clonedTable,\n    //                     [key]: newArr\n    //                 });\n    //             }}/>\n    //         default:\n    //             return <CardContent className={classes.cardNum}>{typeStr}</CardContent>\n    //         }\n    // }\n\n    // const makeCardForNewProcess = (key) => {\n    //     const fieldTypeArr = TableInfo[tableState.title][key].split('/');\n    //     // const fieldArr = currentTable[key].split(',');\n    //     if (key === \"Qualified_Thickness_Range\" || key === \"Pipe_Diameter_Range\" && clonedTable[key][1] !== undefined) {\n    //         const fieldDataN = clonedTable[key][1].split('~')\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldDataN[0]} fullWidth variant=\"outlined\" \n    //                         onChange={e=> {\n    //                             fieldDataN[0] = e.target.value\n    //                             let newArr = clonedTable[key]\n    //                             newArr[1] = fieldDataN.join('~')\n    //                             setClonedTable({\n    //                                 ...clonedTable,\n    //                                 [key]: newArr});\n    //                         }}/>\n    //                         <CardContent className={classes.cardNum}>~</CardContent>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldDataN[1]} fullWidth variant=\"outlined\" \n    //                         onChange={e=> {\n    //                             fieldDataN[1] = e.target.value\n    //                             let newArr = clonedTable[key]\n    //                             newArr[1] = fieldDataN.join('~')\n    //                             setClonedTable({\n    //                                 ...clonedTable,\n    //                                 [key]: newArr});\n    //                         }}/>\n    //                         <CardContent className={classes.cardNum}>mm</CardContent>\n    //                     </Card>)\n    //     }\n    //     if (fieldTypeArr.length <= 1) {\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 320px'}}>\n    //                     <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                     {fieldTypeArr.map((typeStr, idx) => {\n    //                         return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n    //                     })}\n    //                 </Card>)\n    //     } else if (fieldTypeArr.length === 2) {\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 158px 158px'}}>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                         {fieldTypeArr.map((typeStr, idx) => {\n    //                             return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n    //                         })}\n    //                     </Card>)\n    //     } else if (fieldTypeArr.length === 3) {\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 105px 105px 105px'}}>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                         {fieldTypeArr.map((typeStr, idx) => {\n    //                             return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n    //                         })}\n    //                     </Card>)\n    //     } else if (fieldTypeArr.length === 4) {\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                         {fieldTypeArr.map((typeStr, idx) => {\n    //                             return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n    //                         })}\n    //                     </Card>)\n    //     } else if (fieldTypeArr.length === 5) {\n    //         return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 70px 70px 30px 70px 70px'}}>\n    //                         <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n    //                         {fieldTypeArr.map((typeStr, idx) => {\n    //                             return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n    //                         })}\n    //                     </Card>)\n    //     }\n    // }\n\n    const moveTable = (to) => {\n        const toMove = tableState.current + to;\n        console.log(toMove)\n        if (toMove >= 0 && toMove <=tableState.total-1) {\n            setTableState(prevState => ({\n                ...prevState,\n                current: toMove,\n                title: WPS_tables[toMove]\n            }));\n            setCurrentTable({})\n            const loadTable = cloneDeep(ocrData[WPS_tables[toMove]][\"fields\"]);\n            Object.keys(loadTable).forEach((key)=> {\n                loadTable[key][0] = loadTable[key].join(' ')\n                for (let i=1; i<loadTable[key].length; i++) {\n                    loadTable[key][i] = \"\"\n                }\n            })\n            setCurrentTable(loadTable);\n            setTableAreaRect({...tableAreaRect,\n                top: 800*ocrData[WPS_tables[toMove]][\"area\"][\"top\"],\n                left: 600*ocrData[WPS_tables[toMove]][\"area\"][\"left\"],\n                width: 600*(ocrData[WPS_tables[toMove]][\"area\"][\"right\"] - ocrData[WPS_tables[toMove]][\"area\"][\"left\"]),\n                height: 800*(ocrData[WPS_tables[toMove]][\"area\"][\"bottom\"] - ocrData[WPS_tables[toMove]][\"area\"][\"top\"]),\n            })\n            setProcessState({\n                ...processState,\n                count: 1\n            })\n            if (processAvailbleTables.includes(WPS_tables[toMove])) {\n                setTableState(prevState => ({\n                    ...prevState,\n                    isProcessAvailable: true\n                }))\n            } else {\n                setTableState(prevState => ({\n                    ...prevState,\n                    isProcessAvailable: false\n                }))\n            }\n        }\n    }\n\n    const addProcess = () => {\n        if(processState.count === 1) {\n            const loadTable = cloneDeep(ocrData[WPS_tables[tableState.current]][\"fields\"]);\n            Object.keys(loadTable).forEach((key)=> {\n                loadTable[key][0] = loadTable[key].join(' ')\n                for (let i=1; i<loadTable[key].length; i++) {\n                    loadTable[key][i] = \"\"\n                }\n            })\n            setClonedTable(loadTable);\n            setProcessState({\n                ...processState,\n                count: 2\n            })\n            console.log(\"here??\")\n        } else if (processState.count === 2) {\n            const loadTable = cloneDeep(ocrData[WPS_tables[tableState.current]][\"fields\"]);\n            Object.keys(loadTable).forEach((key)=> {\n                loadTable[key][0] = loadTable[key].join(' ')\n                for (let i=1; i<loadTable[key].length; i++) {\n                    loadTable[key][i] = \"\"\n                }\n            })\n            setClonedTable2(loadTable);\n            setProcessState({\n                ...processState,\n                count: 3\n            })\n            console.log(\"here?????\")\n        }\n        console.log(processState)\n    }\n\n    const deleteProcess = (position) => {\n        if (position === 2) {\n            if (processState.count === 3) {\n                setClonedTable(clonedTable2)\n                setProcessState({\n                    ...processState,\n                    count: 2,\n                    second: processState.third\n                }) \n            }\n            else if (processState.count === 2) {\n                setProcessState({\n                    ...processState,\n                    count: 1\n                })\n            }\n        } else if (position === 3) {\n            setProcessState({\n                ...processState,\n                count: 2\n            })\n        }\n    }\n\n    const submitTable = () => {\n        if (tableState.finished.indexOf(tableState.current) === -1) {\n            setTableState({\n                ...tableState,\n                finished: tableState.finished.concat(tableState.current)\n            })\n        }\n        let tempJson = {}\n        for (let key in currentTable) {\n            tempJson = {\n                ...tempJson,\n                [key]: currentTable[key]\n            }\n        }\n        if (tableState.isProcessAvailable) {\n            if (processState.count === 2) {\n                let tempJsonC = {}\n                for (let key in clonedTable) {\n                    tempJsonC = {\n                        ...tempJsonC,\n                        [key]: clonedTable[key]\n                    }\n                }\n                setDBState((prevState) => ({\n                    ...prevState,\n                    [tableState.title]: [{\n                        \"field\": {...tempJsonC},\n                        \"Process\": processState.second,\n                    },{\n                        \"field\": {...tempJson},\n                        \"Process\": processState.first,\n                    }]\n                }))\n            } else if (processState.count === 3) {\n                let tempJsonC = {}\n                for (let key in clonedTable) {\n                    tempJsonC = {\n                        ...tempJsonC,\n                        [key]: clonedTable[key]\n                    }\n                }\n                let tempJsonC2 = {}\n                for (let key in clonedTable2) {\n                    tempJsonC2 = {\n                        ...tempJsonC2,\n                        [key]: clonedTable2[key]\n                    }\n                }\n                setDBState((prevState) => ({\n                    ...prevState,\n                    [tableState.title]: [{\n                        \"field\": {...tempJsonC2},\n                        \"Process\": processState.third,\n                    },{\n                        \"field\": {...tempJsonC},\n                        \"Process\": processState.second,\n                    },{\n                        \"field\": {...tempJson},\n                        \"Process\": processState.first,\n                    }]\n                }))\n            } else {\n                setDBState((prevState) => ({\n                    ...prevState,\n                    [tableState.title]: {\n                        \"field\": {...tempJson},\n                        \"Process\": processState.first,\n                    }\n                }))\n            }\n        } else {\n            setDBState((prevState) => ({\n                ...prevState,\n                [tableState.title]: {\n                    \"field\": {...tempJson},\n                }\n            }))\n        }\n        console.log(processState)\n        console.log(tempJson);\n        console.log(DBState);\n    }\n\n    const saveDB = () => {\n        setLoadingDialogOpen(true)\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"DB\",\n                \"data\": [\n                    {\n                        ...DBState\n                    }\n                ]\n        })\n        .then((res) => {\n            console.log(res);\n            setSaveState(true);\n            setTimeout(() => {\n                setLoadingDialogOpen(false)\n                history.push('/')\n            }, 5000);\n        })\n        .catch((err) => {\n            console.log(err);\n            enqueueSnackbar('에러 발생', {variant: 'error'})\n        })\n    }\n\n    \n    useEffect(() => {   \n        if (props.ocrData !== null) {\n            console.log(props.userFile);\n            console.log(ocrData);\n            console.log(ocrData[WPS_tables[0]]);\n            const loadTable = cloneDeep(ocrData[WPS_tables[0]][\"fields\"]);\n            Object.keys(loadTable).forEach((key)=> {\n                loadTable[key][0] = loadTable[key].join(' ')\n                for (let i=1; i<loadTable[key].length; i++) {\n                    loadTable[key][i] = \"\"\n                }\n            })\n            setCurrentTable(loadTable);\n            setTableState({\n                total: Object.keys(ocrData).length-2,\n                current: 0,\n                finished: [],\n                title: WPS_tables[0],\n                isProcessAvailable: false\n            })\n            setProcessState({\n                ...processState,\n                count: 1\n            })\n            console.log(processState)\n            setTableAreaRect({...tableAreaRect,\n                top: 800*ocrData[WPS_tables[0]][\"area\"][\"top\"],\n                left: 600*ocrData[WPS_tables[0]][\"area\"][\"left\"],\n                width: 600*(ocrData[WPS_tables[0]][\"area\"][\"right\"] - ocrData[WPS_tables[0]][\"area\"][\"left\"]),\n                height: 800*(ocrData[WPS_tables[0]][\"area\"][\"bottom\"] - ocrData[WPS_tables[0]][\"area\"][\"top\"]),\n            })\n            console.log(Object.keys(currentTable));\n            setDBState({\n                \"Company\": ocrData[\"Company\"]\n            });\n        }\n    }, []);\n\n    return (\n        <>\n        <div className={classes.title}>\n            <Typography variant=\"h5\" noWrap >\n                <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Inspect -  {props.userFile ? props.userFile.name : \"파일 없음\"}\n                </Box>\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={saveDB}><SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장</Button>\n        </div>\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"simple-dialog-title\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"simple-dialog-title\">DB Save</DialogTitle>\n            <List style={{ margin:15 }}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\n                    {!saveState ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n        <div className={classes.content}>\n            <div>\n                <Typography>\n                    OCR 결과\n                    <IconButton onClick={() => setZoomState(zoomState + 1)}><ZoomInIcon fontSize=\"small\"/></IconButton>\n                    <IconButton onClick={() => setZoomState(zoomState - 1)}><ZoomOutIcon fontSize=\"small\"/></IconButton>\n                </Typography>\n                <Paper elevation={1} className={classes.leftPaper}>\n                    <Document \n                    file={props.userFile}\n                    onLoadError={console.error}\n                    onLoadSuccess={onDocumentLoadSuccess}\n                    noData={\n                        <div style={{marginTop:30, textAlign: \"center\"}}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>\n                    }>\n                        <Page height={400} pageNumber={pageNumber} scale={zoomState}>\n                            <div style={{\n                                position:'absolute', \n                                left: tableAreaRect.left*zoomState/2, \n                                top: tableAreaRect.top*zoomState/2, \n                                width: tableAreaRect.width*zoomState/2, \n                                height: tableAreaRect.height*zoomState/2, \n                                border: 'dashed 3px', textAlign: 'center'\n                            }}>\n                            </div>\n                        </Page>\n                    </Document>\n                </Paper>\n                <Grid container>\n                    <Button className={classes.prevBtn} variant=\"outlined\" disabled={pageNumber === 1 ? true : false} onClick={() => setPageNumber(pageNumber-1)}>이전페이지</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" disabled={pageNumber === numPages || numPages === null ? true : false} onClick={() => setPageNumber(pageNumber+1)}>다음페이지</Button>\n                </Grid>\n            </div>\n            \n            {!tableState.title.includes(\"408\") ? <div>\n                <Typography>Table - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Typography>\n                <Paper elevation={1} className={classes.rightPaper}>\n                <div style={{display: \"flex\"}}>\n                    <div style={{display: \"grid\", gap: 10, gridTemplateColumns: processState.count===1 ? '140px 360px': processState.count===2 ? '140px 190px 180px' :'140px 130px 130px 120px'}}>\n                        <Typography>{tableState.title}&nbsp;&nbsp;&nbsp;&nbsp;</Typography>\n                        {tableState.isProcessAvailable ? \n                            <select\n                            onChange={(e) => {\n                                setProcessState((prevState) => ({...prevState, first: e.target.value}));\n                                console.log(\"here\")\n                            }}\n                            className={classes.select}\n                            defaultValue={\"GTAW\"}\n                            value={processState.first}\n                            >\n                                <option value={\"GTAW\"}>GTAW</option>\n                                <option value={\"SMAW\"}>SMAW</option>\n                                <option value={\"GMAW\"}>GMAW</option>\n                                <option value={\"FCAW\"}>FCAW</option>\n                                <option value={\"SAW\"}>SAW</option>\n                            </select> : null}\n                        {processState.count >= 2 ?\n                            <div style={{display:'flex'}}>\n                                <select\n                                onChange={(e) => {\n                                    setProcessState((prevState) => ({...prevState, second: e.target.value}));\n                                    console.log(\"here\")\n                                }}\n                                className={classes.select}\n                                defaultValue={\"GTAW\"}\n                                value={processState.second}\n                                >\n                                    <option value={\"GTAW\"}>GTAW</option>\n                                    <option value={\"SMAW\"}>SMAW</option>\n                                    <option value={\"GMAW\"}>GMAW</option>\n                                    <option value={\"FCAW\"}>FCAW</option>\n                                    <option value={\"SAW\"}>SAW</option>\n                                </select>\n                                <img src={deleteIcon} style={{\n                                    cursor: 'pointer'\n                                }} onClick={() => deleteProcess(2)}/>\n                            </div>\n                            : null}\n                        {processState.count === 3 ? \n                            <div style={{display:'flex'}}>\n                                <select\n                                onChange={(e) => {\n                                    setProcessState((prevState) => ({...prevState, third: e.target.value}));\n                                    console.log(\"here\")\n                                }}\n                                className={classes.select}\n                                defaultValue={\"GTAW\"}\n                                value={processState.third}\n                                >\n                                    <option value={\"GTAW\"}>GTAW</option>\n                                    <option value={\"SMAW\"}>SMAW</option>\n                                    <option value={\"GMAW\"}>GMAW</option>\n                                    <option value={\"FCAW\"}>FCAW</option>\n                                    <option value={\"SAW\"}>SAW</option>\n                                </select>\n                                <img src={deleteIcon} style={{\n                                    cursor: 'pointer'\n                                }} onClick={() => deleteProcess(3)}/>\n                            </div>\n                        : null}\n                    </div>\n                    {tableState.isProcessAvailable && processState.count !== 3 ? \n                    <img src={addIcon} style={{\n                        cursor: 'pointer'\n                    }} onClick={addProcess}/> \n                    : null}\n                </div>\n                \n                <div style={{display: \"grid\", gridTemplateColumns: processState.count===1 ? '140px 400px': processState.count===2 ? '140px 195px 180px' :'140px 135px 135px 125px'}}>\n                    <div>\n                        {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                                return (\n                                <div className={classes.tableCard}>\n                                    <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                                </div>)\n                            }) : null}\n                    </div>\n                    <div>\n                        {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                                return makeCard(key, null)\n                            }) : null}\n                    </div>\n                    {processState.count>=2 ? <div style={{borderLeft: '0.2px dashed gray'}}>\n                        {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                                return makeCard(key, 1)\n                            }) : null}\n                    </div> : null}\n                    {processState.count===3 ? <div style={{borderLeft: '0.2px dashed gray'}}>\n                        {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                                return makeCard(key, 2)\n                            }) : null}\n                    </div> : null}\n                </div>                \n                </Paper>\n                <Grid container>\n                    <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\n                    <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\n                </Grid>\n            </div> : null}\n\n            {tableState.title.includes(\"408\") ? <div>\n                <Typography>Table - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Typography>\n                <Paper elevation={1} className={classes.rightPaper}>\n                <div>\n                    <div style={{display: \"grid\", gap: 10, gridTemplateColumns: '140px 130px 130px 120px'}}>\n                        {tableState.isProcessAvailable ? \n                            <select\n                            onChange={(e) => {\n                                setProcessState((prevState) => ({...prevState, first: e.target.value}));\n                                console.log(\"here\")\n                            }}\n                            className={classes.select}\n                            defaultValue={\"GTAW\"}\n                            value={processState.first}\n                            >\n                                <option value={\"GTAW\"}>GTAW</option>\n                                <option value={\"SMAW\"}>SMAW</option>\n                                <option value={\"GMAW\"}>GMAW</option>\n                                <option value={\"FCAW\"}>FCAW</option>\n                                <option value={\"SAW\"}>SAW</option>\n                            </select> : null}\n                        \n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Shielding\"} fullWidth variant=\"outlined\" />\n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Backing\"} fullWidth variant=\"outlined\" />\n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Trailing\"} fullWidth variant=\"outlined\" />\n                    </div>\n                </div>\n                <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\n                    <div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        \n                    </div>\n                    <div style={{display: 'flex'}}>\n                        {makeCardforGas(Object.keys(currentTable)[0], null)}\n                        {makeCardforGas(Object.keys(currentTable)[1], null)}\n                        {makeCardforGas(Object.keys(currentTable)[2], null)}\n                        {/* {currentTable !== null ? \n                        Object.keys(currentTable).map((key, idx) => {\n                            return (<div style={{}}>\n                                        {makeCardforGas(key, null)}\n                                    </div>\n                        )\n                        }) : null} */}\n                    </div>\n                    <div className={classes.tableCard}>\n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\n                    </div>\n                    {makeCardforGas(Object.keys(currentTable)[3], null)}\n                </div>\n\n                {processState.count >= 2 ? <>\n                <div style={{marginTop:5, paddingTop:5, borderTop: '0.2px dashed gray'}}>\n                    <div style={{display: \"grid\", gap: 10, gridTemplateColumns: '140px 130px 130px 120px'}}>\n                        {tableState.isProcessAvailable ? \n                            <select\n                            onChange={(e) => {\n                                setProcessState((prevState) => ({...prevState, second: e.target.value}));\n                                console.log(\"here\")\n                            }}\n                            className={classes.select}\n                            defaultValue={\"GTAW\"}\n                            value={processState.second}\n                            >\n                                <option value={\"GTAW\"}>GTAW</option>\n                                <option value={\"SMAW\"}>SMAW</option>\n                                <option value={\"GMAW\"}>GMAW</option>\n                                <option value={\"FCAW\"}>FCAW</option>\n                                <option value={\"SAW\"}>SAW</option>\n                            </select> : null}\n                        \n                        <div></div>\n                        <div></div>\n                        <img src={deleteIcon} style={{\n                                    cursor: 'pointer',\n                                    display: 'flex',\n                                    marginLeft: 'auto'\n                                }} onClick={() => deleteProcess(2)}/>\n                    </div>\n                </div>\n                <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\n                    <div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        \n                    </div>\n                    <div style={{display: 'flex'}}>\n                        {makeCardforGas(Object.keys(currentTable)[0], 1)}\n                        {makeCardforGas(Object.keys(currentTable)[1], 1)}\n                        {makeCardforGas(Object.keys(currentTable)[2], 1)}\n                        {/* {currentTable !== null ? \n                        Object.keys(currentTable).map((key, idx) => {\n                            return (<div style={{}}>\n                                        {makeCardforGas(key, null)}\n                                    </div>\n                        )\n                        }) : null} */}\n                    </div>\n                    <div className={classes.tableCard}>\n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\n                    </div>\n                    {makeCardforGas(Object.keys(currentTable)[3], 1)}\n                </div>\n                </> : null}\n\n\n                {processState.count === 3 ? <>\n                <div style={{marginTop:5, paddingTop:5, borderTop: '0.2px dashed gray'}}>\n                    <div style={{display: \"grid\", gap: 10, gridTemplateColumns: '140px 130px 130px 120px'}}>\n                        {tableState.isProcessAvailable ? \n                            <select\n                            onChange={(e) => {\n                                setProcessState((prevState) => ({...prevState, third: e.target.value}));\n                                console.log(\"here\")\n                            }}\n                            className={classes.select}\n                            defaultValue={\"GTAW\"}\n                            value={processState.third}\n                            >\n                                <option value={\"GTAW\"}>GTAW</option>\n                                <option value={\"SMAW\"}>SMAW</option>\n                                <option value={\"GMAW\"}>GMAW</option>\n                                <option value={\"FCAW\"}>FCAW</option>\n                                <option value={\"SAW\"}>SAW</option>\n                            </select> : null}\n                        \n                        <div></div>\n                        <div></div>\n                        <img src={deleteIcon} style={{\n                                    cursor: 'pointer',\n                                    display: 'flex',\n                                    marginLeft: 'auto'\n                                }} onClick={() => deleteProcess(3)}/>\n                    </div>\n                </div>\n                <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\n                    <div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        <div className={classes.tableCard}>\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\n                        </div>\n                        \n                    </div>\n                    <div style={{display: 'flex'}}>\n                        {makeCardforGas(Object.keys(currentTable)[0], 2)}\n                        {makeCardforGas(Object.keys(currentTable)[1], 2)}\n                        {makeCardforGas(Object.keys(currentTable)[2], 2)}\n                        {/* {currentTable !== null ? \n                        Object.keys(currentTable).map((key, idx) => {\n                            return (<div style={{}}>\n                                        {makeCardforGas(key, null)}\n                                    </div>\n                        )\n                        }) : null} */}\n                    </div>\n                    <div className={classes.tableCard}>\n                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\n                    </div>\n                    {makeCardforGas(Object.keys(currentTable)[3], 2)}\n                </div>\n                </> : null}\n                {tableState.isProcessAvailable && processState.count !== 3 ? \n                    <img src={addIcon} style={{\n                        cursor: 'pointer',\n                        display: 'flex',\n                        marginLeft: 'auto'\n                    }} onClick={addProcess}/> \n                    : null}           \n                </Paper>    \n                <Grid container>\n                    <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\n                    <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\n                </Grid>\n            </div> : null}\n\n\n        </div>\n        <Typography style={{marginTop: 10}}>Note</Typography>\n        <Paper elevation={1} className={classes.notePaper}>\n                    {ocrData !== null ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\n                        return <div style={{fontSize: 14}}>{item}<br></br></div>\n                    }) : null}\n        </Paper>\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo_otos.103138a0.svg\";","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { refreshAuth, logout } from './auth.js';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport Inspector from './Inspector.js';\nimport logo from './img/logo_otos.svg';\n\nconst myTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        background: '#ffffff',\n        // background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 50,\n        // boxShadow: 'none'\n    },\n    toolBar: {\n        minHeight: 50,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        zIndex: 1400,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 60,\n        marginLeft: 24\n    }\n}));\n\nexport default function ClippedDrawer() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [userFile, setUserFile] = useState(null);\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n    <Router>\n\n    <div className={classes.root}>\n    <CssBaseline />\n\n    <AppBar className={classes.appBar} elevation={4}>\n        <Toolbar className={classes.toolBar}>\n        <Grid container justify=\"center\">\n            <img style={{height: 40}} src={logo}></img>\n        </Grid>\n          {/* <Typography variant=\"h6\">\n            <Box fontWeight=\"fontWeightBold\">\n                WeldBeing\n            </Box>\n          </Typography>\n          <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n            onClick={() => {\n                // logout();\n                // history.push(\"/login\");\n            }}>\n            <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                User | 로그아웃\n            </Box>\n          </Button> */}\n        </Toolbar>\n    </AppBar>\n\n    <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <Toolbar className={classes.toolBar} disableGutters={true}/>\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n            </ListItem>\n            <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n            </ListItem>\n          </List>\n        </div>\n    </Drawer>\n\n      <main className={classes.content}>\n        <Switch>\n            <Route exact path=\"/\" render={() => <Uploader getFile={(file) => setUserFile(file)} getOcrData={(data) => setOcrData(data)}/>} />\n            <Route exact path=\"/inspect\" render={() => <Inspector userFile={userFile} ocrData={ocrData}/>} />\n            {/* <AuthRoute path=\"/Schedule\" render={() => <Schedule />} />\n            <AuthRoute path=\"/Contents\" render={() => <Contents />} />\n            <AuthRoute path=\"/Devices\" render={() => <Devices />} />\n            <AuthRoute path=\"/Stats\" render={() => <Stats />} /> */}\n        </Switch>\n      </main>\n    </div>\n    </Router>\n    </ThemeProvider>\n  );\n}\n","import './App.css';\nimport LoginPage from './LoginPage.js';\nimport ClippedDrawer from './Main.js';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\nimport AuthRoute from './AuthRoute';\n\nfunction App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      {/* <Route path=\"/login\" render={() => <LoginPage />} /> */}\n      <Route path=\"/\" render={() => <ClippedDrawer />} />\n      {/* <AuthRoute path=\"/Schedule\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Contents\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Devices\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Stats\" render={() => <ClippedDrawer />} /> */}\n    </Router>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n      <App />\n    </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}