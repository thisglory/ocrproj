{"version":3,"sources":["DataDef.js","NewInspector.js","img/icon_add_process.svg","Uploader.js","img/logo_otos.svg","AuthRoute.js","Main.js","LoginPage.js","App.js","reportWebVitals.js","index.js","img/icon_delete_process.svg","img/icon_add_item.svg"],"names":["EXCEPT_TABLES","PREDEFINED_FIELDS","PROCESS_UNAVAILABLE_TABLES","useStyles","makeStyles","title","display","gap","content","width","marginTop","marginLeft","content_info","leftPaper","height","overflow","rightPaper","padding","background","topPaper","bottomPaper","notePaper","dbBtn","prevBtn","color","fontSize","nextBtn","submitTableBtn","tableCard","paddingLeft","tableCardGas","cardNum","fontWeight","select","marginRight","preDefinedSelect","inlineSelect","formControl","border","borderColor","borderRadius","addItemBtn","cursor","addTextFieldBtn","dateInput","guide","textAlign","dashedRect","position","leftSide","marginBottom","rightSide","deleteProcessBtn","addProcessBtn","addGasProcessBtn","float","secondProcess","borderLeft","thirdProcess","secondGasProcess","paddingTop","borderTop","thirdGasProcess","gasTable","gridTemplateColumns","watermark","userSelect","left","top","zIndex","opacity","bottomWatermark","leftTable","rightTable","processArea","processTab","electrodeFieldName","backgroundColor","electrodeFieldValue","NewInspector","props","classes","history","useHistory","ocrData","useSnackbar","enqueueSnackbar","closeSnackbar","useState","total","current","zoom","docState","setDocState","rectArea","setRectArea","list","finished","isProcessAvailable","checktype","comment","tableState","setTableState","ocrTable","setOcrTable","currentTable","setCurrentTable","count","first","second","third","processState","setProcessState","DBState","setDBState","isDUPChecked","setIsDUPChecked","isDBSave","setIsDBSave","loadingDialogOpen","setLoadingDialogOpen","setTable","key","value","process","prevState","1","2","0","setTableForED","idx","undefined","deleteTableKey","tempTable","deleteTableKeyForED","numCheck","isNaN","Number","makeField","typeStr","disabled","isValid","checkFunc","isError","margin","inputProps","style","fullWidth","variant","error","onChange","e","target","type","className","defaultValue","map","item","selected","src","addItemIcon","onClick","alt","deleteIcon","multiline","rowsMax","makeFieldForED","console","log","moveTable","to","toMove","loadTable","cloneDeep","includes","Object","keys","forEach","join","i","length","moveProcess","deleteProcess","useEffect","sortedTableKeys","filter","sort","push","m","fileName","axios","post","docId","then","res","setTimeout","catch","err","data","body","result","duplicate","open","aria-labelledby","maxWidth","id","noWrap","size","elevation","file","fileURL","onLoadError","onLoadSuccess","numPages","noData","pageNumber","scale","container","replace","checked","label","InputLabelProps","shrink","alignSelf","addIcon","concat","theme","uploader","controller","uploadBtn","fileManager","headerRow","fileList","overflowX","fileRow","letterSpacing","rowDivider","borderBottom","inspectBtn","editBtn","disabledBtn","dialogContent","version","fileDialog","alignItems","justifyContent","fileDescription","closeDialogBtn","dialogHeaderRow","docList","docRow","Uploader","tempFile","setTempFile","fileDialogOpen","setFileDialogOpen","upload","ocr","uploadState","setUploadState","setFileList","setDocList","loadFileList","loadOcrData","wpsId","Promise","reject","message","setDocId","setOcrData","setFileURL","download_url","InspectBtn","Button","EditBtn","showBtn","status","Box","component","accept","preventDefault","files","name","put","upload_url","headers","timeout","clearInterval","timer","setInterval","clearTimeout","fileId","file_name","setFileName","upload_time","complete_time","Dialog","DialogTitle","List","ListItem","Typography","CircularProgress","WPS_List","doc","code_type","inspect_time","PQR_List","AuthRoute","Component","render","rest","sessionStorage","accessToken","crypto","createHash","update","digest","pathname","state","from","location","myTheme","createMuiTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","root","appBar","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","Main","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","Grid","justify","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","url","LoginPage","password","setPassword","flexDirection","logincard","form","submit","Container","Card","onSubmit","setItem","noValidate","TextField","required","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"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","file":"static/js/main.8ed7d058.chunk.js","sourcesContent":["export const TABLE_INFO = { // T: Textfield, D: Date, P: Pre-defined selector, AP: Addible Pre-defined selector, etc: text로 처리.\n    \"WPS_Doc_Info\": {\n        \"WPS_No\": \"T\",\n        \"Date\": \"T/D\",\n        \"Impact_Test\": \"T/P/ /T/°C\",\n        \"Rev_No\": \"T\",\n        \"Rev_Date\": \"T\",\n        \"Supporting_PQR_No\": \"T/T/T\",\n        \"Welding_Process\": \"T/AP\",\n        \"Type\": \"T/AP\",\n        \"Code\": \"T\"\n    }, \"WPS_QW_402\": {\n        \"Type_of_Joint\": \"T\",\n        \"Backing\": \"T/P\",\n        \"Backing_Material\": \"T/P/P\",\n        \"Root_Spacing\": \"T/~/T/mm\",\n        \"Retainers\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_403\": {\n        \"P_No\": \"T\",\n        \"Gr_No\": \"T/T/T\",\n        \"to_P_No\": \"T\",\n        \"to_Gr_No\": \"T/T/T\",\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_404\": {\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"Specification_No\": \"T\",\n        \"AWS_Class\": \"T\",\n        \"Brand_Name\": \"T\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Filler_Product_Form\": \"T\",\n        \"Size\": \"T/T/mm\",\n        \"Supplemental\": 'T',\n        \"Alloy_Element\": \"T\",\n        \"Flux_Wire_Class\": \"T\",\n        \"Alloy_Flux\": \"T\",\n        \"Flux_Trade_Name\": \"T\",\n        \"Flux_Type\": \"T\",\n        \"Recrushed_Slag\": \"T\",\n        \"Consumable_Insert\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_405\": {\n        \"Position_of_Groove\": \"T/P\",\n        \"Position_of_Fillet\": \"T/P\",\n        \"Welding_Progression\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_406\": {\n        \"Min_Preheat_Temp\": \"T/°C\",\n        \"Max_Interpass_Temp\": \"T/°C\",\n        \"Preheat_Maintain\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_407\": {\n        \"Postweld_Heat_Treat_Temp\": \"T/~/T/°C\",\n        \"Holding_Time\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_408\": {\n        \"Shielding\": \"T/D/T/T/~/T/mm\",\n        \"Backing\": \"T/D/T/T/~/T/mm\",\n        \"Trailing\": \"T/D/T/T/~/T/mm\",\n        \"Shielding_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Backing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Trailing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_409\": {\n        \"Current\": \"T/P\",\n        \"Polarity\": \"T/P\",\n        \"Tungsten_Electrode_Type\": \"T\",\n        \"Tungsten_Electrode_Size\": \"T/T/mm\",\n        \"Pulsing_Current\": \"T\",\n        \"Mode_of_Metal_Transfer\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_410\": {\n        \"Stringer_or_Weave_Bead\": \"T/P\",\n        \"Orifice_Gas_Cup_or_Nozzle_Tip\": \"T/~/T/mm\",\n        \"Initial_or_Interpass_Cleaning\": \"T/AP\",\n        \"Contact_Tube_to_Work_Dist\": \"T/~/T/mm\",\n        \"Closed_to_Out_Chamber\": \"T\",\n        \"Use_of_Thermal_Process\": \"T\",\n        \"Method_of_Back_Gouging\": \"T/AP\",\n        \"Single_or_Multiple_Pass\": \"T\",\n        \"Single_or_Multiple_Electrode\": 'T',\n        \"Multiple_Electrode_Spacing\": \"T/mm\",\n        \"Peening\": \"T\",\n        \"Oscillation\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_ELECTRODE\": {\n        \"Layer_No\": \"T\",\n        \"Welding_Process\": \"T\",\n        \"MAX_WM_Thickness\": \"T\",\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"SFA_No\": \"T\",\n        \"Filler_Metal_Class\": \"T\",\n        \"Filler_Metal_Dia\": \"T\",\n        \"Current_Type_Polar\": 'T',\n        \"Current_Amperes_Range\": \"T\",\n        \"Voltage_Range\": \"T\",\n        \"Travel_Speed_mm_min\": \"T\",\n        \"Travel_Speed_cm_min\": \"T\",\n        \"Heat_Input_kJ_mm\": \"T\",\n        \"Heat_Input_kJ_cm\": \"T\",\n        \"Heat_Input_J_mm\": \"T\",\n        \"Shielding_Gas_Flow_Rate\": \"T\"\n    }, \"PQR_Doc_Info\": {\n        \"PQR_NO\": \"T\",\n        \"DATE\": \"T/D\",\n        \"WPS_NO\": \"T\",\n        \"WELDING_PROCESS\": \"T/AP\",\n        \"TYPE\": \"T/AP\"\n    }, \"PQR_QW_403\": {\n        \"P_NO\": \"T\",\n        \"GR_NO\": \"T/T/T\",\n        \"TO_P_NO\": \"T\",\n        \"TO_GR_NO\": \"T/T/T\",\n        \"SPEC_NO\": \"T/to/T\",\n        \"TYPE_GRADE\": \"T/to/T\",\n        \"THICKNESS\": \"T/mm\",\n        \"DIAMETER\": \"T/mm\",\n        \"MAX_THICKNESS_PER_PASS\": \"T/mm\",\n        \"DEPOSIT_WELD_METAL_THICKNESS\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_404\": {\n        \"F_NO\": \"T\",\n        \"A_NO\": \"T\",\n        \"SFA_NO\": \"T\",\n        \"AWS_CLASS\": \"T\",\n        \"FILLER_PRODUCT_FORM\": \"T\",\n        \"SIZE_OF_ELECTRODE\": \"T/T/mm\",\n        \"WIRE_FLUX_CLASS\": \"T\",\n        \"FLUX_TRADE_NAME\": \"T\",\n        \"BRAND\": \"T\",\n        \"SUPPLEMENTAL\": \"T\",\n        \"ALLOY_ELEMENTS\": \"T\",\n        \"DEPOSIT_WELD_METAL\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_405\": {\n        \"POSITION_OF_GROOVE\": \"T/P\",\n        \"PROGRESSION\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_406\": {\n        \"PREHEAT_TEMP\": \"T/°C\",\n        \"INTERPASS_TEMP\": \"T/°C\",\n        \"PREHEAT_MAINTAIN\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_407\": {\n        \"TEMPERATURE\": \"T/~/T/°C\",\n        \"HOLDING_TIME\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_408\": {\n        \"SHIELDING\": \"T/T/T\",\n        \"BACKING\": \"T/T/T\",\n        \"TRAILING\": \"T/T/T\",\n        \"SHIELDING_GAS\": \"T/T/T\",\n        \"BACKING_GAS\": \"T/T/T\",\n        \"TRAILING_GAS\": \"T/T/T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_409\": {\n        \"CURRENT\": \"T/P\",\n        \"POLARRITY\": \"T/P\",\n        \"TRANSFER_MODE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_TYPE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_SIZE\": \"T/T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_410\": {\n        \"STRINGER_OR_WEAVE_BEAD\": \"T/P\",\n        \"ORIFICE_OR_GAS_CUP_SIZE\": \"T/~/T/mm\",\n        \"METHOD_OF_CLEANING\": \"T/T\",\n        \"METHOD_OF_BACK_GOUGING\": \"T\",\n        \"CONTACT_TUBE_TO_WORK_DIST\": \"T/~/T/mm\",\n        \"SINGLE_OR_MULTIPLE_ELECTRODES\": 'T',\n        \"MULTIPASS_OR_SINGLE_PASS\": \"T\",\n        \"CLOSED_TO_OUT_CHAMBER\": \"T\",\n        \"USE_OF_THERMAL_PROCESSES\": \"T\",\n        \"OSCILLATION\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    },\n};\n\nexport const EXCEPT_TABLES = [ // 수정 제외 테이블\n    \"Company\", \"WPS_NOTES\", \"WPS_JOINT_DETAIL\", \"WPS_ELECTRODE\"\n]\n\nexport const PREDEFINED_FIELDS = { // 미리 정의된 selector option 리스트\n    \"Impact_Test_yesno\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Type\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"Welding_Process\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"Backing\": [\"YES\", \"NO\", \"NONE\", \"N/A\", \"YES OR NO\"],\n    \"Backing_Material\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"Backing_Material_groove\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"Backing_Material_fillet\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"Qualified_Thickness_Range_groove\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Qualified_Thickness_Range_fillet\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"Root_Spacing\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Retainers\": [\"YES\", \"NO\", \"NONE\", \"N/A\", \"YES OR NO\"],\n    \"Qualified_Thickness_Range\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Pipe_Diameter_Range\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Max_Pass_Thk_Limit_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Depo_Weld_Metal\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Depo_Weld_Metal_groove_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Depo_Weld_Metal_fillet_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n    \"Filler_Product_Form\": [\"BARE\", \"FLUX CORED\", \"FLUX COATED\", \"POWDER\"],\n    \"Position_of_Groove\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Position_of_Fillet\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Welding_Progression\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"Max_Interpass_Temp\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Postweld_Heat_Treat_Temp\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Postweld_Heat_Treat_Temp_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Holding_Time\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Holding_Time_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n    \"Interpass_Temp_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \n    \"Current\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"Polarity\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"Tungsten_Electrode_Size\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Tungsten_Electrode_Size_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n    \"Mode_of_Metal_Transfer\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"Stringer_or_Weave_Bead\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"Orifice_Gas_Cup_or_Nozzle_Tip\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Orifice_Gas_Cup_or_Nozzle_Tip_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"Contact_Tube_to_Work_Dist\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Contact_Tube_to_Work_Dist_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"Closed_to_Out_Chamber\": [\"YES\", \"NO\", \"N/A\"],\n    \"Use_of_Thermal_Process\": [\"YES\", \"NO\", \"N/A\"],\n    \"Single_or_Multiple_Pass\": [\"SINGLE\", \"MULTIPLE\", \"SINGLE OR MULTIPLE\"],\n    \"Single_or_Multiple_Electrode\": [\"SINGLE\", \"MULTIPLE\", \"SINGLE OR MULTIPLE\"],\n    \"Multiple_Electrode_Spacing\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Multiple_Electrode_Spacing_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"Oscillation\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Oscillation_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n    \"Initial_or_Interpass_Cleaning\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"Method_of_Back_Gouging\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"Shielding_Gas\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Shielding_Gas_select\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n\n    \"Backing_Gas\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Backing_Gas_select\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n\n    \"Trailing_Gas\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Trailing_Gas_select\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Current_Type\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"Current_Polar\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"Current_Amperes_Range_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Voltage_Range_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Travel_Speed_select\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"IMPACT_TEST\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"TYPE\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"WELDING_PROCESS\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"BACKING\": [\"YES\", \"NO\", \"YES OR NO\"],\n    \"BACKING_MATERIAL\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"ROOT_SPACING\": [\"NONE\", \"N/A\", \"VALUE\"],\n    \"RETAINERS\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_GROOVE\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_FILLET\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"WELDING_PROGRESSION\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"CURRENT\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"POLARRITY\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"MODE_OF_METAL_TRANSFER\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"STRINGER_OR_WEAVE_BEAD\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"INITIAL_OR_INTERPASS_CLEANING\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"METHOD_OF_BACK_GOUGING\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"SHIELDING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"BACKING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"TRAILING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n}\nexport const PROCESS_AVAILABLE_TABLES = [ // process 추가 가능 테이블\n    \"WPS_QW_404\", \n    \"WPS_QW_405\", \n    \"WPS_QW_408\", \n    \"WPS_QW_409\", \n    \"WPS_QW_410\", \n    \"PQR_QW_404\", \n    \"PQR_QW_405\", \n    \"PQR_QW_408\", \n    \"PQR_QW_409\", \n    \"PQR_QW_410\"\n]\n\nexport const PROCESS_UNAVAILABLE_TABLES = [\n    \"WPS_Doc_Info\",\n    \"WPS_JOINT_DETAIL\",\n    \"WPS_ELECTRODE\"\n]\n\nexport const PROCESS_OPTIONS = (\n    <>\n        <option value={\"GTAW\"}>GTAW</option>\n        <option value={\"SMAW\"}>SMAW</option>\n        <option value={\"GMAW\"}>GMAW</option>\n        <option value={\"FCAW\"}>FCAW</option>\n        <option value={\"SAW\"}>SAW</option>\n    </>)","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Checkbox, Grid, IconButton, Paper, TextField, InputBase, Dialog, DialogTitle, List, ListItem, CircularProgress, Box, Typography } from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack';\r\nimport { cloneDeep } from 'lodash';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport { TABLE_INFO, PREDEFINED_FIELDS, PROCESS_UNAVAILABLE_TABLES, EXCEPT_TABLES, PROCESS_OPTIONS } from './DataDef.js'\r\nimport addIcon from './img/icon_add_process.svg';\r\nimport addItemIcon from './img/icon_add_item.svg';\r\nimport deleteIcon from './img/icon_delete_process.svg'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex', \r\n        gap: 10\r\n    },\r\n    content: {\r\n        width: '1234px', \r\n        display: 'flex', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    content_info: {\r\n        width: '1234px', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    leftPaper: {\r\n        width: '650px', \r\n        height: '600px', \r\n        overflow: 'auto'\r\n    },\r\n    rightPaper: {\r\n        width: '600px', \r\n        height: '530px', \r\n        padding: 10,\r\n        overflow: 'auto',\r\n        background: \"rgba(238, 238, 238, 1)\"\r\n    },\r\n    topPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        overflow: 'auto'\r\n    },\r\n    bottomPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        marginTop: 20, \r\n        padding: 10,\r\n        overflow: 'auto',\r\n        background: \"rgba(238, 238, 238, 1)\"\r\n    },\r\n    notePaper: {\r\n        width: '1234px', \r\n        height: '136px', \r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n        padding: 10,\r\n        overflow: 'scroll'\r\n    },\r\n    dbBtn: {\r\n        marginTop: 10\r\n    },\r\n    prevBtn: {\r\n        width:126, \r\n        height:30, \r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10\r\n    },\r\n    nextBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    submitTableBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"#DD2818\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    tableCard: {\r\n        display: 'grid',\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    tableCardGas: {\r\n        width: 120,\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    cardNum: {\r\n        marginLeft: -10,\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        // textDecoration: 'underline'\r\n    },\r\n    select: {\r\n        width: 80,\r\n        height: 20,\r\n        marginRight: 10,\r\n        fontSize: 12\r\n    },\r\n    preDefinedSelect: {\r\n        height: 30,\r\n        marginTop: 5,\r\n        fontSize: 12\r\n    },\r\n    inlineSelect: {\r\n        height: 30,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    formControl: {\r\n        width: 80,\r\n        height: 20,\r\n        marginTop: '10px',\r\n        marginLeft: '0px',\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: '1px solid',\r\n          borderColor: \"#707070\",\r\n          borderRadius: \"4px\",\r\n        },\r\n    },\r\n    addItemBtn: {\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    addTextFieldBtn: {\r\n        marginTop: 15,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    dateInput: {\r\n        marginTop: 10,\r\n        height: 30\r\n    },\r\n    guide: {\r\n        marginTop: 30, \r\n        textAlign: \"center\"\r\n    },\r\n    dashedRect: {\r\n        position:'absolute', \r\n        border: 'dashed 3px',\r\n        textAlign: 'center'\r\n    },\r\n    leftSide: {\r\n        marginBottom: 20,\r\n    },\r\n    rightSide: {\r\n\r\n    },\r\n    deleteProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addGasProcessBtn: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        cursor: 'pointer'\r\n    },\r\n    secondProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    thirdProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    secondGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    thirdGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    gasTable: {\r\n        display: \"grid\", \r\n        gap: 10, \r\n        gridTemplateColumns: '140px 130px 130px 120px'\r\n    },\r\n    watermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 450,\r\n        left: 900,\r\n        top: 400,\r\n        zIndex: 100,\r\n        fontSize: 70,\r\n        opacity: 0.20\r\n    },\r\n    bottomWatermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 450,\r\n        left: 530,\r\n        top: 650,\r\n        zIndex: 100,\r\n        fontSize: 70,\r\n        opacity: 0.20\r\n    },\r\n    leftTable: {\r\n        display: \"grid\", \r\n        width: \"500px\", \r\n        marginLeft: \"10px\"\r\n    },\r\n    rightTable: {\r\n        display: \"grid\", \r\n        width: \"500px\",\r\n        marginLeft: \"100px\"\r\n    },\r\n    processArea: {\r\n        height: 32, \r\n        background: \"rgba(23, 62, 139, 1)\", \r\n        display: 'flex', \r\n        gap: 5\r\n    },\r\n    processTab: {\r\n        width: 67, \r\n        height: 24, \r\n        borderRadius: \"2px 2px 0px 0px\",\r\n        marginTop: 8, \r\n        padding: 5,\r\n        paddingLeft: 10,\r\n        fontSize:12, \r\n        fontWeight: 600,\r\n        cursor: 'pointer'\r\n    },\r\n    electrodeFieldName: {\r\n        fontSize: 12, \r\n        fontWeight: 600,\r\n        height: 45,\r\n        marginTop: 5, \r\n        backgroundColor: 'rgba(196, 196, 196, 1)', \r\n        padding: 6,\r\n        border: '1px solid gray'\r\n    },\r\n    electrodeFieldValue: {\r\n        fontSize: 12, \r\n        fontWeight: 400,\r\n        padding: 6,\r\n        border: '1px solid gray'\r\n    }\r\n});\r\n\r\nexport default function NewInspector(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const ocrData = props.ocrData;\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    // pdf document 상태 관리\r\n    const [docState, setDocState] = useState({ // pdf page, zoom\r\n        total: 0,\r\n        current: 1,\r\n        zoom: 2.2\r\n    });\r\n    const [rectArea, setRectArea] = useState({ // pdf 점선 사각형 범위\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n\r\n    });\r\n    const onDocumentLoadSuccess = ({numPages}) => { // pdf load 완료 시 호출 -> total page set\r\n        setDocState((prevState) => (\r\n            {...docState,\r\n            total: numPages}\r\n        ))\r\n    };\r\n\r\n    // table 상태 관리\r\n    const [tableState, setTableState] = useState({\r\n        list: [], // total table list\r\n        total: 0,\r\n        current: 0,\r\n        finished: [],\r\n        title: \"\",\r\n        isProcessAvailable: false,\r\n        checktype: false,\r\n        comment: \"\"\r\n    });\r\n\r\n    const [ocrTable, setOcrTable] = useState({}); // OCR 데이터 최초 로드 및 정제된 테이블\r\n    const [currentTable, setCurrentTable] = useState([]); // 수정용 현재 테이블\r\n\r\n    // process 상태 관리\r\n    const [processState, setProcessState] = useState({\r\n        count: 1, // 현재 프로세스 개수\r\n        first: \"GTAW\",  // idx 0\r\n        second: \"GTAW\", // idx 1\r\n        third: \"GTAW\", // idx 2\r\n        current: 0,\r\n    });\r\n\r\n    const [DBState, setDBState] = useState({}); // DB 전송용 정보 저장\r\n    const [isDUPChecked, setIsDUPChecked] = useState(false);\r\n    const [isDBSave, setIsDBSave] = useState(false);\r\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\r\n\r\n    const setTable = (key, value) => {\r\n        const process = processState.current;\r\n        if (process === 1) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                1: {\r\n                    ...prevState[1],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        } else if (process === 2) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                2: {\r\n                    ...prevState[2],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        } else {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                0: {\r\n                    ...prevState[0],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        }\r\n    };\r\n\r\n    const setTableForED = (key, value, idx) => {\r\n        if (currentTable[idx] === undefined) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                [idx]: {}\r\n            }))\r\n        }\r\n        setCurrentTable(prevState => ({\r\n            ...prevState,\r\n            [idx]: {\r\n                ...prevState[idx],\r\n                [key]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    const deleteTableKey = (key) => {\r\n        const process = processState.current;\r\n        if (process === 1) {\r\n            let tempTable = currentTable[1];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                1: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        } else if (process === 2) {\r\n            let tempTable = currentTable[2];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                2: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        } else {\r\n            let tempTable = currentTable[0];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                0: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    const deleteTableKeyForED = (key, idx) => {\r\n        let tempTable = currentTable[idx];\r\n        delete tempTable[key];\r\n        setCurrentTable(prevState => ({\r\n            ...prevState,\r\n            [idx]: {\r\n                ...tempTable\r\n            }\r\n        }));\r\n    }\r\n\r\n    const numCheck = value => {\r\n        if (isNaN(value)) {\r\n            return value\r\n        } else {\r\n            return Number(value)\r\n        }\r\n    };\r\n    \r\n\r\n    const makeField = (typeStr, value, key, idx, process, disabled, isValid, checkFunc) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        let isError = false\r\n        if (isValid === false) {\r\n            isError = true\r\n        }\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (value === undefined) { // 테이블에 해당 key 자체가 없을 경우\r\n                    setTable(key, \"\");\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={value} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}/>\r\n            case \"D\": // date input\r\n                if (value === undefined) {\r\n                    setTable(key, \"\")\r\n                }\r\n                return <input \r\n                type=\"date\"\r\n                className={classes.dateInput}\r\n                value={value} \r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                if (value === undefined) {\r\n                    setTable(key, PREDEFINED_FIELDS[key][0])\r\n                }\r\n                return <select\r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}\r\n                className={classes.inlineSelect}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={value}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (currentTable[processState.current][key+\"_1\"] === undefined) {\r\n                    setTable(key+\"_1\", PREDEFINED_FIELDS[key][0])\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_1\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_2\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_3\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_3\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] === undefined || currentTable[processState.current][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_2\"] === undefined) {\r\n                            setTable(key+\"_2\", PREDEFINED_FIELDS[key][0])\r\n                        } else {\r\n                            setTable(key+\"_3\", PREDEFINED_FIELDS[key][0])\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_3\"] !== undefined) {\r\n                            deleteTableKey(key+\"_3\")\r\n                        } else {\r\n                            deleteTableKey(key+\"_2\")\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            case \"AT\": // ADDIBLE textfield\r\n                if (currentTable[processState.current][key+\"_1\"] === undefined) {\r\n                    setTable(key+\"_1\", \"\")\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null }}} \r\n                    value={currentTable[processState.current][key+\"_1\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/>\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[processState.current][key+\"_2\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_3\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[processState.current][key+\"_3\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] === undefined || currentTable[processState.current][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addTextFieldBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_2\"] === undefined) {\r\n                            setTable(key+\"_2\", \"\")\r\n                        } else {\r\n                            setTable(key+\"_3\", \"\")\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addTextFieldBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_3\"] !== undefined) {\r\n                            deleteTableKey(key+\"_3\")\r\n                        } else {\r\n                            deleteTableKey(key+\"_2\")\r\n                        }\r\n                    }} alt=\"delete icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{style: {width: 120, fontSize: 12, fontWeight: 600, marginTop: 5, backgroundColor: 'rgba(196, 196, 196, 1)', padding: 4}}} value={typeStr} fullWidth variant=\"outlined\" />\r\n        }\r\n    }\r\n\r\n    const makeFieldForED = (typeStr, value, key, idx, process, disabled, isValid, checkFunc) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        let isError = false\r\n        if (isValid === false) {\r\n            isError = true\r\n        }\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (value === undefined) { // 테이블에 해당 key 자체가 없을 경우\r\n                    setTableForED(key, \"\", idx);\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={value} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    setTableForED(key, checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                if (value === undefined) {\r\n                    setTableForED(key, PREDEFINED_FIELDS[key][0], idx)\r\n                    console.log(\"here\")\r\n                }\r\n                return <select\r\n                onChange={e=> {\r\n                    setTableForED(key, checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                }}\r\n                className={classes.inlineSelect}\r\n                style={{border: '1px solid gray'}}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={value}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (currentTable[idx][key+\"_1\"] === undefined) {\r\n                    setTableForED(key+\"_1\", PREDEFINED_FIELDS[key][0], idx)\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_1\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_2\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[idx][key+\"_3\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_3\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] === undefined || currentTable[idx][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_2\"] === undefined) {\r\n                            setTableForED(key+\"_2\", PREDEFINED_FIELDS[key][0], idx)\r\n                        } else {\r\n                            setTableForED(key+\"_3\", PREDEFINED_FIELDS[key][0], idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_3\"] !== undefined) {\r\n                            deleteTableKeyForED(key+\"_3\", idx)\r\n                        } else {\r\n                            deleteTableKeyForED(key+\"_2\", idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            case \"AT\": // ADDIBLE textfield\r\n                if (currentTable[idx][key+\"_1\"] === undefined) {\r\n                    setTableForED(key+\"_1\", \"\", idx)\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null }}} \r\n                    value={currentTable[idx][key+\"_1\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/>\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[idx][key+\"_2\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[idx][key+\"_3\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[idx][key+\"_3\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] === undefined || currentTable[idx][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addTextFieldBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_2\"] === undefined) {\r\n                            setTableForED(key+\"_2\", \"\", idx)\r\n                        } else {\r\n                            setTableForED(key+\"_3\", \"\", idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addTextFieldBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_3\"] !== undefined) {\r\n                            deleteTableKeyForED(key+\"_3\", idx)\r\n                        } else {\r\n                            deleteTableKeyForED(key+\"_2\", idx)\r\n                        }\r\n                    }} alt=\"delete icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{style: {width: 120, fontSize: 12, fontWeight: 600, marginTop: 5, backgroundColor: 'rgba(196, 196, 196, 1)', padding: 4}}} value={typeStr} fullWidth variant=\"outlined\" />\r\n        }\r\n    }\r\n\r\n    const moveTable = (to) => { // 이전, 다음 테이블 이동 (to: -1 OR +1)\r\n        const toMove = tableState.current + to;\r\n        if (toMove >= 0 && toMove <=tableState.total-1) {\r\n            setTableState(prevState => ({\r\n                ...prevState,\r\n                current: toMove,\r\n                title: prevState.list[toMove],\r\n                isProcessAvailable: false,\r\n                checktype: false,\r\n                comment: \"\"\r\n            }));\r\n            const loadTable = cloneDeep(ocrData[tableState.list[toMove]][\"fields\"]);\r\n            if (!tableState.list[toMove].includes(\"ELECTRODE\")) {\r\n                Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                    loadTable[key][0] = loadTable[key].join(' ')\r\n                    for (let i=1; i<loadTable[key].length; i++) {\r\n                        loadTable[key][i] = \"\"\r\n                    }\r\n                });\r\n            }\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable(prevState => ({\r\n                0: {},\r\n                1: {},\r\n                2: {}\r\n            }))\r\n            if (!tableState.list[toMove].includes(\"ELECTRODE\")) {\r\n                setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                    top: 800*ocrData[tableState.list[toMove]][\"area\"][\"top\"],\r\n                    left: 550*ocrData[tableState.list[toMove]][\"area\"][\"left\"],\r\n                    width: 600*(ocrData[tableState.list[toMove]][\"area\"][\"right\"] - ocrData[tableState.list[toMove]][\"area\"][\"left\"]),\r\n                    height: 800*(ocrData[tableState.list[toMove]][\"area\"][\"bottom\"] - ocrData[tableState.list[toMove]][\"area\"][\"top\"]),\r\n                });\r\n            } else {\r\n                setCurrentTable(prevState => ({\r\n                    0: {}\r\n                }))\r\n                setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                });\r\n            }\r\n\r\n            setProcessState({ // process 상태 초기화\r\n                ...processState,\r\n                current: 0\r\n            });\r\n            console.log(ocrData)\r\n        }\r\n    }\r\n\r\n    const moveProcess = (to) => {\r\n        setProcessState({\r\n            ...processState,\r\n            current: to\r\n        });\r\n        console.log(currentTable[to])\r\n    }\r\n\r\n    const addProcess = () => { // process 추가\r\n        if (processState.count === 1) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        } else if (processState.count === 2) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 3\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteProcess = (position) => { // process 삭제\r\n        if (position === 2) { // 두번째 process 삭제\r\n            if (processState.count === 3) { // 중간 process 삭제\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 2,\r\n                    second: processState.third\r\n                });\r\n                setTable(\"Welding_Process_2\", processState.third)\r\n                deleteTableKey(\"Welding_Process_3\")\r\n            }\r\n            else if (processState.count === 2) {\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 1\r\n                });\r\n                deleteTableKey(\"Welding_Process_2\")\r\n            }\r\n        } else if (position === 3) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n            deleteTableKey(\"Welding_Process_3\")\r\n        }\r\n    }\r\n\r\n    const submitTable = () => { // 수정된 테이블 DB state 저장\r\n        console.log(currentTable);\r\n        if (!tableState.finished.includes(tableState.current)) { // finished 리스트에 없는 경우 현재 table 인덱스 추가\r\n            setTableState({\r\n                ...tableState,\r\n                finished: tableState.finished.concat(tableState.current)\r\n            });\r\n        }\r\n\r\n        Object.keys(currentTable).forEach((process, idx) => {\r\n            Object.keys(currentTable[idx]).forEach((key) => {\r\n                if (key.includes(\"select\")) {\r\n                    deleteTableKeyForED(key, idx)\r\n                }\r\n            })\r\n        })  \r\n\r\n        if (!PROCESS_UNAVAILABLE_TABLES.includes(tableState.title)) { // 프로세스 추가 가능 테이블 확인\r\n            if (processState.count === 2) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...currentTable[1]},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...currentTable[0]},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else if (processState.count === 3) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...currentTable[2]},\r\n                        \"Process\": processState.third,\r\n                    },{\r\n                        \"fields\": {...currentTable[1]},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...currentTable[0]},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...currentTable[0]},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            }\r\n        } else {\r\n            setDBState((prevState) => ({ // 추가 프로세스 없음\r\n                ...prevState,\r\n                [tableState.title]: [{\r\n                    \"fields\": {...currentTable[0]},\r\n                }]\r\n            }));\r\n        }\r\n        console.log(DBState)\r\n        console.log(tableState)\r\n    }\r\n\r\n    const checkDuplicate = () => {\r\n        enqueueSnackbar('Duplicate Checking ...')\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"WCHKDUP\",\r\n                \"wps_id\": props.docId,\r\n                \"wps_no\": DBState[\"WPS_Doc_Info\"][0][\"fields\"][\"WPS_No\"],\r\n                \"rev_no\": DBState[\"WPS_Doc_Info\"][0][\"fields\"][\"Rev_No\"]\r\n        })\r\n        .then((res) => {\r\n            if (res.data.body.result === \"OK\") {\r\n                if (res.data.body.duplicate === \"false\") {\r\n                    enqueueSnackbar('Duplicate OK (not duplicated)')\r\n                    setIsDUPChecked(true);\r\n                } else {\r\n                    enqueueSnackbar('에러 발생 : Duplicated Document', {variant: 'error'})\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    const saveDB = () => { // 서버 DB 저장 요청\r\n        setLoadingDialogOpen(true)\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"WINSERT\",\r\n                \"wps_id\": props.docId,\r\n                \"data\": [DBState]\r\n        })\r\n        .then((res) => {\r\n            setIsDBSave(true);\r\n            setTimeout(() => {\r\n                setLoadingDialogOpen(false)\r\n                history.push('/')\r\n            }, 5000);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => { // 최초 페이지 진입 시 데이터 세팅\r\n        if (props.ocrData !== null) {\r\n            const sortedTableKeys = Object.keys(ocrData).filter(key => !EXCEPT_TABLES.includes(key)).sort(); // 테이블 key 정렬\r\n            sortedTableKeys.push(\"WPS_ELECTRODE\")\r\n            console.log(sortedTableKeys)\r\n            setTableState({\r\n                total: sortedTableKeys.length,\r\n                current: 0,\r\n                finished: [],\r\n                title: sortedTableKeys[0],\r\n                isProcessAvailable: false,\r\n                list: sortedTableKeys\r\n            });\r\n            const loadTable = cloneDeep(ocrData[sortedTableKeys[0]][\"fields\"]); // 인덱스 0 테이블 로드 및 정제\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            })\r\n            console.log(loadTable)\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable(prevState => ({\r\n                0: {},\r\n                1: {},\r\n                2: {}\r\n            }))\r\n            setProcessState({\r\n                ...processState,\r\n                count: 1\r\n            })\r\n            setRectArea({...rectArea,\r\n                top: 800*ocrData[sortedTableKeys[0]][\"area\"][\"top\"],\r\n                left: 600*ocrData[sortedTableKeys[0]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[sortedTableKeys[0]][\"area\"][\"right\"] - ocrData[sortedTableKeys[0]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[sortedTableKeys[0]][\"area\"][\"bottom\"] - ocrData[sortedTableKeys[0]][\"area\"][\"top\"]),\r\n            })\r\n            // setDBState({ // DB state에 company 필드 임의 삽입\r\n            //     \"Company\": ocrData[\"Company\"]\r\n            // });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.title}>\r\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\r\n                Inspect -  {props.fileName}\r\n            </Box>\r\n            {isDUPChecked ? <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={saveDB}>\r\n                <SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장\r\n            </Button> : null}\r\n            {!isDUPChecked ? <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={checkDuplicate}>\r\n                <CheckIcon fontSize='small'/>&nbsp;&nbsp;중복 확인\r\n            </Button> : null}\r\n        </div>\r\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"loading-dialog\" maxWidth='xs' fullWidth={true}>\r\n            <DialogTitle id=\"loading-dialog\">DB Save</DialogTitle>\r\n            <List style={{ margin:15 }}>\r\n                <ListItem>\r\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\r\n                    {!isDBSave ? <CircularProgress size={20}/> : <DoneIcon />}\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n        <div className={!tableState.title.includes(\"Info\") && !tableState.title.includes(\"ELECTRODE\") ? classes.content : classes.content_info}>\r\n\r\n            <div className={classes.leftSide}>\r\n                <Box>\r\n                    OCR 결과\r\n                    {/* <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom + 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomInIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                    <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom - 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomOutIcon fontSize=\"small\"/>\r\n                    </IconButton> */}\r\n                </Box>\r\n\r\n                <Paper elevation={1} className={!tableState.title.includes(\"Info\") && !tableState.title.includes(\"ELECTRODE\") ? classes.leftPaper : classes.topPaper}>\r\n                    <Document \r\n                        file={props.fileURL}\r\n                        onLoadError={console.error}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                        noData={<div className={classes.guide}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>}>\r\n                        <Page height={400} pageNumber={docState.current} scale={docState.zoom}>\r\n                            <div \r\n                                className={classes.dashedRect}\r\n                                style={{\r\n                                    left: rectArea.left*docState.zoom/2, \r\n                                    top: rectArea.top*docState.zoom/2, \r\n                                    width: rectArea.width*docState.zoom/2, \r\n                                    height: rectArea.height*docState.zoom/2, \r\n                                }}/>\r\n                        </Page>\r\n                    </Document>\r\n                </Paper>\r\n                \r\n                <Grid container>\r\n                    <Button \r\n                        className={classes.prevBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === 1 ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current-1\r\n                            }))\r\n                        }}>\r\n                        이전페이지\r\n                    </Button>\r\n                    <Button \r\n                        className={classes.nextBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === docState.total || docState.total === null ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current+1\r\n                            }))\r\n                        }}>\r\n                        다음페이지\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n            \r\n            <div className={classes.rightSide}>\r\n                <Box>Table - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Box>\r\n                {tableState.finished.includes(tableState.current) ? <Box className={tableState.title.includes(\"Info\") || tableState.title.includes(\"ELECTRODE\") ? classes.bottomWatermark : classes.watermark} fontWeight=\"fontWeightBold\">수정완료 테이블</Box> : null}\r\n                \r\n                {/* WPS_Doc_Info Customized Table */}\r\n                {currentTable !== undefined && tableState.title.includes(\"Info\") ? \r\n                <Paper elevation={1} className={classes.bottomPaper}>\r\n                    <div className=\"table\" style={{display: \"flex\"}}>\r\n\r\n                        <div className={classes.leftTable}>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"WPS_No\")}\r\n                                {makeField(\"T\", ocrTable[\"WPS_No\"][0], \"WPS_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"WPS_No\"], \"WPS_No\", 0, process, false, true, \r\n                                (value) => {\r\n                                    return value.replace(/(\\s*)/g, \"\")\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_No\")}\r\n                                {makeField(\"T\", ocrTable[\"Rev_No\"][0], \"Rev_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Rev_No\"], \"Rev_No\", 0, process, false, currentTable[processState.current][\"Rev_No\"] !== \"\" && !isNaN(currentTable[processState.current][\"Rev_No\"]) && currentTable[processState.current][\"Rev_No\"] >= 0,\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Supporting_PQR_No\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Supporting_PQR_No\"][0], \"Supporting_PQR_No\", 0, process, true)}\r\n                                    {makeField(\"AT\", currentTable[processState.current][\"Supporting_PQR_No\"], \"Supporting_PQR_No\", 0, process, false)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Welding_Process\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Welding_Process\"][0], \"Welding_Process\", 0, process, true)}\r\n                                    <div style={{display: 'flex', gap: 5}}>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            setProcessState((prevState) => ({...prevState, first: e.target.value}));\r\n                                            setTable(\"Welding_Process_1\", e.target.value)\r\n                                        }}\r\n                                        className={classes.preDefinedSelect}\r\n                                        style={{width: 80 }}\r\n                                        defaultValue={\"GTAW\"}\r\n                                        value={processState.first}>\r\n                                        {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                            return <option value={item}>{item}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    {processState.count >= 2 ?\r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, second: e.target.value}));\r\n                                                    setTable(\"Welding_Process_2\", e.target.value)\r\n                                                }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                style={{width: 80 }}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.second}>\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon}\r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(2)}/>\r\n                                        </div>\r\n                                        : null}\r\n                                    {processState.count === 3 ? \r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, third: e.target.value}));\r\n                                                    setTable(\"Welding_Process_3\", e.target.value)\r\n                                                }}\r\n                                                style={{width: 80 }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.third}\r\n                                                >\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon} \r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(3)}/>\r\n                                        </div>\r\n                                    : null}\r\n                                    {processState.count !== 3 ? \r\n                                        <img \r\n                                            src={addItemIcon} \r\n                                            className={classes.addItemBtn}\r\n                                            alt=\"add process button\"\r\n                                            onClick={addProcess}/>\r\n                                        : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.rightTable}>\r\n                            <Box>&nbsp;</Box>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Date\")}\r\n                                {makeField(\"T\", ocrTable[\"Date\"][0], \"Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Date\"], \"Date\", 1, process, false)}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_Date\")}\r\n                                {makeField(\"T\", ocrTable[\"Rev_Date\"][0], \"Rev_Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Rev_Date\"], \"Rev_Date\", 1, process, false, true, \r\n                                (value) => {\r\n                                    if (currentTable[processState.current][\"Rev_No\"] === 0) {\r\n                                        return null\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Impact_Test\")}\r\n                                {makeField(\"T\", ocrTable[\"Impact_Test\"][0], \"Impact_Test\", 0, process, true)}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Impact_Test_yesno\"], \"Impact_Test_yesno\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Impact_Test_temp\"], \"Impact_Test_temp\", 1, process, currentTable[processState.current][\"Impact_Test_yesno\"] !== \"YES\", currentTable[processState.current][\"Impact_Test_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Impact_Test_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Type\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Type\"][0], \"Type\", 0, process, true)}\r\n                                    {makeField(\"AP\", currentTable[processState.current][\"Type\"], \"Type\", 0, process, false)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Code\")}\r\n                                {makeField(\"T\", ocrTable[\"Code\"][0], \"Code\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Code\"], \"Code\", 0, process, false)}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                \r\n                {!tableState.title.includes(\"Info\") && !tableState.title.includes(\"ELECTRODE\") ? \r\n                <>\r\n                <div style={{display: 'flex'}}>\r\n                    <Checkbox color=\"default\" size='small' checked={tableState.checktype} \r\n                    onChange={e => \r\n                        setTable(\"check_carefully\", e.target.checked ? 1 : 0)\r\n                    }/>\r\n                    <div style={{paddingTop: 8, fontSize: 14, width: 200}}>Suggest to Recheck</div>\r\n                    <TextField \r\n                        margin=\"dense\"\r\n                        inputProps={{style: {fontSize: 12, padding: 5}}} \r\n                        value={tableState.comment}\r\n                        style={{height: 20}}\r\n                        fullWidth\r\n                        variant=\"outlined\" \r\n                        label=\"Comment\" InputLabelProps={{ shrink: true }} \r\n                        onChange={e => \r\n                            setTable(\"check_message\", e.target.value)\r\n                        }/>\r\n                </div>\r\n                <div className={classes.processArea}>\r\n                    <div className={classes.processTab} style={{marginLeft: 28, background: processState.current===0 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===0 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(0)}>\r\n                        {processState.first}\r\n                    </div>\r\n                    {processState.count >= 2 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===1 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===1 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(1)}>\r\n                            {processState.second}\r\n                        </div> : null}\r\n                    {processState.count >= 3 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===2 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===2 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(2)}>\r\n                            {processState.third}\r\n                        </div> : null}\r\n                </div>\r\n                </> : null}\r\n\r\n                {tableState.title.includes(\"402\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Type_of_Joint\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Type_of_Joint\"][0], \"Type_of_Joint\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Type_of_Joint\"], \"Type_of_Joint\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing\")}\r\n                        {makeField(\"T\", ocrTable[\"Backing\"][0], \"Backing\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Backing\"], \"Backing\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing_Material\")}\r\n                        <div style={{alignSelf: \"center\"}}>\r\n                            {makeField(\"T\", ocrTable[\"Backing_Material\"][0], \"Backing_Material\", 0, process, true)}\r\n                        </div>\r\n                        <div style={{display: \"grid\"}}>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"groove\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material_groove\"], \"Backing_Material_groove\", 0, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"fillet\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material_fillet\"], \"Backing_Material_fillet\", 1, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Root_Spacing\")}\r\n                        <div>\r\n                            <div style={{display: \"grid\"}}>\r\n                                {makeField(\"T\", ocrTable[\"Root_Spacing\"][0], \"Root_Spacing\", 0, process, true)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Root_Spacing\"], \"Root_Spacing\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing_min\"], \"Root_Spacing_min\", 1, process, currentTable[processState.current][\"Root_Spacing\"] !== \"VALUE\", currentTable[processState.current][\"Root_Spacing_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Root_Spacing_min\"]), \r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing_max\"], \"Root_Spacing_max\", 2, process, currentTable[processState.current][\"Root_Spacing\"] !== \"VALUE\", currentTable[processState.current][\"Root_Spacing_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Root_Spacing_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Retainers\")}\r\n                        {makeField(\"T\", ocrTable[\"Retainers\"][0], \"Retainers\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Retainers\"], \"Retainers\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"403\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"P_No\"][0], \"P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"P_No\"], \"P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Gr_No\"][0], \"Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Gr_No\"], \"Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"to_P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"to_P_No\"][0], \"to_P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"to_P_No\"], \"to_P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"to_Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"to_Gr_No\"][0], \"to_Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"to_Gr_No\"], \"to_Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"or_Spec_Type_and_Grade\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"or_Spec_Type_and_Grade\"][0], \"or_Spec_Type_and_Grade\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"T\", currentTable[processState.current][\"Spec\"], \"Spec\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Type_Grade\"], \"Type_Grade\", 1, process, false)}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"to_Spec\"], \"to_Spec\", 2, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"to_Type_Grade\"], \"to_Type_Grade\", 3, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"][0], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range_groove\"], \"Qualified_Thickness_Range_groove\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_groove_min\"], \"Qual_Thk_Range_groove_min\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range_groove\"] !== \"VALUE\", currentTable[processState.current][\"Qual_Thk_Range_groove_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_groove_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_groove_max\"], \"Qual_Thk_Range_groove_max\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range_groove\"] !== \"VALUE\", currentTable[processState.current][\"Qual_Thk_Range_groove_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_groove_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range_fillet\"], \"Qualified_Thickness_Range_fillet\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"], \"Qual_Thk_Range_fillet_min\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range_fillet\"] !== \"VALUE\", currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"], \"Qual_Thk_Range_fillet_max\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range_fillet\"] !== \"VALUE\", currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Pipe_Diameter_Range\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Pipe_Diameter_Range\"][0], \"Pipe_Diameter_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Pipe_Diameter_Range\"], \"Pipe_Diameter_Range\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range_min\"], \"Pipe_Diameter_Range_min\", 1, process, currentTable[processState.current][\"Pipe_Diameter_Range\"] !== \"VALUE\", currentTable[processState.current][\"Pipe_Diameter_Range_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range_max\"], \"Pipe_Diameter_Range_max\", 2, process, currentTable[processState.current][\"Pipe_Diameter_Range\"] !== \"VALUE\", currentTable[processState.current][\"Pipe_Diameter_Range_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Max_Pass_Thk_Limit\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Max_Pass_Thk_Limit\"][0], \"Max_Pass_Thk_Limit\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Max_Pass_Thk_Limit_select\"], \"Max_Pass_Thk_Limit_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"], \"Max_Pass_Thk_Limit\", 1, process, currentTable[processState.current][\"Max_Pass_Thk_Limit_select\"] !== \"VALUE\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"] !== \"\" && !isNaN(currentTable[processState.current][\"Max_Pass_Thk_Limit\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"404\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"F_No\")}\r\n                        {makeField(\"T\", ocrTable[\"F_No\"][0], \"F_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"F_No\"], \"F_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"A_No\")}\r\n                        {makeField(\"T\", ocrTable[\"A_No\"][0], \"A_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"A_No\"], \"A_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"SFA_No\")}\r\n                        {makeField(\"T\", ocrTable[\"SFA_No\"][0], \"SFA_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"SFA_No\"], \"SFA_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"AWS_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"AWS_Class\"][0], \"AWS_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"AWS_Class\"], \"AWS_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Brand_Name\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Brand_Name\"][0], \"Brand_Name\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Brand_Name\"], \"Brand_Name\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"][0], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal_groove_select\"], \"Depo_Weld_Metal_groove_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal_groove\"], \"Depo_Weld_Metal_groove\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal_groove_select\"] !== \"VALUE\", currentTable[processState.current][\"Depo_Weld_Metal_groove\"] !== \"\" && !isNaN(currentTable[processState.current][\"Depo_Weld_Metal_groove\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"][0], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal_fillet_select\"], \"Depo_Weld_Metal_fillet_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal_fillet\"], \"Depo_Weld_Metal_fillet\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal_fillet_select\"] !== \"VALUE\", currentTable[processState.current][\"Depo_Weld_Metal_fillet\"] !== \"\" && !isNaN(currentTable[processState.current][\"Depo_Weld_Metal_fillet\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Filler_Product_Form\")}\r\n                        {makeField(\"T\", ocrTable[\"Filler_Product_Form\"][0], \"Filler_Product_Form\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Filler_Product_Form\"], \"Filler_Product_Form\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Size\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Size\"][0], \"Size\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Size\"], \"Size\", 0, process, false, currentTable[processState.current][\"Size_1\"] !== \"\" && !isNaN(currentTable[processState.current][\"Size_1\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Supplemental\")}\r\n                        {makeField(\"T\", ocrTable[\"Supplemental\"][0], \"Supplemental\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Supplemental\"], \"Supplemental\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Element\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Element\"][0], \"Alloy_Element\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Element\"], \"Alloy_Element\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Wire_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Wire_Class\"][0], \"Flux_Wire_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Wire_Class\"], \"Flux_Wire_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Flux\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Flux\"][0], \"Alloy_Flux\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Flux\"], \"Alloy_Flux\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Trade_Name\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Trade_Name\"][0], \"Flux_Trade_Name\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Trade_Name\"], \"Flux_Trade_Name\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Type\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Type\"][0], \"Flux_Type\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Type\"], \"Flux_Type\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Recrushed_Slag\")}\r\n                        {makeField(\"T\", ocrTable[\"Recrushed_Slag\"][0], \"Recrushed_Slag\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Recrushed_Slag\"], \"Recrushed_Slag\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Consumable_Insert\")}\r\n                        {makeField(\"T\", ocrTable[\"Consumable_Insert\"][0], \"Consumable_Insert\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"405\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Groove\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Groove\"][0], \"Position_of_Groove\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Groove\"], \"Position_of_Groove\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Fillet\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Fillet\"][0], \"Position_of_Fillet\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Fillet\"], \"Position_of_Fillet\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Welding_Progression\")}\r\n                        {makeField(\"T\", ocrTable[\"Welding_Progression\"][0], \"Welding_Progression\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Welding_Progression\"], \"Welding_Progression\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"406\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Preheat_Temp\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Min_Preheat_Temp\"][0], \"Min_Preheat_Temp\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_min\"], \"Preheat_Temp_min\", 0, process, false, currentTable[processState.current][\"Preheat_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                                {makeField(\"Max.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_max\"], \"Preheat_Temp_max\", 1, process, false, currentTable[processState.current][\"Preheat_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"T1 >\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_1\"], \"Preheat_Temp_over_thk_1\", 2, process, false, currentTable[processState.current][\"Preheat_Temp_over_thk_1\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_1\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"], \"Preheat_Temp_over_thk_1_temp\", 3, process, false, currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"T1 >\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_2\"], \"Preheat_Temp_over_thk_2\", 4, process, false, currentTable[processState.current][\"Preheat_Temp_over_thk_2\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_2\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"], \"Preheat_Temp_over_thk_2_temp\", 5, process, false, currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Interpass_Temp\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Max_Interpass_Temp\"][0], \"Max_Interpass_Temp\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 40px 1fr 40px 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Interpass_Temp_select\"], \"Interpass_Temp_select\", 0, process, false)}\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Interpass_Temp_min\"], \"Interpass_Temp_min\", 1, process, currentTable[processState.current][\"Interpass_Temp_select\"] !== \"VALUE\", currentTable[processState.current][\"Interpass_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Interpass_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Interpass_Temp_max\"], \"Interpass_Temp_max\", 2, process, currentTable[processState.current][\"Interpass_Temp_select\"] !== \"VALUE\", currentTable[processState.current][\"Interpass_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Interpass_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Preheat_Maintain\")}\r\n                        {makeField(\"T\", ocrTable[\"Preheat_Maintain\"][0], \"Preheat_Maintain\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Preheat_Maintain\"], \"Preheat_Maintain\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"407\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Postweld_Heat_Treat_Temp\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Postweld_Heat_Treat_Temp\"][0], \"Postweld_Heat_Treat_Temp\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"], \"Postweld_Heat_Treat_Temp_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"], \"Postweld_Heat_Treat_Temp_min\", 1, process, currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"] !== \"VALUE\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"], \"Postweld_Heat_Treat_Temp_max\", 1, process, currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"] !== \"VALUE\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Holding_Time\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Holding_Time\"][0], \"Holding_Time\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Holding_Time_select\"], \"Holding_Time_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_per_thk_time\"], \"Holding_Time_per_thk_time\", 1, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"VALUE\", currentTable[processState.current][\"Holding_Time_per_thk_time\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_per_thk_time\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"min /\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_per_thk\"], \"Holding_Time_per_thk\", 2, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"VALUE\", currentTable[processState.current][\"Holding_Time_per_thk\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_per_thk\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_min\"], \"Holding_Time_min\", 3, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"VALUE\", currentTable[processState.current][\"Interpass_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value)) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"408\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Shielding)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Shielding_Gas_select\"], \"Shielding_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Shielding_Gas\"], \"Shielding_Gas\", 1, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Shielding)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Shielding_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Shielding_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Shielding_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Shielding_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Shielding_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Shielding_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Shielding)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"], \"Shielding_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"], \"Shielding_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Backing)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Backing_Gas_select\"], \"Backing_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Backing_Gas\"], \"Backing_Gas\", 1, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Backing)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Backing_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Backing_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Backing_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Backing_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Backing_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Backing_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Backing)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"], \"Backing_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"], \"Backing_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Trailing)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Trailing_Gas_select\"], \"Trailing_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Trailing_Gas\"], \"Trailing_Gas\", 1, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Trailing)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Trailing_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Trailing_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Trailing_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Trailing_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Trailing_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Trailing_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Trailing)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"], \"Trailing_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"], \"Trailing_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"YES\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"409\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Current\")}\r\n                        {makeField(\"T\", ocrTable[\"Current\"][0], \"Current\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Current\"], \"Current\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Polarity\")}\r\n                        {makeField(\"T\", ocrTable[\"Polarity\"][0], \"Polarity\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Polarity\"], \"Polarity\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Tungsten_Electrode_Type\")}\r\n                        {makeField(\"T\", ocrTable[\"Tungsten_Electrode_Type\"][0], \"Tungsten_Electrode_Type\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Tungsten_Electrode_Type\"], \"Tungsten_Electrode_Type\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Tungsten_Electrode_Size\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Tungsten_Electrode_Size\"][0], \"Tungsten_Electrode_Size\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 3fr\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Tungsten_Electrode_Size_select\"], \"Tungsten_Electrode_Size_select\", 0, process, false)}\r\n                                {makeField(\"AT\", currentTable[processState.current][\"Tungsten_Electrode_Size\"], \"Tungsten_Electrode_Size\", 0, process, currentTable[processState.current][\"Tungsten_Electrode_Size_select\"] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Tungsten_Electrode_Size_1\"]))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Pulsing_Current\")}\r\n                        {makeField(\"T\", ocrTable[\"Pulsing_Current\"][0], \"Pulsing_Current\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Pulsing_Current\"], \"Pulsing_Current\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Mode_of_Metal_Transfer\")}\r\n                        {makeField(\"T\", ocrTable[\"Mode_of_Metal_Transfer\"][0], \"Mode_of_Metal_Transfer\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Mode_of_Metal_Transfer\"], \"Mode_of_Metal_Transfer\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"410\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Stringer_or_Weave_Bead\")}\r\n                        {makeField(\"T\", ocrTable[\"Stringer_or_Weave_Bead\"][0], \"Stringer_or_Weave_Bead\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Stringer_or_Weave_Bead\"], \"Stringer_or_Weave_Bead\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Orifice_Gas_Cup_or_Nozzle_Tip\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Orifice_Gas_Cup_or_Nozzle_Tip\"][0], \"Orifice_Gas_Cup_or_Nozzle_Tip\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_min\", 1, process, currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"] !== \"VALUE\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"]), numCheck)}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_max\", 2, process, currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"] !== \"VALUE\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Initial_or_Interpass_Cleaning\")}\r\n                        {makeField(\"T\", ocrTable[\"Initial_or_Interpass_Cleaning\"][0], \"Initial_or_Interpass_Cleaning\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Initial_or_Interpass_Cleaning\"], \"Initial_or_Interpass_Cleaning\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Contact_Tube_to_Work_Dist\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Contact_Tube_to_Work_Dist\"][0], \"Contact_Tube_to_Work_Dist\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"], \"Contact_Tube_to_Work_Dist_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"], \"Contact_Tube_to_Work_Dist_min\", 1, process, currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"] !== \"VALUE\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"]), numCheck)}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"], \"Contact_Tube_to_Work_Dist_max\", 2, process, currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"] !== \"VALUE\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Closed_to_Out_Chamber\")}\r\n                        {makeField(\"T\", ocrTable[\"Closed_to_Out_Chamber\"][0], \"Closed_to_Out_Chamber\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Closed_to_Out_Chamber\"], \"Closed_to_Out_Chamber\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Use_of_Thermal_Process\")}\r\n                        {makeField(\"T\", ocrTable[\"Use_of_Thermal_Process\"][0], \"Use_of_Thermal_Process\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Use_of_Thermal_Process\"], \"Use_of_Thermal_Process\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Method_of_Back_Gouging\")}\r\n                        {makeField(\"T\", ocrTable[\"Method_of_Back_Gouging\"][0], \"Method_of_Back_Gouging\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Method_of_Back_Gouging\"], \"Method_of_Back_Gouging\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Single_or_Multiple_Pass\")}\r\n                        {makeField(\"T\", ocrTable[\"Single_or_Multiple_Pass\"][0], \"Single_or_Multiple_Pass\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Single_or_Multiple_Pass\"], \"Single_or_Multiple_Pass\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Single_or_Multiple_Electrode\")}\r\n                        {makeField(\"T\", ocrTable[\"Single_or_Multiple_Electrode\"][0], \"Single_or_Multiple_Electrode\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Single_or_Multiple_Electrode\"], \"Single_or_Multiple_Electrode\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Multiple_Electrode_Spacing\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Multiple_Electrode_Spacing\"][0], \"Multiple_Electrode_Spacing\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Multiple_Electrode_Spacing_select\"], \"Multiple_Electrode_Spacing_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Multiple_Electrode_Spacing\"], \"Multiple_Electrode_Spacing\", 1, process, currentTable[processState.current][\"Multiple_Electrode_Spacing_select\"] !== \"VALUE\", currentTable[processState.current][\"Multiple_Electrode_Spacing\"] !== \"\" && !isNaN(currentTable[processState.current][\"Multiple_Electrode_Spacing\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Peening\")}\r\n                        {makeField(\"T\", ocrTable[\"Peening\"][0], \"Peening\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Peening\"], \"Peening\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Oscillation\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Oscillation\"][0], \"Oscillation\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Oscillation_select\"], \"Oscillation_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Oscillation\"], \"Oscillation\", 1, process, currentTable[processState.current][\"Oscillation_select\"] !== \"VALUE\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"ELECTRODE\") ? \r\n                <Paper elevation={0} className={classes.bottomPaper}>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 150px 120px 70px\"}}>\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Weld_Layer\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Welding_Process\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Class\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Dia\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Type_Polar\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Amperes_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Voltage_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Travel_Speed\"} fullWidth variant=\"outlined\" />\r\n                        {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Heat_Input\"} fullWidth variant=\"outlined\" /> */}\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Remark\"} fullWidth variant=\"outlined\" />\r\n                    </div>\r\n                    {ocrTable[\"Weld_Layer\"].map((item, idx) => {\r\n                        return (<div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 150px 120px 70px\"}}>\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Weld_Layer\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Welding_Process\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Filler_Metal_Class\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Filler_Metal_Dia\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Current_Type_Polar\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Current_Amperes_Range\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Voltage_Range\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Travel_Speed\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Heat_Input\"][idx] ?? \"\"} fullWidth variant=\"outlined\" /> */}\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Remark\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                        </div>)\r\n                    })}\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"ELECTRODE\") ? \r\n                <Paper elevation={0} className={classes.bottomPaper}>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 200px 240px 70px\", gap: \"5px\"}}>\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Weld_Layer\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Welding_Process\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Class\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Dia\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Type_Polar\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Amperes_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Voltage_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Travel_Speed\"} fullWidth variant=\"outlined\" />\r\n                        {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Heat_Input\"} fullWidth variant=\"outlined\" /> */}\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Remark\"} fullWidth variant=\"outlined\" />\r\n                    </div>\r\n                    {Object.keys(currentTable).map((item, idx) => {\r\n                        return (<div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 200px 240px 70px\", gap: \"5px\"}}>\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Weld_Layer\"], \"Weld_Layer\", idx, process, false)}\r\n                            {makeFieldForED(\"P\", currentTable[idx][\"Welding_Process\"], \"Welding_Process\", idx, process, false)}\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Filler_Metal_Class\"], \"Filler_Metal_Class\", idx, process, false)}\r\n                            {makeFieldForED(\"AT\", currentTable[idx][\"Filler_Metal_Dia\"], \"Filler_Metal_Dia\", idx, process, false)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Type\"], \"Current_Type\", idx, process, false)}\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Polar\"], \"Current_Polar\", idx, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Amperes_Range_select\"], \"Current_Amperes_Range_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Current_Amperes_Range_min\"], \"Current_Amperes_Range_min\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Current_Amperes_Range_max\"], \"Current_Amperes_Range_max\", idx, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Voltage_Range_select\"], \"Voltage_Range_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Voltage_Range_min\"], \"Voltage_Range_min\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Voltage_Range_max\"], \"Voltage_Range_max\", idx, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Travel_Speed_select\"], \"Travel_Speed_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Travel_Speed_min\"], \"Travel_Speed_min\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Travel_Speed_max\"], \"Travel_Speed_max\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Travel_Speed_unit\"], \"Travel_Speed_unit\", idx, process, false)}\r\n                            </div>\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Remark\"], \"Remark\", idx, process, false)}\r\n                        </div>)\r\n                    })}\r\n                    <div style={{display: 'flex'}}>\r\n                        <img \r\n                            src={addIcon} \r\n                            className={classes.addItemBtn}\r\n                            onClick={() => {\r\n                                console.log(Object.keys(currentTable).length)\r\n                                setCurrentTable(prevState => ({\r\n                                    ...prevState,\r\n                                    [Object.keys(currentTable).length]: {}\r\n                                }))\r\n                            }} alt=\"add icon\"/>\r\n                        <img \r\n                            src={deleteIcon} \r\n                            className={classes.addItemBtn}\r\n                            onClick={() => {\r\n                                let tempTable = currentTable;\r\n                                delete tempTable[Object.keys(currentTable).length-1]\r\n                                setCurrentTable(prevState => ({\r\n                                    ...tempTable\r\n                                }))\r\n                            }} alt=\"add icon\"/>\r\n                    </div>\r\n                    \r\n                </Paper> : null}\r\n                \r\n\r\n                <Grid container>\r\n                        <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\r\n                        <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\r\n                        <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        <Box style={{marginTop: 10, marginLeft: 10}}>Note</Box>\r\n        <Paper elevation={1} className={classes.notePaper}>\r\n            {ocrData !== null && ocrData[\"WPS_NOTES\"] !== undefined ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\r\n                return <div style={{fontSize: 14}}>{item}<br></br></div>\r\n            }) : null}\r\n        </Paper>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/icon_add_process.f73162a2.svg\";","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Dialog, DialogTitle, List, ListItem, CircularProgress, Typography, Box, Grid } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n    uploader: {\n        marginBottom: 10\n    },\n    controller: {\n        display: 'flex',\n        marginTop: 10, \n        marginLeft: 10,\n        gap: 20\n    },\n    uploadBtn: {\n        width: 292,\n        height: 35,\n        background: \"rgba(23, 62, 139, 1)\",\n        color: \"white\"\n    },\n    fileManager: {\n        marginTop: 56\n    },\n    headerRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    fileList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    fileRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontSize: 16,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n    rowDivider: {\n        width: 1192,\n        marginLeft: 23,\n        height: 1,\n        borderBottom: '0.5px solid #000000',\n    },\n    inspectBtn: {\n        width: 88, \n        height: 30, \n        background: \"rgba(23, 62, 139, 1)\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    editBtn: {\n        width: 88, \n        height: 30, \n        background: \"#DD2818\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    disabledBtn: {\n        width: 88, \n        height: 30, \n        background: \"#c0c0c0\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogContent: {\n        margin: 10\n    },\n    version: {\n        marginLeft: 'auto', \n        marginTop: 'auto', \n        color: 'white', \n        fontSize: 7\n    },\n    fileDialog: {\n        width: 1500,\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    fileDescription: {\n        padding: 20,\n    },\n    closeDialogBtn: {\n        marginLeft: 'auto',\n        marginTop: 2,\n        left: 5,\n        width: 60, \n        height: 30, \n        background: \"#1A374D\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogHeaderRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px',\n        gap: 70,\n        fontWeight: 'bold',\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n    },\n    docList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    docRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px 60px',\n        gap: 70,\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n}));\n\nexport default function Uploader(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [fileDialogOpen, setFileDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n    const [fileList, setFileList] = useState(null);\n    const [docList, setDocList] = useState(null);\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                console.log(res)\n                if (res.data.body.result === \"OK\") {\n                    axios.put(res.data.body.upload_url, tempFile)\n                    .then((res) => {\n                        console.log(res)\n                        setUploadState({...uploadState, upload: true});\n                        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                            \"action\": \"OCR\",\n                            \"file\": tempFile.name\n                        }, {headers : {\"InvocationType\":\"Event\"}})\n                        .then((res) => {\n                            console.log(res)\n                            const timeout = setTimeout(() => {\n                                setLoadingDialogOpen(false);\n                                clearInterval(timer)\n                                return Promise.reject(\"Timeout ERROR\")\n                            }, 120000)\n                            const timer = setInterval(() => {\n                                axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                    \"action\": \"STATUS\",\n                                    \"file\": tempFile.name\n                                })\n                                .then((res) => {\n                                    console.log(res)\n                                    if (res.data.body.result === \"OK\") {\n                                        if (res.data.body.status === \"READY\") {\n                                            clearInterval(timer);\n                                            clearTimeout(timeout);\n                                            setUploadState({...uploadState, ocr: true});\n                                            setLoadingDialogOpen(false);\n                                            enqueueSnackbar(\"업로드 및 OCR 완료\", {variant: 'success'});\n                                            loadFileList();\n                                            setUploadState({...uploadState, ocr: false});\n                                        } else if (res.data.body.status === \"ERROR\") {\n                                            return Promise.reject(res.data.body.message);\n                                        }\n                                    } else {\n                                        return Promise.reject(res.data.body.message);\n                                    }\n                                })\n                            }, 5000);\n                            \n                            \n                            // 2 min 초과 시 타임아웃\n                        })\n                    })\n                } else return Promise.reject(res.data.body.message);\n                \n            })\n            .catch((err)=> {\n                console.log(err);\n                setLoadingDialogOpen(false);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'});\n        }\n    }\n\n    const loadFileList = () => {\n        enqueueSnackbar(\"Loading File List...\")\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"FLIST\"\n            })\n            .then((res)=> {\n                console.log(res.data.body.data)\n                setFileList(res.data.body.data)\n                closeSnackbar()\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            });\n    }\n\n    const loadDocList = (fileId, fileName) => {\n        enqueueSnackbar('Loading...');\n        props.setFileName(fileName)\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WPLIST\",\n                \"file_id\": fileId\n            })\n            .then((res)=> {\n                console.log(res.data.body.data);\n                setDocList(res.data.body.data);\n                closeSnackbar();\n                setFileDialogOpen(true);\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            })\n    }\n\n    const loadOcrData = (wpsId) => {\n        enqueueSnackbar('Loading...');\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WEDIT\",\n                \"wps_id\": wpsId\n            })\n            .then((res)=> {\n                console.log(res.data);\n                if (res.data.body.result === \"OK\") {\n                    props.setDocId(wpsId);\n                    props.setOcrData(res.data.body.data);\n                    props.setFileURL(res.data.body.download_url);\n                    history.push('/inspect');\n                } else {\n                    return Promise.reject(res.data.body.message)\n                }\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n    }\n\n\n\n    const InspectBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.inspectBtn} disabled={props.disabled}>\n            검수\n        </Button>)\n    }\n\n    const EditBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.editBtn} disabled={props.disabled} onClick={() => loadOcrData(props.wpsId)}>\n            편집\n        </Button>)\n    }\n\n    const showBtn = (status, wpsId, fileName) => {\n        switch (status) {\n            case \"READY\":\n                return (<EditBtn wpsId={wpsId}/>)\n            case \"INPSECT\":\n            case \"COMPLETE\":\n                return (<InspectBtn />)\n            default:\n                return (<Button className={classes.disabledBtn}></Button>)\n        }\n    }\n\n    useEffect(() => {\n        loadFileList();\n\n    }, [])\n\n    return (\n        <>\n        <div className={classes.uploader}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                Upload Data\n            </Box>\n            <div className={classes.controller}>\n                <Button variant=\"outlined\" component=\"label\" className={classes.uploadBtn}>\n                    <input type=\"file\" style={{display:\"none\"}} accept=\"application/pdf\" onChange={handleFile} />\n                    {tempFile==null ? \"업로드\" : \"업로드 : \"+ tempFile.name}\n                </Button>\n                {tempFile !== null ? <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}>\n                    <CachedIcon fontSize='small'/>&nbsp;&nbsp;업로드 실행\n                </Button> : null}\n            </div>\n        </div>\n\n        <div className={classes.fileManager}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                업로드 파일 관리\n            </Box>\n            <div className={classes.headerRow}>\n                    <div>일련번호</div><div>파일 이름</div><div>업로드 시각</div><div>검수 완료 시각</div><div>상태</div>\n            </div>\n            <div className={classes.fileList}>\n                {fileList ? fileList.map((file, idx) => {\n                    return (<>\n                    <div className={classes.fileRow} onClick={() => loadDocList(file.id, file.file_name)}>\n                        <div>{file.id}</div><div>{file.file_name}</div><div>{file.upload_time}</div><div>{file.complete_time}</div><div>{file.status}</div>\n                    </div>\n                    <div className={classes.rowDivider}/>\n                    </>)\n                }) : null}\n            </div>\n        </div>\n        \n\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"upload-dialog\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"upload-dialog\">업로드 및 OCR</DialogTitle>\n            <List className={classes.dialogContent}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n\n        <Dialog open={fileDialogOpen} className={classes.fileDialog} aria-labelledby=\"file-dialog\" maxWidth={false} fullWidth={true}>\n            <div className={classes.fileDescription}>\n                <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1} style={{display: 'flex'}}>\n                    파일 상세 \n                    <Button className={classes.closeDialogBtn} onClick={() => setFileDialogOpen(false)}>닫기</Button>\n                </Box>\n                \n                <div className={classes.dialogHeaderRow}>\n                        <div>ID</div><div>TYPE</div><div>CODE</div><div>CREATE_TIME</div><div>LAST_UPDATE_TIME</div><div>STATUS</div>\n                </div>\n                <div className={classes.docList}>\n                    {docList ? docList.WPS_List ? docList.WPS_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>WPS</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div>{showBtn(doc.status, doc.id)}</div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                    {docList ? docList.PQR_List ? docList.PQR_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>PQR</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div>{showBtn(doc.status, doc.id)}</div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                </div>\n            </div>\n        </Dialog>\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo_otos.103138a0.svg\";","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport crypto from 'crypto';\n\n\nfunction AuthRoute({component: Component, render, ...rest}) {\n    return (\n        <Route {...rest} \n            render = {(props) => sessionStorage.accessToken && crypto.createHash('sha256').update(sessionStorage.accessToken).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\" ? (render ? render(props) : (<Component {...props} />)) \n                    : (<Redirect to={{pathname: \"/login\", state: {from: props.location}}} \n                    />)\n            }\n            />)\n}\n\nexport default AuthRoute;","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport NewInspector from './NewInspector.js';\nimport logo from './img/logo_otos.svg';\nimport AuthRoute from './AuthRoute.js';\n\nconst myTheme = createMuiTheme({\n    typography: {\n        fontFamily: 'Pretendard-Medium',\n      },\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        background: '#ffffff',\n        // background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 50,\n        // boxShadow: 'none'\n    },\n    toolBar: {\n        minHeight: 50,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 60,\n        marginLeft: 24\n    }\n}));\n\nexport default function Main() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [fileURL, setFileURL] = useState(null);\n    const [fileName, setFileName] = useState(\"\");\n    const [docId, setDocId] = useState(0);\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n        <Router> \n            <CssBaseline />\n            <div className={classes.root}>\n                \n            <AppBar className={classes.appBar} elevation={4}>\n                <Toolbar className={classes.toolBar}>\n                <Grid container justify=\"center\">\n                    <img style={{height: 40}} src={logo}></img>\n                </Grid>\n                {/* <Typography variant=\"h6\">\n                    <Box fontWeight=\"fontWeightBold\">\n                        WeldBeing\n                    </Box>\n                </Typography>\n                <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n                    onClick={() => {\n                        // logout();\n                        // history.push(\"/login\");\n                    }}>\n                    <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                        User | 로그아웃\n                    </Box>\n                </Button> */}\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                paper: classes.drawerPaper,\n                }}>\n                <Toolbar className={classes.toolBar} disableGutters={true}/>\n                <div className={classes.drawerContainer}>\n                    <List>\n                        <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n                        </ListItem>\n                        <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n\n            <main className={classes.content}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <Uploader setFileURL={(url) => setFileURL(url)} setFileName={(name) => setFileName(name)} setDocId={(id) => setDocId(id)} setOcrData={(data) => setOcrData(data)}/>} />\n                    <Route exact path=\"/inspect\" render={() => <NewInspector fileURL={fileURL} fileName={fileName} docId={docId} ocrData={ocrData}/>} />\n                </Switch>\n            </main>\n\n            </div>\n        </Router>\n    </ThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport crypto, { sign } from 'crypto';\nimport { Button, CssBaseline, TextField, Typography, Card, Box, Container } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\n\nconst myTheme = createMuiTheme({\n  typography: {\n    fontFamily: 'Pretendard-Medium',\n  },\n  palette: {\n      primary: {\n          light: '#58a5f0',\n          main: '#0277bd',\n          dark: '#58a5f0',\n          contrastText: '#fff',\n      }\n  }\n})\n\nfunction LoginPage() {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const submit = e => {\n      e.preventDefault();\n      enqueueSnackbar('로그인 요청 중...')\n      sessionStorage.setItem('accessToken', password);\n      if (crypto.createHash('sha256').update(password).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\") {\n        history.push(\"/\");\n        closeSnackbar();\n      } else {\n        enqueueSnackbar('비밀번호가 올바르지 않습니다', {variant: 'error',})\n      }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        \n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        title: {\n          marginBottom: 30,\n        },\n        logincard: {\n          marginTop: 120,\n        },\n        form: {\n          color: 'black',\n          width: '80%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={myTheme}>\n        <Container className={classes.main} maxWidth=\"xs\">\n            <CssBaseline />\n            <Card className={classes.logincard}>\n            <div className={classes.paper}>\n                <Typography variant=\"h4\" noWrap className={classes.title}>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                  WeldBeing\n                  </Box>\n                </Typography>\n                <form className={classes.form} onSubmit={submit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"비밀번호\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={e=> setPassword(e.target.value)}\n                />\n                \n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={(password === '') }\n                >\n                    로그인\n                </Button>\n                \n                </form>\n            </div>\n            </Card>            \n            </Container>\n            </ThemeProvider>\n        )\n    }\n\nexport default LoginPage;","import './App.css';\nimport Main from './Main.js';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\nimport AuthRoute from './AuthRoute.js'\nimport LoginPage from './LoginPage.js'\n\n\nexport default function App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      <Route path=\"/login\" render={() => <LoginPage/>} />\n      <AuthRoute exact path=\"/\" render={() => <Main />} />\n    </Router>\n  )\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n          <App />\n      </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/icon_delete_process.94d578bf.svg\";","export default __webpack_public_path__ + \"static/media/icon_add_item.d2ef0425.svg\";"],"sourceRoot":""}