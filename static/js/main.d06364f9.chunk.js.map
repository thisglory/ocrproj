{"version":3,"sources":["img/icon_add_item.svg","NewInspector.js","img/icon_add_process.svg","DataDef.js","Uploader.js","img/logo_otos.svg","AuthRoute.js","Main.js","LoginPage.js","App.js","reportWebVitals.js","index.js","img/icon_delete_process.svg"],"names":["useStyles","makeStyles","title","display","gap","content","width","marginTop","marginLeft","content_info","leftPaper","height","overflow","rightPaper","padding","background","topPaper","bottomPaper","notePaper","dbBtn","prevBtn","color","fontSize","nextBtn","submitTableBtn","tableCard","paddingLeft","tableCardGas","cardNum","fontWeight","select","marginRight","preDefinedSelect","inlineSelect","formControl","border","borderColor","borderRadius","addItemBtn","cursor","addTextFieldBtn","dateInput","guide","textAlign","dashedRect","position","leftSide","marginBottom","rightSide","deleteProcessBtn","addProcessBtn","addGasProcessBtn","float","secondProcess","borderLeft","thirdProcess","secondGasProcess","paddingTop","borderTop","thirdGasProcess","gasTable","gridTemplateColumns","watermark","userSelect","left","top","opacity","leftTable","rightTable","processArea","processTab","NewInspector","props","classes","history","useHistory","ocrData","useSnackbar","enqueueSnackbar","closeSnackbar","useState","total","current","zoom","docState","setDocState","rectArea","setRectArea","list","finished","isProcessAvailable","checktype","comment","tableState","setTableState","ocrTable","setOcrTable","currentTable","setCurrentTable","clonedTable","clonedTable2","count","first","second","third","processState","setProcessState","DBState","setDBState","isDBSave","setIsDBSave","loadingDialogOpen","setLoadingDialogOpen","setTable","key","newArr","process","1","2","0","makeField","typeStr","arr","idx","disabled","isValid","checkFunc","isError","undefined","margin","inputProps","style","value","fullWidth","variant","error","onChange","e","length","push","target","type","className","PREDEFINED_FIELDS","defaultValue","map","item","selected","i","includes","src","addItemIcon","onClick","alt","deleteIcon","pop","multiline","rowsMax","backgroundColor","moveTable","to","toMove","prevState","loadTable","cloneDeep","Object","keys","forEach","join","console","log","moveProcess","deleteProcess","useEffect","sortedTableKeys","filter","EXCEPT_TABLES","sort","m","fileName","axios","post","then","res","setTimeout","catch","err","open","aria-labelledby","maxWidth","id","noWrap","size","elevation","file","fileURL","onLoadError","onLoadSuccess","numPages","noData","pageNumber","scale","container","replace","isNaN","checked","label","InputLabelProps","shrink","alignSelf","concat","theme","uploader","controller","uploadBtn","fileManager","headerRow","fileList","overflowX","fileRow","letterSpacing","rowDivider","borderBottom","inspectBtn","editBtn","disabledBtn","dialogContent","version","fileDialog","alignItems","justifyContent","fileDescription","closeDialogBtn","dialogHeaderRow","docList","docRow","Uploader","tempFile","setTempFile","fileDialogOpen","setFileDialogOpen","upload","ocr","uploadState","setUploadState","setFileList","setDocList","loadFileList","data","body","loadOcrData","wpsId","result","Promise","reject","message","setOcrData","setFileURL","download_url","InspectBtn","Button","EditBtn","showBtn","status","Box","component","accept","preventDefault","files","name","put","upload_url","headers","timeout","clearInterval","timer","setInterval","clearTimeout","fileId","file_name","setFileName","upload_time","complete_time","Dialog","DialogTitle","List","ListItem","Typography","CircularProgress","WPS_List","doc","code_type","inspect_time","PQR_List","AuthRoute","Component","render","rest","sessionStorage","accessToken","crypto","createHash","update","digest","pathname","state","from","location","myTheme","createMuiTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","root","appBar","zIndex","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","Main","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","Grid","justify","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","url","LoginPage","password","setPassword","flexDirection","logincard","form","submit","Container","Card","onSubmit","setItem","noValidate","TextField","required","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"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","file":"static/js/main.d06364f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_add_item.d2ef0425.svg\";","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Checkbox, Grid, IconButton, Paper, TextField, InputBase, Dialog, DialogTitle, List, ListItem, CircularProgress, Box, Typography } from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack';\r\nimport { cloneDeep } from 'lodash';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport { TABLE_INFO, PREDEFINED_FIELDS, PROCESS_AVAILABLE_TABLES, EXCEPT_TABLES, PROCESS_OPTIONS } from './DataDef.js'\r\nimport addIcon from './img/icon_add_process.svg';\r\nimport addItemIcon from './img/icon_add_item.svg';\r\nimport deleteIcon from './img/icon_delete_process.svg'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex', \r\n        gap: 10\r\n    },\r\n    content: {\r\n        width: '1234px', \r\n        display: 'flex', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    content_info: {\r\n        width: '1234px', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    leftPaper: {\r\n        width: '650px', \r\n        height: '600px', \r\n        overflow: 'auto'\r\n    },\r\n    rightPaper: {\r\n        width: '600px', \r\n        height: '530px', \r\n        padding: 10,\r\n        overflow: 'auto',\r\n        background: \"rgba(238, 238, 238, 1)\"\r\n    },\r\n    topPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        overflow: 'auto'\r\n    },\r\n    bottomPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        marginTop: 20, \r\n        padding: 10,\r\n        overflow: 'auto'\r\n    },\r\n    notePaper: {\r\n        width: '1234px', \r\n        height: '136px', \r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n        padding: 10,\r\n        overflow: 'scroll'\r\n    },\r\n    dbBtn: {\r\n        marginTop: 10\r\n    },\r\n    prevBtn: {\r\n        width:126, \r\n        height:30, \r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10\r\n    },\r\n    nextBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    submitTableBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"#DD2818\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    tableCard: {\r\n        display: 'grid',\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    tableCardGas: {\r\n        width: 120,\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    cardNum: {\r\n        marginLeft: -10,\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        // textDecoration: 'underline'\r\n    },\r\n    select: {\r\n        width: 80,\r\n        height: 20,\r\n        marginRight: 10,\r\n        fontSize: 12\r\n    },\r\n    preDefinedSelect: {\r\n        height: 30,\r\n        marginTop: 5,\r\n        fontSize: 12\r\n    },\r\n    inlineSelect: {\r\n        height: 30,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    formControl: {\r\n        width: 80,\r\n        height: 20,\r\n        marginTop: '10px',\r\n        marginLeft: '0px',\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: '1px solid',\r\n          borderColor: \"#707070\",\r\n          borderRadius: \"4px\",\r\n        },\r\n    },\r\n    addItemBtn: {\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    addTextFieldBtn: {\r\n        marginTop: 15,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    dateInput: {\r\n        marginTop: 10,\r\n        height: 30\r\n    },\r\n    guide: {\r\n        marginTop: 30, \r\n        textAlign: \"center\"\r\n    },\r\n    dashedRect: {\r\n        position:'absolute', \r\n        border: 'dashed 3px',\r\n        textAlign: 'center'\r\n    },\r\n    leftSide: {\r\n        marginBottom: 20,\r\n    },\r\n    rightSide: {\r\n\r\n    },\r\n    deleteProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addGasProcessBtn: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        cursor: 'pointer'\r\n    },\r\n    secondProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    thirdProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    secondGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    thirdGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    gasTable: {\r\n        display: \"grid\", \r\n        gap: 10, \r\n        gridTemplateColumns: '140px 130px 130px 120px'\r\n    },\r\n    watermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 450,\r\n        left: 80,\r\n        top: 300,\r\n        fontSize: 64,\r\n        opacity: 0.15\r\n    },\r\n    leftTable: {\r\n        display: \"grid\", \r\n        width: \"500px\", \r\n        marginLeft: \"10px\"\r\n    },\r\n    rightTable: {\r\n        display: \"grid\", \r\n        width: \"500px\",\r\n        marginLeft: \"100px\"\r\n    },\r\n    processArea: {\r\n        height: 32, \r\n        background: \"rgba(23, 62, 139, 1)\", \r\n        display: 'flex', \r\n        gap: 5\r\n    },\r\n    processTab: {\r\n        width: 67, \r\n        height: 24, \r\n        borderRadius: \"2px 2px 0px 0px\",\r\n        marginTop: 8, \r\n        padding: 5,\r\n        paddingLeft: 10,\r\n        fontSize:12, \r\n        fontWeight: 500,\r\n        cursor: 'pointer'\r\n    }\r\n});\r\n\r\nexport default function NewInspector(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const ocrData = props.ocrData;\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    // pdf document 상태 관리\r\n    const [docState, setDocState] = useState({ // pdf page, zoom\r\n        total: 0,\r\n        current: 1,\r\n        zoom: 2.2\r\n    });\r\n    const [rectArea, setRectArea] = useState({ // pdf 점선 사각형 범위\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n\r\n    });\r\n    const onDocumentLoadSuccess = ({numPages}) => { // pdf load 완료 시 호출 -> total page set\r\n        setDocState((prevState) => (\r\n            {...docState,\r\n            total: numPages}\r\n        ))\r\n    };\r\n\r\n    // table 상태 관리\r\n    const [tableState, setTableState] = useState({\r\n        list: [], // total table list\r\n        total: 0,\r\n        current: 0,\r\n        finished: [],\r\n        title: \"\",\r\n        isProcessAvailable: false,\r\n        checktype: false,\r\n        comment: \"\"\r\n    });\r\n\r\n    const [ocrTable, setOcrTable] = useState({}); // OCR 데이터 최초 로드 및 정제된 테이블\r\n    const [currentTable, setCurrentTable] = useState([]); // 수정용 현재 테이블\r\n\r\n\r\n    const [clonedTable, setClonedTable] = useState({}); // 추가 프로세스 테이블 1\r\n    const [clonedTable2, setClonedTable2] = useState({}); // 추가 프로세스 테이블 2\r\n\r\n    // process 상태 관리\r\n    const [processState, setProcessState] = useState({\r\n        count: 1, // 현재 프로세스 개수\r\n        first: \"GTAW\", // currentTable\r\n        second: \"GTAW\", // clonedTable\r\n        third: \"GTAW\", // clonedTable2\r\n        current: 0,\r\n    });\r\n\r\n    const [DBState, setDBState] = useState({}); // DB 전송용 정보 저장\r\n    const [isDBSave, setIsDBSave] = useState(false);\r\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\r\n\r\n    const setTable = (key, newArr) => {\r\n        const process = processState.current;\r\n        if (process === 1) {\r\n            setCurrentTable({\r\n                ...currentTable,\r\n                1: {\r\n                    ...currentTable[1],\r\n                    [key]: newArr\r\n                }\r\n            })\r\n        } else if (process === 2) {\r\n            setCurrentTable({\r\n                ...currentTable,\r\n                2: {\r\n                    ...currentTable[2],\r\n                    [key]: newArr\r\n                }\r\n            })\r\n        } else {\r\n            setCurrentTable({\r\n                ...currentTable,\r\n                0: {\r\n                    ...currentTable[0],\r\n                    [key]: newArr\r\n                }\r\n            })\r\n        }\r\n    };\r\n    \r\n\r\n    const makeField = (typeStr, arr, key, idx, process, disabled, isValid, checkFunc) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        let isError = false\r\n        if (isValid === false) {\r\n            isError = true\r\n        }\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (arr[idx] === undefined) { // 해당 항목의 array 비어 있을 경우\r\n                    return <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                    value={\"\"} \r\n                    fullWidth \r\n                    variant=\"outlined\"\r\n                    error={isError}\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        while (newArr.length <= idx) {\r\n                            newArr.push(\"\");\r\n                        }\r\n                        newArr[idx] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}/>\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={arr[idx]} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = checkFunc ? checkFunc(e.target.value) : e.target.value;\r\n                    setTable(key, newArr);\r\n                }}/>\r\n            case \"D\": // date input\r\n                return <input \r\n                type=\"date\"\r\n                className={classes.dateInput}\r\n                value={arr[idx]} \r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = checkFunc ? checkFunc(e.target.value) : e.target.value;\r\n                    setTable(key, newArr);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                if (arr[idx] === undefined) {\r\n                    let newArr = arr;\r\n                    while (newArr.length <= idx) {\r\n                        newArr.push(\"\");\r\n                    }\r\n                    newArr[idx] = PREDEFINED_FIELDS[key][0]\r\n                }\r\n                return <select\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value;\r\n                    setTable(key, newArr);\r\n                }}\r\n                className={classes.inlineSelect}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={arr[idx]}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"PG\": // predefined selector for GAS Table\r\n                return <select\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value\r\n                    if (e.target.value !== \"있음\") {\r\n                        for (let i=1; i<=4; i++) {\r\n                            newArr[i] = e.target.value;\r\n                        }\r\n                    } else {\r\n                        for (let i=1; i<=4; i++) {\r\n                            newArr[i] = \"\";\r\n                        }\r\n                    }\r\n                    setTable(key, newArr);\r\n                }}\r\n                className={classes.preDefinedSelect}\r\n                style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={arr[idx]}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (arr.length === 1) {\r\n                    arr.push(PREDEFINED_FIELDS[key][0]);\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[1] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[1]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {arr.length >= 3 ? <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[2] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[2]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {arr.length >= 4 ? <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[3] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[3]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {arr.length >= 2 && arr.length <= 3 ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.push(\"\");\r\n                        setTable(key, newArr);\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {arr.length >= 3 && arr.length <= 4 ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.pop();\r\n                        setTable(key, newArr);\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            case \"AT\": // ADDIBLE textfield\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null }}} \r\n                    value={arr[0]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[0] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}/>\r\n\r\n                    {arr.length >= 2 ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={arr[1]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[1] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}/> : null}\r\n\r\n                    {arr.length >= 3 ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={arr[2]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[2] = e.target.value;\r\n                        setTable(key, newArr);\r\n                    }}/> : null}\r\n\r\n                    {arr.length >= 1 && arr.length <= 2 ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addTextFieldBtn}\r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.push(\"\");\r\n                        setTable(key, newArr);\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {arr.length >= 2 && arr.length <= 3 ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addTextFieldBtn} \r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.pop();\r\n                        setTable(key, newArr);\r\n                    }} alt=\"delete icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{style: {width: 120, fontSize: 12, fontWeight: 600, marginTop: 5, backgroundColor: 'rgba(196, 196, 196, 1)', padding: 4}}} value={typeStr} fullWidth variant=\"outlined\" />\r\n        }\r\n    }\r\n\r\n    const moveTable = (to) => { // 이전, 다음 테이블 이동 (to: -1 OR +1)\r\n        const toMove = tableState.current + to;\r\n        if (toMove >= 0 && toMove <=tableState.total-1) {\r\n            setTableState(prevState => ({\r\n                ...prevState,\r\n                current: toMove,\r\n                title: prevState.list[toMove],\r\n                isProcessAvailable: false,\r\n                checktype: false,\r\n                comment: \"\"\r\n            }));\r\n            const loadTable = cloneDeep(ocrData[tableState.list[toMove]][\"fields\"]);\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            });\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable({\r\n                0: cloneDeep(loadTable),\r\n                1: cloneDeep(loadTable),\r\n                2: cloneDeep(loadTable)\r\n            })\r\n            setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                top: 800*ocrData[tableState.list[toMove]][\"area\"][\"top\"],\r\n                left: 550*ocrData[tableState.list[toMove]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[tableState.list[toMove]][\"area\"][\"right\"] - ocrData[tableState.list[toMove]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[tableState.list[toMove]][\"area\"][\"bottom\"] - ocrData[tableState.list[toMove]][\"area\"][\"top\"]),\r\n            });\r\n            setProcessState({ // process 상태 초기화\r\n                ...processState,\r\n                current: 0\r\n            });\r\n            console.log(ocrData)\r\n        }\r\n    }\r\n\r\n    const moveProcess = (to) => {\r\n        setProcessState({\r\n            ...processState,\r\n            current: to\r\n        });\r\n        console.log(currentTable[to])\r\n    }\r\n\r\n    const addProcess = () => { // process 추가\r\n        if (processState.count === 1) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        } else if (processState.count === 2) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 3\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteProcess = (position) => { // process 삭제\r\n        if (position === 2) { // 두번째 process 삭제\r\n            if (processState.count === 3) { // 중간 process 삭제\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 2,\r\n                    second: processState.third\r\n                });\r\n            }\r\n            else if (processState.count === 2) {\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 1\r\n                });\r\n            }\r\n        } else if (position === 3) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        }\r\n    }\r\n\r\n    const submitTable = () => { // 수정된 테이블 DB state 저장\r\n        if (!tableState.finished.includes(tableState.current)) { // finished 리스트에 없는 경우 현재 table 인덱스 추가\r\n            setTableState({\r\n                ...tableState,\r\n                finished: tableState.finished.concat(tableState.current)\r\n            });\r\n        }\r\n        if (tableState.isProcessAvailable) { // 프로세스 추가 가능 테이블 확인\r\n            if (processState.count === 2) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(clonedTable)},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else if (processState.count === 3) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(clonedTable2)},\r\n                        \"Process\": processState.third,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(clonedTable)},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            }\r\n        } else {\r\n            setDBState((prevState) => ({ // 추가 프로세스 없음\r\n                ...prevState,\r\n                [tableState.title]: [{\r\n                    \"fields\": {...cloneDeep(currentTable)},\r\n                }]\r\n            }));\r\n        }\r\n        console.log(DBState)\r\n        console.log(tableState)\r\n    }\r\n\r\n    const saveDB = () => { // 서버 DB 저장 요청\r\n        setLoadingDialogOpen(true)\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"DB\",\r\n                \"data\": [DBState]\r\n        })\r\n        .then((res) => {\r\n            setIsDBSave(true);\r\n            setTimeout(() => {\r\n                setLoadingDialogOpen(false)\r\n                history.push('/')\r\n            }, 5000);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => { // 최초 페이지 진입 시 데이터 세팅\r\n        if (props.ocrData !== null) {\r\n            const sortedTableKeys = Object.keys(ocrData).filter(key => !EXCEPT_TABLES.includes(key)).sort(); // 테이블 key 정렬\r\n            console.log(Object.keys(ocrData))\r\n            setTableState({\r\n                total: sortedTableKeys.length,\r\n                current: 0,\r\n                finished: [],\r\n                title: sortedTableKeys[0],\r\n                isProcessAvailable: false,\r\n                list: sortedTableKeys\r\n            });\r\n            const loadTable = cloneDeep(ocrData[sortedTableKeys[0]][\"fields\"]); // 인덱스 0 테이블 로드 및 정제\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            })\r\n            console.log(loadTable)\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable({\r\n                0: cloneDeep(loadTable),\r\n                1: cloneDeep(loadTable),\r\n                2: cloneDeep(loadTable)\r\n            })\r\n            setProcessState({\r\n                ...processState,\r\n                count: 1\r\n            })\r\n            setRectArea({...rectArea,\r\n                top: 800*ocrData[sortedTableKeys[0]][\"area\"][\"top\"],\r\n                left: 600*ocrData[sortedTableKeys[0]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[sortedTableKeys[0]][\"area\"][\"right\"] - ocrData[sortedTableKeys[0]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[sortedTableKeys[0]][\"area\"][\"bottom\"] - ocrData[sortedTableKeys[0]][\"area\"][\"top\"]),\r\n            })\r\n            setDBState({ // DB state에 company 필드 임의 삽입\r\n                \"Company\": ocrData[\"Company\"]\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.title}>\r\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\r\n                Inspect -  {props.fileName}\r\n            </Box>\r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={saveDB}>\r\n                <SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장\r\n            </Button>\r\n        </div>\r\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"loading-dialog\" maxWidth='xs' fullWidth={true}>\r\n            <DialogTitle id=\"loading-dialog\">DB Save</DialogTitle>\r\n            <List style={{ margin:15 }}>\r\n                <ListItem>\r\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\r\n                    {!isDBSave ? <CircularProgress size={20}/> : <DoneIcon />}\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n        <div className={!tableState.title.includes(\"Info\") ? classes.content : classes.content_info}>\r\n\r\n            <div className={classes.leftSide}>\r\n                <Box>\r\n                    OCR 결과\r\n                    {/* <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom + 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomInIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                    <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom - 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomOutIcon fontSize=\"small\"/>\r\n                    </IconButton> */}\r\n                </Box>\r\n\r\n                <Paper elevation={1} className={!tableState.title.includes(\"Info\") ? classes.leftPaper : classes.topPaper}>\r\n                    <Document \r\n                        file={props.fileURL}\r\n                        onLoadError={console.error}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                        noData={<div className={classes.guide}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>}>\r\n                        <Page height={400} pageNumber={docState.current} scale={docState.zoom}>\r\n                            <div \r\n                                className={classes.dashedRect}\r\n                                style={{\r\n                                    left: rectArea.left*docState.zoom/2, \r\n                                    top: rectArea.top*docState.zoom/2, \r\n                                    width: rectArea.width*docState.zoom/2, \r\n                                    height: rectArea.height*docState.zoom/2, \r\n                                }}/>\r\n                        </Page>\r\n                    </Document>\r\n                </Paper>\r\n                \r\n                <Grid container>\r\n                    <Button \r\n                        className={classes.prevBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === 1 ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current-1\r\n                            }))\r\n                        }}>\r\n                        이전페이지\r\n                    </Button>\r\n                    <Button \r\n                        className={classes.nextBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === docState.total || docState.total === null ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current+1\r\n                            }))\r\n                        }}>\r\n                        다음페이지\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n            \r\n            <div className={classes.rightSide}>\r\n                <Box>Table - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Box>\r\n                {tableState.finished.includes(tableState.current) ? <Box className={classes.watermark} fontWeight=\"fontWeightBold\">수정완료 테이블</Box> : null}\r\n                \r\n                {/* WPS_Doc_Info Customized Table */}\r\n                {currentTable !== undefined && tableState.title.includes(\"Info\") ? \r\n                <Paper elevation={1} className={classes.bottomPaper}>\r\n                    <div className=\"table\" style={{display: \"flex\"}}>\r\n\r\n                        <div className={classes.leftTable}>\r\n                            <Box>{tableState.title}&nbsp;&nbsp;&nbsp;&nbsp;</Box>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"WPS_No\")}\r\n                                {makeField(\"T\", ocrTable[\"WPS_No\"], \"WPS_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"WPS_No\"], \"WPS_No\", 0, process, false, true, \r\n                                (value) => {\r\n                                    return value.replace(/(\\s*)/g, \"\")\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_No\")}\r\n                                {makeField(\"T\", ocrTable[\"Rev_No\"], \"Rev_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Rev_No\"], \"Rev_No\", 0, process, false, !isNaN(currentTable[processState.current][\"Rev_No\"][0]) && currentTable[processState.current][\"Rev_No\"][0] >= 0,\r\n                                (value) => {\r\n                                    if (value === \"\") {\r\n                                        return 0\r\n                                    }\r\n                                    else {\r\n                                        return value\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Supporting_PQR_No\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Supporting_PQR_No\"], \"Supporting_PQR_No\", 0, process, true)}\r\n                                    {makeField(\"AT\", currentTable[processState.current][\"Supporting_PQR_No\"], \"Supporting_PQR_No\", 0, process, false)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Welding_Process\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Welding_Process\"], \"Welding_Process\", 0, process, true)}\r\n                                    <div style={{display: 'flex', gap: 5}}>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            setProcessState((prevState) => ({...prevState, first: e.target.value}));\r\n                                        }}\r\n                                        className={classes.preDefinedSelect}\r\n                                        style={{width: 80 }}\r\n                                        defaultValue={\"GTAW\"}\r\n                                        value={processState.first}>\r\n                                        {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                            return <option value={item}>{item}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    {processState.count >= 2 ?\r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, second: e.target.value}));\r\n                                                }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                style={{width: 80 }}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.second}>\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon}\r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(2)}/>\r\n                                        </div>\r\n                                        : null}\r\n                                    {processState.count === 3 ? \r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, third: e.target.value}));\r\n                                                    console.log(\"here\")\r\n                                                }}\r\n                                                style={{width: 80 }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.third}\r\n                                                >\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon} \r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(3)}/>\r\n                                        </div>\r\n                                    : null}\r\n                                    {processState.count !== 3 ? \r\n                                        <img \r\n                                            src={addItemIcon} \r\n                                            className={classes.addItemBtn}\r\n                                            alt=\"add process button\"\r\n                                            onClick={addProcess}/>\r\n                                        : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.rightTable}>\r\n                            <Box>&nbsp;</Box>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Date\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Date\"], \"Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Date\"], \"Date\", 1, process, false)}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_Date\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Rev_Date\"], \"Rev_Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Rev_Date\"], \"Rev_Date\", 1, process, false, true, \r\n                                (value) => {\r\n                                    if (currentTable[processState.current][\"Rev_No\"][0] === 0) {\r\n                                        return null\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Impact_Test\")}\r\n                                {makeField(\"T\", ocrTable[\"Impact_Test\"], \"Impact_Test\", 0, process, true)}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Impact_Test\"], \"Impact_Test\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Impact_Test\"], \"Impact_Test\", 1, process, currentTable[processState.current][\"Impact_Test\"][0] !== \"YES\", !isNaN(currentTable[processState.current][\"Impact_Test\"][1]))}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Type\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Type\"], \"Type\", 0, process, true)}\r\n                                    {makeField(\"AP\", currentTable[processState.current][\"Type\"], \"Type\", 0, process, false)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Code\")}\r\n                                {makeField(\"T\", ocrTable[\"Code\"], \"Code\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Code\"], \"Code\", 0, process, false)}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                \r\n                {!tableState.title.includes(\"Info\") ? \r\n                <>\r\n                <div style={{display: 'flex'}}>\r\n                    <Checkbox color=\"default\" size='small' checked={tableState.checktype} \r\n                    onChange={e => setTableState(prevState => ({\r\n                        ...prevState,\r\n                        checktype: e.target.checked\r\n                    }))}/>\r\n                    <div style={{paddingTop: 8, fontSize: 14, width: 200}}>Suggest to Recheck</div>\r\n                    <TextField \r\n                        margin=\"dense\"\r\n                        inputProps={{style: {fontSize: 12, padding: 5}}} \r\n                        value={tableState.comment}\r\n                        style={{height: 20}}\r\n                        fullWidth\r\n                        variant=\"outlined\" \r\n                        label=\"Comment\" InputLabelProps={{ shrink: true }} \r\n                        onChange={e => setTableState(prevState => ({\r\n                            ...prevState,\r\n                            comment: e.target.value\r\n                        }))}/>\r\n                </div>\r\n                <div className={classes.processArea}>\r\n                    <div className={classes.processTab} style={{marginLeft: 28, background: processState.current===0 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===0 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(0)}>\r\n                        {processState.first}\r\n                    </div>\r\n                    {processState.count >= 2 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===1 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===1 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(1)}>\r\n                            {processState.second}\r\n                        </div> : null}\r\n                    {processState.count >= 3 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===2 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===2 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(2)}>\r\n                            {processState.third}\r\n                        </div> : null}\r\n                </div>\r\n                </> : null}\r\n\r\n                {tableState.title.includes(\"402\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Type_of_Joint\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Type_of_Joint\"], \"Type_of_Joint\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Type_of_Joint\"], \"Type_of_Joint\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing\")}\r\n                        {makeField(\"T\", ocrTable[\"Backing\"], \"Backing\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Backing\"], \"Backing\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing_Material\")}\r\n                        <div style={{alignSelf: \"center\"}}>\r\n                            {makeField(\"T\", ocrTable[\"Backing_Material\"], \"Backing_Material\", 0, process, true)}\r\n                        </div>\r\n                        <div style={{display: \"grid\"}}>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"groove\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material\"], \"Backing_Material\", 0, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"fillet\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material\"], \"Backing_Material\", 1, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Root_Spacing\")}\r\n                        <div>\r\n                            <div style={{display: \"grid\"}}>\r\n                                {makeField(\"T\", ocrTable[\"Root_Spacing\"], \"Root_Spacing\", 0, process, true)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Root_Spacing\"], \"Root_Spacing\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing\"], \"Root_Spacing\", 1, process, currentTable[processState.current][\"Root_Spacing\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Root_Spacing\"][1]))}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing\"], \"Root_Spacing\", 2, process, currentTable[processState.current][\"Root_Spacing\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Root_Spacing\"][2]))}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Retainers\")}\r\n                        {makeField(\"T\", ocrTable[\"Retainers\"], \"Retainers\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Retainers\"], \"Retainers\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"403\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"P_No\"], \"P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"P_No\"], \"P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Gr_No\"], \"Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Gr_No\"], \"Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"to_P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"to_P_No\"], \"to_P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"to_P_No\"], \"to_P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"to_Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"to_Gr_No\"], \"to_Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"to_Gr_No\"], \"to_Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"or_Spec_Type_and_Grade\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"or_Spec_Type_and_Grade\"], \"or_Spec_Type_and_Grade\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"T\", currentTable[processState.current][\"or_Spec_Type_and_Grade\"], \"or_Spec_Type_and_Grade\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"or_Spec_Type_and_Grade\"], \"or_Spec_Type_and_Grade\", 1, process, false)}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"or_Spec_Type_and_Grade\"], \"or_Spec_Type_and_Grade\", 2, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"or_Spec_Type_and_Grade\"], \"or_Spec_Type_and_Grade\", 3, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Qualified_Thickness_Range\"][1]))}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Qualified_Thickness_Range\"][2]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Qualified_Thickness_Range\"][1]))}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Qualified_Thickness_Range\"][2]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Pipe_Diameter_Range\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Pipe_Diameter_Range\"], \"Pipe_Diameter_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Pipe_Diameter_Range\"], \"Pipe_Diameter_Range\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range\"], \"Pipe_Diameter_Range\", 1, process, currentTable[processState.current][\"Pipe_Diameter_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range\"][1]))}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range\"], \"Pipe_Diameter_Range\", 2, process, currentTable[processState.current][\"Pipe_Diameter_Range\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range\"][2]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Max_Pass_Thk_Limit\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Max_Pass_Thk_Limit\"], \"Max_Pass_Thk_Limit\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"], \"Max_Pass_Thk_Limit\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"], \"Max_Pass_Thk_Limit\", 1, process, currentTable[processState.current][\"Max_Pass_Thk_Limit\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Max_Pass_Thk_Limit\"][1]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"404\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"F_No\")}\r\n                        {makeField(\"T\", ocrTable[\"F_No\"], \"F_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"F_No\"], \"F_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"A_No\")}\r\n                        {makeField(\"T\", ocrTable[\"A_No\"], \"A_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"A_No\"], \"A_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Specification_No\")}\r\n                        {makeField(\"T\", ocrTable[\"Specification_No\"], \"Specification_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Specification_No\"], \"Specification_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"AWS_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"AWS_Class\"], \"AWS_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"AWS_Class\"], \"AWS_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Brand_Name\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Brand_Name\"], \"Brand_Name\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Brand_Name\"], \"Brand_Name\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Depo_Weld_Metal\"][1]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal\"], \"Depo_Weld_Metal\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal\"][0] !== \"VALUE\", !isNaN(currentTable[processState.current][\"Depo_Weld_Metal\"][1]))}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Filler_Product_Form\")}\r\n                        {makeField(\"T\", ocrTable[\"Filler_Product_Form\"], \"Filler_Product_Form\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Filler_Product_Form\"], \"Filler_Product_Form\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Size\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Size\"], \"Size\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Size\"], \"Size\", 0, process, !isNaN(currentTable[processState.current][\"Size\"][0]))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Supplemental\")}\r\n                        {makeField(\"T\", ocrTable[\"Supplemental\"], \"Supplemental\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Supplemental\"], \"Supplemental\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Element\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Element\"], \"Alloy_Element\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Element\"], \"Alloy_Element\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Wire_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Wire_Class\"], \"Flux_Wire_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Wire_Class\"], \"Flux_Wire_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Flux\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Flux\"], \"Alloy_Flux\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Flux\"], \"Alloy_Flux\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Trade_Name\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Trade_Name\"], \"Flux_Trade_Name\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Trade_Name\"], \"Flux_Trade_Name\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Type\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Type\"], \"Flux_Type\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Type\"], \"Flux_Type\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Recrushed_Slag\")}\r\n                        {makeField(\"T\", ocrTable[\"Recrushed_Slag\"], \"Recrushed_Slag\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Recrushed_Slag\"], \"Recrushed_Slag\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Consumable_Insert\")}\r\n                        {makeField(\"T\", ocrTable[\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Consumable_Insert\")}\r\n                        {makeField(\"T\", ocrTable[\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableState.title.includes(\"405\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Groove\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Groove\"], \"Position_of_Groove\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Groove\"], \"Position_of_Groove\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Fillet\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Fillet\"], \"Position_of_Fillet\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Fillet\"], \"Position_of_Fillet\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Welding_Progression\")}\r\n                        {makeField(\"T\", ocrTable[\"Welding_Progression\"], \"Welding_Progression\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Welding_Progression\"], \"Welding_Progression\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n\r\n                <Grid container>\r\n                        <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\r\n                        <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\r\n                        <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        <Box style={{marginTop: 10, marginLeft: 10}}>Note</Box>\r\n        <Paper elevation={1} className={classes.notePaper}>\r\n            {ocrData !== null && ocrData[\"WPS_NOTES\"] !== undefined ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\r\n                return <div style={{fontSize: 14}}>{item}<br></br></div>\r\n            }) : null}\r\n        </Paper>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/icon_add_process.f73162a2.svg\";","export const TABLE_INFO = { // T: Textfield, D: Date, P: Pre-defined selector, AP: Addible Pre-defined selector, etc: text로 처리.\n    \"WPS_Doc_Info\": {\n        \"WPS_No\": \"T\",\n        \"Date\": \"T/D\",\n        \"Impact_Test\": \"T/P/ /T/°C\",\n        \"Rev_No\": \"T\",\n        \"Rev_Date\": \"T\",\n        \"Supporting_PQR_No\": \"T/T/T\",\n        \"Welding_Process\": \"T/AP\",\n        \"Type\": \"T/AP\",\n        \"Code\": \"T\"\n    }, \"WPS_QW_402\": {\n        \"Type_of_Joint\": \"T\",\n        \"Backing\": \"T/P\",\n        \"Backing_Material\": \"T/P/P\",\n        \"Root_Spacing\": \"T/~/T/mm\",\n        \"Retainers\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_403\": {\n        \"P_No\": \"T\",\n        \"Gr_No\": \"T/T/T\",\n        \"to_P_No\": \"T\",\n        \"to_Gr_No\": \"T/T/T\",\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_404\": {\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"Specification_No\": \"T\",\n        \"AWS_Class\": \"T\",\n        \"Brand_Name\": \"T\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Filler_Product_Form\": \"T\",\n        \"Size\": \"T/T/mm\",\n        \"Supplemental\": 'T',\n        \"Alloy_Element\": \"T\",\n        \"Flux_Wire_Class\": \"T\",\n        \"Alloy_Flux\": \"T\",\n        \"Flux_Trade_Name\": \"T\",\n        \"Flux_Type\": \"T\",\n        \"Recrushed_Slag\": \"T\",\n        \"Consumable_Insert\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_405\": {\n        \"Position_of_Groove\": \"T/P\",\n        \"Position_of_Fillet\": \"T/P\",\n        \"Welding_Progression\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_406\": {\n        \"Min_Preheat_Temp\": \"T/°C\",\n        \"Max_Interpass_Temp\": \"T/°C\",\n        \"Preheat_Maintain\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_407\": {\n        \"Postweld_Heat_Treat_Temp\": \"T/~/T/°C\",\n        \"Holding_Time\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_408\": {\n        \"Shielding\": \"T/D/T/T/~/T/mm\",\n        \"Backing\": \"T/D/T/T/~/T/mm\",\n        \"Trailing\": \"T/D/T/T/~/T/mm\",\n        \"Shielding_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Backing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Trailing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_409\": {\n        \"Current\": \"T/P\",\n        \"Polarity\": \"T/P\",\n        \"Tungsten_Electrode_Type\": \"T\",\n        \"Tungsten_Electrode_Size\": \"T/T/mm\",\n        \"Pulsing_Current\": \"T\",\n        \"Mode_of_Metal_Transfer\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_410\": {\n        \"Stringer_or_Weave_Bead\": \"T/P\",\n        \"Orifice_Gas_Cup_or_Nozzle_Tip\": \"T/~/T/mm\",\n        \"Initial_or_Interpass_Cleaning\": \"T/AP\",\n        \"Contact_Tube_to_Work_Dist\": \"T/~/T/mm\",\n        \"Closed_to_Out_Chamber\": \"T\",\n        \"Use_of_Thermal_Process\": \"T\",\n        \"Method_of_Back_Gouging\": \"T/AP\",\n        \"Single_or_Multiple_Pass\": \"T\",\n        \"Single_or_Multiple_Electrode\": 'T',\n        \"Multiple_Electrode_Spacing\": \"T/mm\",\n        \"Peening\": \"T\",\n        \"Oscillation\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_ELECTRODE\": {\n        \"Layer_No\": \"T\",\n        \"Welding_Process\": \"T\",\n        \"MAX_WM_Thickness\": \"T\",\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"SFA_No\": \"T\",\n        \"Filler_Metal_Class\": \"T\",\n        \"Filler_Metal_Dia\": \"T\",\n        \"Current_Type_Polar\": 'T',\n        \"Current_Amperes_Range\": \"T\",\n        \"Voltage_Range\": \"T\",\n        \"Travel_Speed_mm_min\": \"T\",\n        \"Travel_Speed_cm_min\": \"T\",\n        \"Heat_Input_kJ_mm\": \"T\",\n        \"Heat_Input_kJ_cm\": \"T\",\n        \"Heat_Input_J_mm\": \"T\",\n        \"Shielding_Gas_Flow_Rate\": \"T\"\n    }, \"PQR_Doc_Info\": {\n        \"PQR_NO\": \"T\",\n        \"DATE\": \"T/D\",\n        \"WPS_NO\": \"T\",\n        \"WELDING_PROCESS\": \"T/AP\",\n        \"TYPE\": \"T/AP\"\n    }, \"PQR_QW_403\": {\n        \"P_NO\": \"T\",\n        \"GR_NO\": \"T/T/T\",\n        \"TO_P_NO\": \"T\",\n        \"TO_GR_NO\": \"T/T/T\",\n        \"SPEC_NO\": \"T/to/T\",\n        \"TYPE_GRADE\": \"T/to/T\",\n        \"THICKNESS\": \"T/mm\",\n        \"DIAMETER\": \"T/mm\",\n        \"MAX_THICKNESS_PER_PASS\": \"T/mm\",\n        \"DEPOSIT_WELD_METAL_THICKNESS\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_404\": {\n        \"F_NO\": \"T\",\n        \"A_NO\": \"T\",\n        \"SFA_NO\": \"T\",\n        \"AWS_CLASS\": \"T\",\n        \"FILLER_PRODUCT_FORM\": \"T\",\n        \"SIZE_OF_ELECTRODE\": \"T/T/mm\",\n        \"WIRE_FLUX_CLASS\": \"T\",\n        \"FLUX_TRADE_NAME\": \"T\",\n        \"BRAND\": \"T\",\n        \"SUPPLEMENTAL\": \"T\",\n        \"ALLOY_ELEMENTS\": \"T\",\n        \"DEPOSIT_WELD_METAL\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_405\": {\n        \"POSITION_OF_GROOVE\": \"T/P\",\n        \"PROGRESSION\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_406\": {\n        \"PREHEAT_TEMP\": \"T/°C\",\n        \"INTERPASS_TEMP\": \"T/°C\",\n        \"PREHEAT_MAINTAIN\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_407\": {\n        \"TEMPERATURE\": \"T/~/T/°C\",\n        \"HOLDING_TIME\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_408\": {\n        \"SHIELDING\": \"T/T/T\",\n        \"BACKING\": \"T/T/T\",\n        \"TRAILING\": \"T/T/T\",\n        \"SHIELDING_GAS\": \"T/T/T\",\n        \"BACKING_GAS\": \"T/T/T\",\n        \"TRAILING_GAS\": \"T/T/T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_409\": {\n        \"CURRENT\": \"T/P\",\n        \"POLARRITY\": \"T/P\",\n        \"TRANSFER_MODE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_TYPE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_SIZE\": \"T/T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_410\": {\n        \"STRINGER_OR_WEAVE_BEAD\": \"T/P\",\n        \"ORIFICE_OR_GAS_CUP_SIZE\": \"T/~/T/mm\",\n        \"METHOD_OF_CLEANING\": \"T/T\",\n        \"METHOD_OF_BACK_GOUGING\": \"T\",\n        \"CONTACT_TUBE_TO_WORK_DIST\": \"T/~/T/mm\",\n        \"SINGLE_OR_MULTIPLE_ELECTRODES\": 'T',\n        \"MULTIPASS_OR_SINGLE_PASS\": \"T\",\n        \"CLOSED_TO_OUT_CHAMBER\": \"T\",\n        \"USE_OF_THERMAL_PROCESSES\": \"T\",\n        \"OSCILLATION\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    },\n};\n\nexport const EXCEPT_TABLES = [ // 수정 제외 테이블\n    \"Company\", \"WPS_NOTES\", \"WPS_JOINT_DETAIL\"\n]\n\nexport const PREDEFINED_FIELDS = { // 미리 정의된 selector option 리스트\n    \"Impact_Test\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"Type\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"Welding_Process\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"Backing\": [\"YES\", \"NO\", \"NONE\", \"N/A\", \"YES OR NO\"],\n    \"Backing_Material\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"Root_Spacing\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Retainers\": [\"YES\", \"NO\", \"NONE\", \"N/A\", \"YES OR NO\"],\n    \"Qualified_Thickness_Range\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Pipe_Diameter_Range\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Max_Pass_Thk_Limit\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Depo_Weld_Metal\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Filler_Product_Form\": [\"BARE\", \"FLUX CORED\", \"FLUX COATED\", \"POWDER\"],\n    \"Position_of_Groove\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Position_of_Fillet\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Welding_Progression\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"Current\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"Polarity\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"Mode_of_Metal_Transfer\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"Stringer_or_Weave_Bead\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"Initial_or_Interpass_Cleaning\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"Method_of_Back_Gouging\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"Shielding_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n    \"Backing_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n    \"Trailing_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n\n    \"IMPACT_TEST\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"TYPE\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"WELDING_PROCESS\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"BACKING\": [\"YES\", \"NO\", \"YES OR NO\"],\n    \"BACKING_MATERIAL\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"ROOT_SPACING\": [\"NONE\", \"N/A\", \"VALUE\"],\n    \"RETAINERS\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_GROOVE\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_FILLET\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"WELDING_PROGRESSION\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"CURRENT\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"POLARRITY\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"MODE_OF_METAL_TRANSFER\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"STRINGER_OR_WEAVE_BEAD\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"INITIAL_OR_INTERPASS_CLEANING\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"METHOD_OF_BACK_GOUGING\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"SHIELDING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"BACKING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"TRAILING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n}\nexport const PROCESS_AVAILABLE_TABLES = [ // process 추가 가능 테이블\n    \"WPS_QW_404\", \n    \"WPS_QW_405\", \n    \"WPS_QW_408\", \n    \"WPS_QW_409\", \n    \"WPS_QW_410\", \n    \"PQR_QW_404\", \n    \"PQR_QW_405\", \n    \"PQR_QW_408\", \n    \"PQR_QW_409\", \n    \"PQR_QW_410\"\n]\n\nexport const PROCESS_OPTIONS = (\n    <>\n        <option value={\"GTAW\"}>GTAW</option>\n        <option value={\"SMAW\"}>SMAW</option>\n        <option value={\"GMAW\"}>GMAW</option>\n        <option value={\"FCAW\"}>FCAW</option>\n        <option value={\"SAW\"}>SAW</option>\n    </>)","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Dialog, DialogTitle, List, ListItem, CircularProgress, Typography, Box, Grid } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n    uploader: {\n        marginBottom: 10\n    },\n    controller: {\n        display: 'flex',\n        marginTop: 10, \n        marginLeft: 10,\n        gap: 20\n    },\n    uploadBtn: {\n        width: 292,\n        height: 35,\n        background: \"rgba(23, 62, 139, 1)\",\n        color: \"white\"\n    },\n    fileManager: {\n        marginTop: 56\n    },\n    headerRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    fileList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    fileRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontSize: 16,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n    rowDivider: {\n        width: 1192,\n        marginLeft: 23,\n        height: 1,\n        borderBottom: '0.5px solid #000000',\n    },\n    inspectBtn: {\n        width: 88, \n        height: 30, \n        background: \"rgba(23, 62, 139, 1)\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    editBtn: {\n        width: 88, \n        height: 30, \n        background: \"#DD2818\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    disabledBtn: {\n        width: 88, \n        height: 30, \n        background: \"#c0c0c0\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogContent: {\n        margin: 10\n    },\n    version: {\n        marginLeft: 'auto', \n        marginTop: 'auto', \n        color: 'white', \n        fontSize: 7\n    },\n    fileDialog: {\n        width: 1500,\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    fileDescription: {\n        padding: 20,\n    },\n    closeDialogBtn: {\n        marginLeft: 'auto',\n        marginTop: 2,\n        left: 5,\n        width: 60, \n        height: 30, \n        background: \"#1A374D\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogHeaderRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px',\n        gap: 70,\n        fontWeight: 'bold',\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n    },\n    docList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    docRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px 60px',\n        gap: 70,\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n}));\n\nexport default function Uploader(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [fileDialogOpen, setFileDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n    const [fileList, setFileList] = useState(null);\n    const [docList, setDocList] = useState(null);\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                console.log(res)\n                if (res.data.body.result === \"OK\") {\n                    axios.put(res.data.body.upload_url, tempFile)\n                    .then((res) => {\n                        console.log(res)\n                        setUploadState({...uploadState, upload: true});\n                        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                            \"action\": \"OCR\",\n                            \"file\": tempFile.name\n                        }, {headers : {\"InvocationType\":\"Event\"}})\n                        .then((res) => {\n                            console.log(res)\n                            const timeout = setTimeout(() => {\n                                setLoadingDialogOpen(false);\n                                clearInterval(timer)\n                                return Promise.reject(\"Timeout ERROR\")\n                            }, 120000)\n                            const timer = setInterval(() => {\n                                axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                    \"action\": \"STATUS\",\n                                    \"file\": tempFile.name\n                                })\n                                .then((res) => {\n                                    console.log(res)\n                                    if (res.data.body.result === \"OK\") {\n                                        if (res.data.body.status === \"READY\") {\n                                            clearInterval(timer);\n                                            clearTimeout(timeout);\n                                            setUploadState({...uploadState, ocr: true});\n                                            setLoadingDialogOpen(false);\n                                            enqueueSnackbar(\"업로드 및 OCR 완료\", {variant: 'success'});\n                                            loadFileList();\n                                            setUploadState({...uploadState, ocr: false});\n                                        } else if (res.data.body.status === \"ERROR\") {\n                                            return Promise.reject(res.data.body.message);\n                                        }\n                                    } else {\n                                        return Promise.reject(res.data.body.message);\n                                    }\n                                })\n                            }, 5000);\n                            \n                            \n                            // 2 min 초과 시 타임아웃\n                        })\n                    })\n                } else return Promise.reject(res.data.body.message);\n                \n            })\n            .catch((err)=> {\n                console.log(err);\n                setLoadingDialogOpen(false);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'});\n        }\n    }\n\n    const loadFileList = () => {\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"FLIST\"\n            })\n            .then((res)=> {\n                console.log(res.data.body.data)\n                setFileList(res.data.body.data)\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            });\n    }\n\n    const loadDocList = (fileId, fileName) => {\n        enqueueSnackbar('Loading...');\n        props.setFileName(fileName)\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WPLIST\",\n                \"file_id\": fileId\n            })\n            .then((res)=> {\n                console.log(res.data.body.data);\n                setDocList(res.data.body.data);\n                closeSnackbar();\n                setFileDialogOpen(true);\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            })\n    }\n\n    const loadOcrData = (wpsId) => {\n        enqueueSnackbar('Loading...');\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WEDIT\",\n                \"wps_id\": wpsId\n            })\n            .then((res)=> {\n                console.log(res.data);\n                if (res.data.body.result === \"OK\") {\n                    props.setOcrData(res.data.body.data);\n                    props.setFileURL(res.data.body.download_url);\n                    history.push('/inspect');\n                } else {\n                    return Promise.reject(res.data.body.message)\n                }\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n    }\n\n\n\n    const InspectBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.inspectBtn} disabled={props.disabled}>\n            검수\n        </Button>)\n    }\n\n    const EditBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.editBtn} disabled={props.disabled} onClick={() => loadOcrData(props.wpsId)}>\n            편집\n        </Button>)\n    }\n\n    const showBtn = (status, wpsId, fileName) => {\n        switch (status) {\n            case \"READY\":\n                return (<EditBtn wpsId={wpsId}/>)\n            case \"INPSECT\":\n            case \"COMPLETE\":\n                return (<InspectBtn />)\n            default:\n                return (<Button className={classes.disabledBtn}></Button>)\n        }\n    }\n\n    useEffect(() => {\n        loadFileList();\n\n    }, [])\n\n    return (\n        <>\n        <div className={classes.uploader}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                Upload Data\n            </Box>\n            <div className={classes.controller}>\n                <Button variant=\"outlined\" component=\"label\" className={classes.uploadBtn}>\n                    <input type=\"file\" style={{display:\"none\"}} accept=\"application/pdf\" onChange={handleFile} />\n                    {tempFile==null ? \"업로드\" : \"업로드 : \"+ tempFile.name}\n                </Button>\n                {tempFile !== null ? <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}>\n                    <CachedIcon fontSize='small'/>&nbsp;&nbsp;업로드 실행\n                </Button> : null}\n            </div>\n        </div>\n\n        <div className={classes.fileManager}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                업로드 파일 관리\n            </Box>\n            <div className={classes.headerRow}>\n                    <div>일련번호</div><div>파일 이름</div><div>업로드 시각</div><div>검수 완료 시각</div><div>상태</div>\n            </div>\n            <div className={classes.fileList}>\n                {fileList ? fileList.map((file, idx) => {\n                    return (<>\n                    <div className={classes.fileRow} onClick={() => loadDocList(file.id, file.file_name)}>\n                        <div>{file.id}</div><div>{file.file_name}</div><div>{file.upload_time}</div><div>{file.complete_time}</div><div>{file.status}</div>\n                    </div>\n                    <div className={classes.rowDivider}/>\n                    </>)\n                }) : null}\n            </div>\n        </div>\n        \n\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"upload-dialog\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"upload-dialog\">업로드 및 OCR</DialogTitle>\n            <List className={classes.dialogContent}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n\n        <Dialog open={fileDialogOpen} className={classes.fileDialog} aria-labelledby=\"file-dialog\" maxWidth={false} fullWidth={true}>\n            <div className={classes.fileDescription}>\n                <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1} style={{display: 'flex'}}>\n                    파일 상세 \n                    <Button className={classes.closeDialogBtn} onClick={() => setFileDialogOpen(false)}>닫기</Button>\n                </Box>\n                \n                <div className={classes.dialogHeaderRow}>\n                        <div>ID</div><div>TYPE</div><div>CODE</div><div>CREATE_TIME</div><div>LAST_UPDATE_TIME</div><div>STATUS</div>\n                </div>\n                <div className={classes.docList}>\n                    {docList ? docList.WPS_List ? docList.WPS_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>WPS</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div>{showBtn(doc.status, doc.id)}</div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                    {docList ? docList.PQR_List ? docList.PQR_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>PQR</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div>{showBtn(doc.status, doc.id)}</div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                </div>\n            </div>\n        </Dialog>\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo_otos.103138a0.svg\";","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport crypto from 'crypto';\n\n\nfunction AuthRoute({component: Component, render, ...rest}) {\n    return (\n        <Route {...rest} \n            render = {(props) => sessionStorage.accessToken && crypto.createHash('sha256').update(sessionStorage.accessToken).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\" ? (render ? render(props) : (<Component {...props} />)) \n                    : (<Redirect to={{pathname: \"/login\", state: {from: props.location}}} \n                    />)\n            }\n            />)\n}\n\nexport default AuthRoute;","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport NewInspector from './NewInspector.js';\nimport logo from './img/logo_otos.svg';\nimport AuthRoute from './AuthRoute.js';\n\nconst myTheme = createMuiTheme({\n    typography: {\n        fontFamily: 'Pretendard-Medium',\n      },\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        background: '#ffffff',\n        // background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 50,\n        // boxShadow: 'none'\n    },\n    toolBar: {\n        minHeight: 50,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 60,\n        marginLeft: 24\n    }\n}));\n\nexport default function Main() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [fileURL, setFileURL] = useState(null);\n    const [fileName, setFileName] = useState(\"\");\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n        <Router> \n            <CssBaseline />\n            <div className={classes.root}>\n                \n            <AppBar className={classes.appBar} elevation={4}>\n                <Toolbar className={classes.toolBar}>\n                <Grid container justify=\"center\">\n                    <img style={{height: 40}} src={logo}></img>\n                </Grid>\n                {/* <Typography variant=\"h6\">\n                    <Box fontWeight=\"fontWeightBold\">\n                        WeldBeing\n                    </Box>\n                </Typography>\n                <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n                    onClick={() => {\n                        // logout();\n                        // history.push(\"/login\");\n                    }}>\n                    <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                        User | 로그아웃\n                    </Box>\n                </Button> */}\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                paper: classes.drawerPaper,\n                }}>\n                <Toolbar className={classes.toolBar} disableGutters={true}/>\n                <div className={classes.drawerContainer}>\n                    <List>\n                        <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n                        </ListItem>\n                        <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n\n            <main className={classes.content}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <Uploader setFileURL={(url) => setFileURL(url)} setFileName={(name) => setFileName(name)} setOcrData={(data) => setOcrData(data)}/>} />\n                    <Route exact path=\"/inspect\" render={() => <NewInspector fileURL={fileURL} fileName={fileName} ocrData={ocrData}/>} />\n                </Switch>\n            </main>\n\n            </div>\n        </Router>\n    </ThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport crypto, { sign } from 'crypto';\nimport { Button, CssBaseline, TextField, Typography, Card, Box, Container } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\n\nconst myTheme = createMuiTheme({\n  typography: {\n    fontFamily: 'Pretendard-Medium',\n  },\n  palette: {\n      primary: {\n          light: '#58a5f0',\n          main: '#0277bd',\n          dark: '#58a5f0',\n          contrastText: '#fff',\n      }\n  }\n})\n\nfunction LoginPage() {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const submit = e => {\n      e.preventDefault();\n      enqueueSnackbar('로그인 요청 중...')\n      sessionStorage.setItem('accessToken', password);\n      if (crypto.createHash('sha256').update(password).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\") {\n        history.push(\"/\");\n        closeSnackbar();\n      } else {\n        enqueueSnackbar('비밀번호가 올바르지 않습니다', {variant: 'error',})\n      }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        \n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        title: {\n          marginBottom: 30,\n        },\n        logincard: {\n          marginTop: 120,\n        },\n        form: {\n          color: 'black',\n          width: '80%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={myTheme}>\n        <Container className={classes.main} maxWidth=\"xs\">\n            <CssBaseline />\n            <Card className={classes.logincard}>\n            <div className={classes.paper}>\n                <Typography variant=\"h4\" noWrap className={classes.title}>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                  WeldBeing\n                  </Box>\n                </Typography>\n                <form className={classes.form} onSubmit={submit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"비밀번호\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={e=> setPassword(e.target.value)}\n                />\n                \n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={(password === '') }\n                >\n                    로그인\n                </Button>\n                \n                </form>\n            </div>\n            </Card>            \n            </Container>\n            </ThemeProvider>\n        )\n    }\n\nexport default LoginPage;","import './App.css';\nimport Main from './Main.js';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\nimport AuthRoute from './AuthRoute.js'\nimport LoginPage from './LoginPage.js'\n\n\nexport default function App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      <Route path=\"/login\" render={() => <LoginPage/>} />\n      <AuthRoute exact path=\"/\" render={() => <Main />} />\n    </Router>\n  )\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n          <App />\n      </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/icon_delete_process.94d578bf.svg\";"],"sourceRoot":""}