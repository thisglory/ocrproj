{"version":3,"sources":["DataDef.js","NewInspector.js","img/icon_add_process.svg","Uploader.js","img/logo_otos.svg","AuthRoute.js","Main.js","LoginPage.js","App.js","reportWebVitals.js","index.js","img/icon_delete_process.svg","img/icon_add_item.svg"],"names":["EXCEPT_TABLES","PREDEFINED_FIELDS","PROCESS_UNAVAILABLE_TABLES","useStyles","makeStyles","title","display","gap","content","width","marginTop","marginLeft","content_info","leftPaper","height","overflow","rightPaper","padding","background","topPaper","bottomPaper","notePaper","dbBtn","prevBtn","color","fontSize","nextBtn","submitTableBtn","disabledSubmitTableBtn","editTableBtn","tableCard","paddingLeft","tableCardGas","cardNum","fontWeight","select","marginRight","preDefinedSelect","inlineSelect","addItemBtn","cursor","addTextFieldBtn","dateInput","guide","textAlign","dashedRect","position","border","leftSide","marginBottom","rightSide","deleteProcessBtn","addProcessBtn","addGasProcessBtn","float","secondProcess","borderLeft","thirdProcess","secondGasProcess","paddingTop","borderTop","thirdGasProcess","gasTable","gridTemplateColumns","watermark","userSelect","lineHeight","left","top","zIndex","opacity","bottomWatermark","bottomEDWatermark","leftTable","rightTable","processArea","processTab","borderRadius","electrodeFieldName","backgroundColor","electrodeFieldValue","highlightedTextBorder","borderColor","highlightedTextLabel","NewInspector","props","classes","ocrData","useHistory","exceptTableKeys","useSnackbar","enqueueSnackbar","closeSnackbar","useState","total","current","zoom","docState","setDocState","rectArea","setRectArea","list","finished","isProcessAvailable","checktype","comment","tableState","setTableState","tableStateRef","useRef","ocrTable","setOcrTable","currentTable","setCurrentTable","count","first","second","third","processState","setProcessState","DBData","refinedTable","isDBSave","setIsDBSave","loadingDialogOpen","setTable","key","value","process","prevState","1","2","0","setTableForED","idx","undefined","deleteTableKey","tempTable","deleteTableKeyForED","numCheck","isNaN","includes","Number","makeField","typeStr","disabled","isValid","checkFunc","isError","margin","inputProps","style","fullWidth","variant","error","onChange","e","target","type","className","console","log","defaultValue","map","item","selected","src","addItemIcon","onClick","alt","deleteIcon","validFunc","multiline","rowsMax","makeFieldForED","moveTable","to","toMove","loadTable","cloneDeep","Object","keys","forEach","join","i","length","moveProcess","deleteProcess","beforeSubmit","altValue","saveDB","axios","post","docId","then","res","data","body","result","message","catch","err","useEffect","docStatus","push","sortedTableKeys","filter","sort","m","fileName","open","aria-labelledby","maxWidth","id","noWrap","size","elevation","file","fileURL","onLoadError","onLoadSuccess","numPages","noData","pageNumber","scale","container","replace","checked","label","InputLabelProps","shrink","root","alignSelf","addIcon","concat","editedTable","submitTable","theme","uploader","controller","uploadBtn","fileManager","headerRow","fileList","overflowX","fileRow","letterSpacing","rowDivider","borderBottom","inspectBtn","editBtn","disabledBtn","dialogContent","version","fileDialog","alignItems","justifyContent","fileDescription","closeDialogBtn","dialogHeaderRow","docList","docRow","Uploader","history","tempFile","setTempFile","setLoadingDialogOpen","fileDialogOpen","setFileDialogOpen","upload","ocr","uploadState","setUploadState","setFileList","setDocList","loadFileList","loadOcrData","wpsId","Promise","reject","setDocId","setDocStatus","setOcrData","setFileURL","download_url","InspectBtn","Button","EditBtn","showBtn","status","Box","component","accept","preventDefault","files","name","put","upload_url","headers","timeout","setTimeout","clearInterval","timer","setInterval","clearTimeout","fileId","file_name","setFileName","upload_time","complete_time","Dialog","DialogTitle","List","ListItem","Typography","CircularProgress","WPS_List","doc","code_type","inspect_time","PQR_List","AuthRoute","Component","render","rest","sessionStorage","accessToken","crypto","createHash","update","digest","pathname","state","from","location","myTheme","createMuiTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","appBar","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","Main","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","Grid","justify","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","url","LoginPage","password","setPassword","flexDirection","logincard","form","submit","Container","Card","onSubmit","setItem","noValidate","TextField","required","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"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","file":"static/js/main.446325f6.chunk.js","sourcesContent":["export const TABLE_INFO = { // T: Textfield, D: Date, P: Pre-defined selector, AP: Addible Pre-defined selector, etc: text로 처리.\n    \"WPS_Doc_Info\": {\n        \"WPS_No\": \"T\",\n        \"Date\": \"T/D\",\n        \"Impact_Test\": \"T/P/ /T/°C\",\n        \"Rev_No\": \"T\",\n        \"Rev_Date\": \"T\",\n        \"Supporting_PQR_No\": \"T/T/T\",\n        \"Welding_Process\": \"T/AP\",\n        \"Type\": \"T/AP\",\n        \"Code\": \"T\"\n    }, \"WPS_QW_402\": {\n        \"Type_of_Joint\": \"T\",\n        \"Backing\": \"T/P\",\n        \"Backing_Material\": \"T/P/P\",\n        \"Root_Spacing\": \"T/~/T/mm\",\n        \"Retainers\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_403\": {\n        \"P_No\": \"T\",\n        \"Gr_No\": \"T/T/T\",\n        \"to_P_No\": \"T\",\n        \"to_Gr_No\": \"T/T/T\",\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_404\": {\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"Specification_No\": \"T\",\n        \"AWS_Class\": \"T\",\n        \"Brand_Name\": \"T\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Filler_Product_Form\": \"T\",\n        \"Size\": \"T/T/mm\",\n        \"Supplemental\": 'T',\n        \"Alloy_Element\": \"T\",\n        \"Flux_Wire_Class\": \"T\",\n        \"Alloy_Flux\": \"T\",\n        \"Flux_Trade_Name\": \"T\",\n        \"Flux_Type\": \"T\",\n        \"Recrushed_Slag\": \"T\",\n        \"Consumable_Insert\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_405\": {\n        \"Position_of_Groove\": \"T/P\",\n        \"Position_of_Fillet\": \"T/P\",\n        \"Welding_Progression\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_406\": {\n        \"Min_Preheat_Temp\": \"T/°C\",\n        \"Max_Interpass_Temp\": \"T/°C\",\n        \"Preheat_Maintain\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_407\": {\n        \"Postweld_Heat_Treat_Temp\": \"T/~/T/°C\",\n        \"Holding_Time\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_408\": {\n        \"Shielding\": \"T/D/T/T/~/T/mm\",\n        \"Backing\": \"T/D/T/T/~/T/mm\",\n        \"Trailing\": \"T/D/T/T/~/T/mm\",\n        \"Shielding_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Backing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Trailing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_409\": {\n        \"Current\": \"T/P\",\n        \"Polarity\": \"T/P\",\n        \"Tungsten_Electrode_Type\": \"T\",\n        \"Tungsten_Electrode_Size\": \"T/T/mm\",\n        \"Pulsing_Current\": \"T\",\n        \"Mode_of_Metal_Transfer\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_410\": {\n        \"Stringer_or_Weave_Bead\": \"T/P\",\n        \"Orifice_Gas_Cup_or_Nozzle_Tip\": \"T/~/T/mm\",\n        \"Initial_or_Interpass_Cleaning\": \"T/AP\",\n        \"Contact_Tube_to_Work_Dist\": \"T/~/T/mm\",\n        \"Closed_to_Out_Chamber\": \"T\",\n        \"Use_of_Thermal_Process\": \"T\",\n        \"Method_of_Back_Gouging\": \"T/AP\",\n        \"Single_or_Multiple_Pass\": \"T\",\n        \"Single_or_Multiple_Electrode\": 'T',\n        \"Multiple_Electrode_Spacing\": \"T/mm\",\n        \"Peening\": \"T\",\n        \"Oscillation\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_ELECTRODE\": {\n        \"Layer_No\": \"T\",\n        \"Welding_Process\": \"T\",\n        \"MAX_WM_Thickness\": \"T\",\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"SFA_No\": \"T\",\n        \"Filler_Metal_Class\": \"T\",\n        \"Filler_Metal_Dia\": \"T\",\n        \"Current_Type_Polar\": 'T',\n        \"Current_Amperes_Range\": \"T\",\n        \"Voltage_Range\": \"T\",\n        \"Travel_Speed_mm_min\": \"T\",\n        \"Travel_Speed_cm_min\": \"T\",\n        \"Heat_Input_kJ_mm\": \"T\",\n        \"Heat_Input_kJ_cm\": \"T\",\n        \"Heat_Input_J_mm\": \"T\",\n        \"Shielding_Gas_Flow_Rate\": \"T\"\n    }, \"PQR_Doc_Info\": {\n        \"PQR_NO\": \"T\",\n        \"DATE\": \"T/D\",\n        \"WPS_NO\": \"T\",\n        \"WELDING_PROCESS\": \"T/AP\",\n        \"TYPE\": \"T/AP\"\n    }, \"PQR_QW_403\": {\n        \"P_NO\": \"T\",\n        \"GR_NO\": \"T/T/T\",\n        \"TO_P_NO\": \"T\",\n        \"TO_GR_NO\": \"T/T/T\",\n        \"SPEC_NO\": \"T/to/T\",\n        \"TYPE_GRADE\": \"T/to/T\",\n        \"THICKNESS\": \"T/mm\",\n        \"DIAMETER\": \"T/mm\",\n        \"MAX_THICKNESS_PER_PASS\": \"T/mm\",\n        \"DEPOSIT_WELD_METAL_THICKNESS\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_404\": {\n        \"F_NO\": \"T\",\n        \"A_NO\": \"T\",\n        \"SFA_NO\": \"T\",\n        \"AWS_CLASS\": \"T\",\n        \"FILLER_PRODUCT_FORM\": \"T\",\n        \"SIZE_OF_ELECTRODE\": \"T/T/mm\",\n        \"WIRE_FLUX_CLASS\": \"T\",\n        \"FLUX_TRADE_NAME\": \"T\",\n        \"BRAND\": \"T\",\n        \"SUPPLEMENTAL\": \"T\",\n        \"ALLOY_ELEMENTS\": \"T\",\n        \"DEPOSIT_WELD_METAL\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_405\": {\n        \"POSITION_OF_GROOVE\": \"T/P\",\n        \"PROGRESSION\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_406\": {\n        \"PREHEAT_TEMP\": \"T/°C\",\n        \"INTERPASS_TEMP\": \"T/°C\",\n        \"PREHEAT_MAINTAIN\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_407\": {\n        \"TEMPERATURE\": \"T/~/T/°C\",\n        \"HOLDING_TIME\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_408\": {\n        \"SHIELDING\": \"T/T/T\",\n        \"BACKING\": \"T/T/T\",\n        \"TRAILING\": \"T/T/T\",\n        \"SHIELDING_GAS\": \"T/T/T\",\n        \"BACKING_GAS\": \"T/T/T\",\n        \"TRAILING_GAS\": \"T/T/T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_409\": {\n        \"CURRENT\": \"T/P\",\n        \"POLARRITY\": \"T/P\",\n        \"TRANSFER_MODE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_TYPE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_SIZE\": \"T/T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_410\": {\n        \"STRINGER_OR_WEAVE_BEAD\": \"T/P\",\n        \"ORIFICE_OR_GAS_CUP_SIZE\": \"T/~/T/mm\",\n        \"METHOD_OF_CLEANING\": \"T/T\",\n        \"METHOD_OF_BACK_GOUGING\": \"T\",\n        \"CONTACT_TUBE_TO_WORK_DIST\": \"T/~/T/mm\",\n        \"SINGLE_OR_MULTIPLE_ELECTRODES\": 'T',\n        \"MULTIPASS_OR_SINGLE_PASS\": \"T\",\n        \"CLOSED_TO_OUT_CHAMBER\": \"T\",\n        \"USE_OF_THERMAL_PROCESSES\": \"T\",\n        \"OSCILLATION\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    },\n};\n\nexport const EXCEPT_TABLES = [ // 수정 제외 테이블\n    \"Company\", \"WPS_NOTES\", \"WPS_JOINT_DETAIL\", \"WPS_ELECTRODE\"\n]\n\nexport const PREDEFINED_FIELDS = { // 미리 정의된 selector option 리스트\n    // doc_info\n    \"Impact_Test_yesno\": [\"None\", \"Yes\", \"No\", \"N/A\"],\n    \"Type\": [\"Manual\", \"Semi Auto\", \"Mechanized\", \"Automatic\"],\n    \"Welding_Process\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \n    // 402\n    \"Backing_Material_groove\": [\"Base Metal\", \"Weld Metal\", \"None\", \"N/A\"],\n    \"Backing_Material_fillet\": [\"Base Metal\", \"Weld Metal\", \"None\", \"N/A\"],\n    \"Backing\": [\"None\", \"Yes\", \"No\", \"N/A\", \"Yes or No\"],\n    \"Root_Spacing_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Retainers\": [\"None\", \"Yes\", \"No\", \"N/A\", \"Yes or No\"],\n\n    // 403\n    \"Qualified_Thickness_Range_groove_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Qualified_Thickness_Range_fillet_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Pipe_Diameter_Range_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Max_Pass_Thk_Limit_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n\n    // 404\n    \"Depo_Weld_Metal_groove_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Depo_Weld_Metal_fillet_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n\n    // 406\n    \"Preheat_Temp_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Interpass_Temp_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n\n    // 407\n    \"Postweld_Heat_Treat_Temp_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Holding_Time_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n\n    // 408\n    \"Shielding_Gas_select\": [\"None\", \"N/A\", \"No\", \"Yes\"],\n    \"Backing_Gas_select\": [\"None\", \"N/A\", \"No\", \"Yes\"],\n    \"Trailing_Gas_select\": [\"None\", \"N/A\", \"No\", \"Yes\"],\n\n    // 409\n    \"Tungsten_Electrode_Size_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n\n    // 410\n    \"Stringer_or_Weave_Bead\": [\"Stringer\", \"Weave\", \"Both\", \"None\", \"N/A\"],\n    \"Orifice_Gas_Cup_or_Nozzle_Tip_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Contact_Tube_to_Work_Dist_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Multiple_Electrode_Spacing_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Oscillation_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Closed_to_Out_Chamber\": [\"Yes\", \"None\", \"N/A\"],\n    \"Use_of_Thermal_Process\": [\"Yes\", \"None\", \"N/A\"],\n    \"Single_or_Multiple_Pass\": [\"Single\", \"Multiple\", \"Single or Multiple\"],\n    \"Single_or_Multiple_Electrode\": [\"Single\", \"Multiple\", \"Single or Multiple\"],\n\n    // ELECTRODE\n    \"Current_Amperes_Range_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Voltage_Range_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Travel_Speed_select\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Current\": [\"DC\", \"AC\", \"None\", \"N/A\"],\n    \"Polarity\": [\"EN\", \"EP\", \"None\", \"N/A\"],\n\n\n    \"Depo_Weld_Metal\": [\"None\", \"N/A\", \"No\", \"Value\", \"All\"],\n    \"Filler_Product_Form\": [\"BARE\", \"FLUX CORED\", \"FLUX COATED\", \"POWDER\"],\n    \"Position_of_Groove\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Position_of_Fillet\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Welding_Progression\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"Max_Interpass_Temp\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Postweld_Heat_Treat_Temp\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Holding_Time\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Travel_Speed_unit\": [\"mm/min\", \"cm/min\"],\n    \n    \n    \"Tungsten_Electrode_Size\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n    \"Mode_of_Metal_Transfer\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n\n\n    \"Contact_Tube_to_Work_Dist\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n\n    \n    \"Multiple_Electrode_Spacing\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n\n    \"Oscillation\": [\"NONE\", \"N/A\", \"NO\", \"VALUE\", \"ALL\"],\n\n    \"Initial_or_Interpass_Cleaning\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"Method_of_Back_Gouging\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n\n    \"Current_Type\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"Current_Polar\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n\n\n    \"IMPACT_TEST\": [\"NONE\", \"YES\", \"NO\", \"N/A\"],\n    \"TYPE\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"WELDING_PROCESS\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"BACKING\": [\"YES\", \"NO\", \"YES OR NO\"],\n    \"BACKING_MATERIAL\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"ROOT_SPACING\": [\"NONE\", \"N/A\", \"VALUE\"],\n    \"RETAINERS\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_GROOVE\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_FILLET\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"WELDING_PROGRESSION\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"CURRENT\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"POLARRITY\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"MODE_OF_METAL_TRANSFER\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"STRINGER_OR_WEAVE_BEAD\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"INITIAL_OR_INTERPASS_CLEANING\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"METHOD_OF_BACK_GOUGING\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"SHIELDING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"BACKING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"TRAILING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n}\nexport const PROCESS_AVAILABLE_TABLES = [ // process 추가 가능 테이블\n    \"WPS_QW_404\", \n    \"WPS_QW_405\", \n    \"WPS_QW_408\", \n    \"WPS_QW_409\", \n    \"WPS_QW_410\", \n    \"PQR_QW_404\", \n    \"PQR_QW_405\", \n    \"PQR_QW_408\", \n    \"PQR_QW_409\", \n    \"PQR_QW_410\"\n]\n\nexport const PROCESS_UNAVAILABLE_TABLES = [\n    \"WPS_Doc_Info\",\n    \"WPS_JOINT_DETAIL\",\n    \"WPS_ELECTRODE\"\n]\n\nexport const PROCESS_OPTIONS = (\n    <>\n        <option value={\"GTAW\"}>GTAW</option>\n        <option value={\"SMAW\"}>SMAW</option>\n        <option value={\"GMAW\"}>GMAW</option>\n        <option value={\"FCAW\"}>FCAW</option>\n        <option value={\"SAW\"}>SAW</option>\n    </>)","import * as React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Checkbox, Grid, IconButton, Paper, TextField, InputBase, Dialog, DialogTitle, List, ListItem, CircularProgress, Box, Typography, FormControl } from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack';\r\nimport { cloneDeep } from 'lodash';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport { TABLE_INFO, PREDEFINED_FIELDS, PROCESS_UNAVAILABLE_TABLES, EXCEPT_TABLES, PROCESS_OPTIONS } from './DataDef.js'\r\nimport addIcon from './img/icon_add_process.svg';\r\nimport addItemIcon from './img/icon_add_item.svg';\r\nimport deleteIcon from './img/icon_delete_process.svg'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex', \r\n        gap: 10\r\n    },\r\n    content: {\r\n        width: '1234px', \r\n        display: 'flex', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    content_info: {\r\n        width: '1234px', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    leftPaper: {\r\n        width: '650px', \r\n        height: '600px', \r\n        overflow: 'auto'\r\n    },\r\n    rightPaper: {\r\n        width: '600px', \r\n        height: '530px', \r\n        padding: 10,\r\n        overflow: 'auto',\r\n        background: \"rgba(238, 238, 238, 1)\"\r\n    },\r\n    topPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        overflow: 'auto'\r\n    },\r\n    bottomPaper: {\r\n        width: '1234px', \r\n        height: '300px', \r\n        marginTop: 20, \r\n        padding: 10,\r\n        overflow: 'auto',\r\n        background: \"rgba(238, 238, 238, 1)\"\r\n    },\r\n    notePaper: {\r\n        width: '1234px', \r\n        height: '136px', \r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n        padding: 10,\r\n        overflow: 'scroll'\r\n    },\r\n    dbBtn: {\r\n        marginTop: 10\r\n    },\r\n    prevBtn: {\r\n        width:126, \r\n        height:30, \r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10\r\n    },\r\n    nextBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"rgba(23, 62, 139, 1)\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    submitTableBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"#DD2818\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    disabledSubmitTableBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"gray\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    editTableBtn: {\r\n        width:126, \r\n        height:30,\r\n        background:\"#42b883\", \r\n        color:\"white\",\r\n        fontSize: 15,\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    tableCard: {\r\n        display: 'grid',\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    tableCardGas: {\r\n        width: 120,\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    cardNum: {\r\n        marginLeft: -10,\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        // textDecoration: 'underline'\r\n    },\r\n    select: {\r\n        width: 80,\r\n        height: 20,\r\n        marginRight: 10,\r\n        fontSize: 12\r\n    },\r\n    preDefinedSelect: {\r\n        height: 30,\r\n        marginTop: 5,\r\n        fontSize: 12\r\n    },\r\n    inlineSelect: {\r\n        height: 30,\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    \r\n    addItemBtn: {\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    addTextFieldBtn: {\r\n        marginTop: 15,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    dateInput: {\r\n        marginTop: 10,\r\n        height: 30\r\n    },\r\n    guide: {\r\n        marginTop: 30, \r\n        textAlign: \"center\"\r\n    },\r\n    dashedRect: {\r\n        position:'absolute', \r\n        border: 'dashed 3px',\r\n        textAlign: 'center'\r\n    },\r\n    leftSide: {\r\n        marginBottom: 20,\r\n    },\r\n    rightSide: {\r\n\r\n    },\r\n    deleteProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addGasProcessBtn: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        cursor: 'pointer'\r\n    },\r\n    secondProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    thirdProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    secondGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    thirdGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    gasTable: {\r\n        display: \"grid\", \r\n        gap: 10, \r\n        gridTemplateColumns: '140px 130px 130px 120px'\r\n    },\r\n    watermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 608,\r\n        height: 600,\r\n        lineHeight: '600px',\r\n        background: 'gray',\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        left: 800,\r\n        top: 158,\r\n        zIndex: 100,\r\n        fontSize: 70,\r\n        opacity: 0.60\r\n    },\r\n    bottomWatermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 1240,\r\n        height: 310,\r\n        left: 125,\r\n        top: 550,\r\n        lineHeight: '310px',\r\n        background: 'gray',\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        zIndex: 100,\r\n        fontSize: 70,\r\n        opacity: 0.60\r\n    },\r\n    bottomEDWatermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 1240,\r\n        height: 310,\r\n        left: 125,\r\n        top: 870,\r\n        lineHeight: '310px',\r\n        background: 'gray',\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        zIndex: 100,\r\n        fontSize: 70,\r\n        opacity: 0.60\r\n    },\r\n    leftTable: {\r\n        display: \"grid\", \r\n        width: \"500px\", \r\n        marginLeft: \"10px\"\r\n    },\r\n    rightTable: {\r\n        display: \"grid\", \r\n        width: \"500px\",\r\n        marginLeft: \"100px\"\r\n    },\r\n    processArea: {\r\n        height: 32, \r\n        background: \"rgba(23, 62, 139, 1)\", \r\n        display: 'flex', \r\n        gap: 5\r\n    },\r\n    processTab: {\r\n        width: 67, \r\n        height: 24, \r\n        borderRadius: \"2px 2px 0px 0px\",\r\n        marginTop: 8, \r\n        padding: 5,\r\n        paddingLeft: 10,\r\n        fontSize:12, \r\n        fontWeight: 600,\r\n        cursor: 'pointer'\r\n    },\r\n    electrodeFieldName: {\r\n        fontSize: 12, \r\n        fontWeight: 600,\r\n        height: 45,\r\n        marginTop: 5, \r\n        backgroundColor: 'rgba(196, 196, 196, 1)', \r\n        padding: 6,\r\n        border: '1px solid gray'\r\n    },\r\n    electrodeFieldValue: {\r\n        fontSize: 12, \r\n        fontWeight: 400,\r\n        padding: 6,\r\n        border: '1px solid gray'\r\n    },\r\n    highlightedTextBorder: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: '1px solid',\r\n          borderColor: \"red\",\r\n          borderRadius: \"2px\",\r\n        },\r\n      },\r\n    highlightedTextLabel: {\r\n        color : 'red'\r\n    },\r\n});\r\n\r\nexport default function NewInspector(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const ocrData = props.ocrData;\r\n    const exceptTableKeys = EXCEPT_TABLES;\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    // pdf document 상태 관리\r\n    const [docState, setDocState] = useState({ // pdf page, zoom\r\n        total: 0,\r\n        current: 1,\r\n        zoom: 2.2\r\n    });\r\n    const [rectArea, setRectArea] = useState({ // pdf 점선 사각형 범위\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n\r\n    });\r\n    const onDocumentLoadSuccess = ({numPages}) => { // pdf load 완료 시 호출 -> total page set\r\n        setDocState((prevState) => (\r\n            {...docState,\r\n            total: numPages}\r\n        ))\r\n    };\r\n\r\n    // table 상태 관리\r\n    const [tableState, setTableState] = useState({\r\n        list: [], // total table list\r\n        total: 0,\r\n        current: 0,\r\n        finished: [],\r\n        title: \"\",\r\n        isProcessAvailable: false,\r\n        checktype: false,\r\n        comment: \"\"\r\n    });\r\n    const tableStateRef = useRef();\r\n    tableStateRef.current = tableState;\r\n\r\n    const [ocrTable, setOcrTable] = useState({}); // OCR 데이터 최초 로드 및 정제된 테이블\r\n    const [currentTable, setCurrentTable] = useState([]); // 수정용 현재 테이블\r\n\r\n    // process 상태 관리\r\n    const [processState, setProcessState] = useState({\r\n        count: 1, // 현재 프로세스 개수\r\n        first: \"GTAW\",  // idx 0\r\n        second: \"GTAW\", // idx 1\r\n        third: \"GTAW\", // idx 2\r\n        current: 0,\r\n    });\r\n\r\n    let DBData = {} // DB 전송용 정보 저장\r\n    let refinedTable = null;\r\n    const [isDUPChecked, setIsDUPChecked] = useState(false);\r\n    const [isDBSave, setIsDBSave] = useState(false);\r\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\r\n\r\n    \r\n\r\n    const setTable = (key, value) => {\r\n        const process = processState.current;\r\n        if (process === 1) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                1: {\r\n                    ...prevState[1],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        } else if (process === 2) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                2: {\r\n                    ...prevState[2],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        } else {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                0: {\r\n                    ...prevState[0],\r\n                    [key]: value\r\n                }\r\n            }))\r\n        }\r\n    };\r\n\r\n    const setTableForED = (key, value, idx) => {\r\n        if (currentTable[idx] === undefined) {\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                [idx]: {}\r\n            }))\r\n        }\r\n        setCurrentTable(prevState => ({\r\n            ...prevState,\r\n            [idx]: {\r\n                ...prevState[idx],\r\n                [key]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    const deleteTableKey = (key) => {\r\n        const process = processState.current;\r\n        if (process === 1) {\r\n            let tempTable = currentTable[1];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                1: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        } else if (process === 2) {\r\n            let tempTable = currentTable[2];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                2: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        } else {\r\n            let tempTable = currentTable[0];\r\n            delete tempTable[key]\r\n            setCurrentTable(prevState => ({\r\n                ...prevState,\r\n                0: {\r\n                    ...tempTable\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    const deleteTableKeyForED = (key, idx) => {\r\n        let tempTable = currentTable[idx];\r\n        delete tempTable[key];\r\n        setCurrentTable(prevState => ({\r\n            ...prevState,\r\n            [idx]: {\r\n                ...tempTable\r\n            }\r\n        }));\r\n    }\r\n\r\n    const numCheck = value => {\r\n        if (isNaN(value) || value.includes(\".\")) {\r\n            return value\r\n        } else {\r\n            return Number(value)\r\n        }\r\n    };\r\n    \r\n\r\n    const makeField = (typeStr, value, key, idx, process, disabled, isValid, checkFunc) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        let isError = false\r\n        if (isValid === false) {\r\n            isError = true\r\n        }\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (value === undefined) { // 테이블에 해당 key 자체가 없을 경우\r\n                    setTable(key, \"\");\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={value} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}/>\r\n            case \"N\": // text field (Number)\r\n                if (value === undefined) { // 테이블에 해당 key 자체가 없을 경우\r\n                    setTable(key, \"\");\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={value} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}/>\r\n            case \"D\": // date input\r\n                if (value === undefined) {\r\n                    setTable(key, \"\")\r\n                }\r\n                return <input \r\n                type=\"date\"\r\n                className={classes.dateInput}\r\n                value={value} \r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                if (key === \"Tungsten_Electrode_Size_select\") {\r\n                    console.log(\"here~ PPP\")\r\n                    console.log(value)\r\n                    console.log(processState)\r\n                    console.log(currentTable[processState.current][\"Tungsten_Electrode_Size_select\"])\r\n                }\r\n                if (value === undefined) {\r\n                    setTable(key, PREDEFINED_FIELDS[key][0])\r\n                }\r\n                return <select\r\n                onChange={e=> {\r\n                    setTable(key, checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                }}\r\n                className={classes.inlineSelect}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={value}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (currentTable[processState.current][key+\"_1\"] === undefined) {\r\n                    setTable(key+\"_1\", PREDEFINED_FIELDS[key][0])\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_1\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_2\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_3\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTable(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[processState.current][key+\"_3\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] === undefined || currentTable[processState.current][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_2\"] === undefined) {\r\n                            setTable(key+\"_2\", PREDEFINED_FIELDS[key][0])\r\n                        } else {\r\n                            setTable(key+\"_3\", PREDEFINED_FIELDS[key][0])\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_3\"] !== undefined) {\r\n                            deleteTableKey(key+\"_3\")\r\n                        } else {\r\n                            deleteTableKey(key+\"_2\")\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            case \"AT\": // ADDIBLE textfield\r\n                if (currentTable[processState.current][key+\"_1\"] === undefined) {\r\n                    setTable(key+\"_1\", \"\")\r\n                }\r\n                const validFunc = isValid ?? (() => {return true})\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null }}} \r\n                    value={currentTable[processState.current][key+\"_1\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[processState.current][key+\"_1\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/>\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[processState.current][key+\"_2\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[processState.current][key+\"_2\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_3\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[processState.current][key+\"_3\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[processState.current][key+\"_3\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTable(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] === undefined || currentTable[processState.current][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addTextFieldBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_2\"] === undefined) {\r\n                            setTable(key+\"_2\", \"\")\r\n                        } else {\r\n                            setTable(key+\"_3\", \"\")\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[processState.current][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addTextFieldBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[processState.current][key+\"_3\"] !== undefined) {\r\n                            deleteTableKey(key+\"_3\")\r\n                        } else {\r\n                            deleteTableKey(key+\"_2\")\r\n                        }\r\n                    }} alt=\"delete icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{style: {width: 120, fontSize: 12, fontWeight: 600, marginTop: 5, backgroundColor: 'rgba(196, 196, 196, 1)', padding: 4}}} value={typeStr} fullWidth variant=\"outlined\" />\r\n        }\r\n    }\r\n\r\n    const makeFieldForED = (typeStr, value, key, idx, process, disabled, isValid, checkFunc) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        let isError = false\r\n        if (isValid === false) {\r\n            isError = true\r\n        }\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (value === undefined) { // 테이블에 해당 key 자체가 없을 경우\r\n                    setTableForED(key, \"\", idx);\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 12, background: !disabled ? 'white' : null}}} \r\n                value={value} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                error={isError}\r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    setTableForED(key, checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                if (value === undefined) {\r\n                    setTableForED(key, PREDEFINED_FIELDS[key][0], idx)\r\n                    console.log(\"here\")\r\n                }\r\n                return <select\r\n                onChange={e=> {\r\n                    setTableForED(key, checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                }}\r\n                className={classes.inlineSelect}\r\n                style={{border: '1px solid gray'}}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={value}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (currentTable[idx][key+\"_1\"] === undefined) {\r\n                    setTableForED(key+\"_1\", PREDEFINED_FIELDS[key][0], idx)\r\n                }\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_1\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_2\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[idx][key+\"_3\"] !== undefined ? <select\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: 80}}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={currentTable[idx][key+\"_3\"]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] === undefined || currentTable[idx][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_2\"] === undefined) {\r\n                            setTableForED(key+\"_2\", PREDEFINED_FIELDS[key][0], idx)\r\n                        } else {\r\n                            setTableForED(key+\"_3\", PREDEFINED_FIELDS[key][0], idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_3\"] !== undefined) {\r\n                            deleteTableKeyForED(key+\"_3\", idx)\r\n                        } else {\r\n                            deleteTableKeyForED(key+\"_2\", idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            case \"AT\": // ADDIBLE textfield\r\n                if (currentTable[idx][key+\"_1\"] === undefined) {\r\n                    setTableForED(key+\"_1\", \"\", idx)\r\n                }\r\n                const validFunc = isValid ?? (() => {return true})\r\n                return (\r\n                <div style={{display: 'flex', gap: 5}}>\r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null }}} \r\n                    value={currentTable[idx][key+\"_1\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[idx][key+\"_1\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_1\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/>\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[idx][key+\"_2\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[idx][key+\"_2\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_2\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[idx][key+\"_3\"] !== undefined ? \r\n                    <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10, background: !disabled ? 'white' : null}}} \r\n                    value={currentTable[idx][key+\"_3\"]} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    error={!validFunc(currentTable[idx][key+\"_3\"])} // isValid parameter => valid function으로 사용\r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        setTableForED(key+\"_3\", checkFunc ? checkFunc(e.target.value) : e.target.value, idx);\r\n                    }}/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] === undefined || currentTable[idx][key+\"_3\"] === undefined ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addTextFieldBtn}\r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_2\"] === undefined) {\r\n                            setTableForED(key+\"_2\", \"\", idx)\r\n                        } else {\r\n                            setTableForED(key+\"_3\", \"\", idx)\r\n                        }\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {currentTable[idx][key+\"_2\"] !== undefined ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addTextFieldBtn} \r\n                    onClick={() => {\r\n                        if (currentTable[idx][key+\"_3\"] !== undefined) {\r\n                            deleteTableKeyForED(key+\"_3\", idx)\r\n                        } else {\r\n                            deleteTableKeyForED(key+\"_2\", idx)\r\n                        }\r\n                    }} alt=\"delete icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{style: {width: 120, fontSize: 12, fontWeight: 600, marginTop: 5, backgroundColor: 'rgba(196, 196, 196, 1)', padding: 4}}} value={typeStr} fullWidth variant=\"outlined\" />\r\n        }\r\n    }\r\n\r\n    const moveTable = (to) => { // 이전, 다음 테이블 이동 (to: -1 OR +1)\r\n        const toMove = tableStateRef.current.current + to;\r\n        if (toMove >= 0 && toMove <=tableStateRef.current.total-1) {\r\n            setTableState(prevState => ({\r\n                ...prevState,\r\n                current: toMove,\r\n                title: prevState.list[toMove],\r\n                isProcessAvailable: false,\r\n                checktype: false,\r\n                comment: \"\"\r\n            }));\r\n            console.log(tableStateRef.current)\r\n            setIsDBSave(prevState => (tableStateRef.current.finished.includes(tableStateRef.current.current)))\r\n            const loadTable = cloneDeep(ocrData[tableStateRef.current.list[toMove]][\"fields\"]);\r\n            if (!tableStateRef.current.list[toMove].includes(\"ELECTRODE\")) {\r\n                Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                    loadTable[key][0] = loadTable[key].join(' ')\r\n                    for (let i=1; i<loadTable[key].length; i++) {\r\n                        loadTable[key][i] = \"\"\r\n                    }\r\n                });\r\n            }\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable(prevState => ({\r\n                0: {},\r\n                1: {},\r\n                2: {}\r\n            }))\r\n            setDocState((prevState) => ({\r\n                ...prevState,\r\n                current: ocrData[tableStateRef.current.list[toMove]][\"page\"]\r\n            }))\r\n            if (!tableStateRef.current.list[toMove].includes(\"ELECTRODE\")) {\r\n                setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                    top: 800*ocrData[tableStateRef.current.list[toMove]][\"area\"][\"top\"],\r\n                    left: 550*ocrData[tableStateRef.current.list[toMove]][\"area\"][\"left\"],\r\n                    width: 600*(ocrData[tableStateRef.current.list[toMove]][\"area\"][\"right\"] - ocrData[tableStateRef.current.list[toMove]][\"area\"][\"left\"]),\r\n                    height: 800*(ocrData[tableStateRef.current.list[toMove]][\"area\"][\"bottom\"] - ocrData[tableStateRef.current.list[toMove]][\"area\"][\"top\"]),\r\n                });\r\n            } else {\r\n                setCurrentTable(prevState => ({\r\n                    0: {}\r\n                }))\r\n                setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                });\r\n            }\r\n\r\n            setProcessState({ // process 상태 초기화\r\n                ...processState,\r\n                current: 0\r\n            });\r\n            console.log(ocrData)\r\n            console.log(tableStateRef.current)\r\n        }\r\n    }\r\n\r\n    const moveProcess = (to) => {\r\n        setProcessState({\r\n            ...processState,\r\n            current: to\r\n        });\r\n        console.log(currentTable[to])\r\n    }\r\n\r\n    const addProcess = () => { // process 추가\r\n        if (processState.count === 1) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        } else if (processState.count === 2) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 3\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteProcess = (position) => { // process 삭제\r\n        if (position === 2) { // 두번째 process 삭제\r\n            if (processState.count === 3) { // 중간 process 삭제\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 2,\r\n                    second: processState.third\r\n                });\r\n                setTable(\"Welding_Process_2\", processState.third)\r\n                deleteTableKey(\"Welding_Process_3\")\r\n            }\r\n            else if (processState.count === 2) {\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 1\r\n                });\r\n                deleteTableKey(\"Welding_Process_2\")\r\n            }\r\n        } else if (position === 3) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n            deleteTableKey(\"Welding_Process_3\")\r\n        }\r\n    }\r\n\r\n    const beforeSubmit = (select, target) => {\r\n        let altValue = 0;\r\n        Object.keys(refinedTable).forEach((idx) => {\r\n            switch (refinedTable[idx][select]) {\r\n                case \"All\":\r\n                    altValue = -1000\r\n                    break\r\n                case \"None\":\r\n                    altValue = -1001\r\n                    break\r\n                case \"N/A\":\r\n                    altValue = -1002\r\n                    break\r\n                case \"No\":\r\n                    altValue = -1003\r\n                    break\r\n                default:\r\n                    return;\r\n            }\r\n            target.forEach((key) => {\r\n                refinedTable = ({\r\n                    ...refinedTable,\r\n                    [idx]: {\r\n                        ...refinedTable[idx],\r\n                        [key]: altValue\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const submitTable = () => { // 수정된 테이블 DB state 저장\r\n        console.log(currentTable);\r\n        if (!tableStateRef.current.finished.includes(tableStateRef.current.current)) { // finished 리스트에 없는 경우 현재 table 인덱스 추가\r\n            setTableState(prevState => ({\r\n                ...prevState,\r\n                finished: tableStateRef.current.finished.concat(tableStateRef.current.current)\r\n            }));\r\n        }\r\n\r\n        const tempTable = cloneDeep(currentTable)\r\n        refinedTable = cloneDeep(currentTable)\r\n\r\n        console.log(refinedTable)\r\n        console.log(tableStateRef.current.title)\r\n        if (tableStateRef.current.title.includes(\"Info\")) {\r\n            beforeSubmit(\"Impact_Test_yesno\", [\"Impact_Test_temp\"])\r\n        } else if (tableStateRef.current.title.includes(\"402\")) {\r\n            beforeSubmit(\"Root_Spacing_select\", [\"Root_Spacing_min\", \"Root_Spacing_max\"])\r\n        } else if (tableStateRef.current.title.includes(\"403\")) {\r\n            beforeSubmit(\"Qualified_Thickness_Range_groove_select\", [\"Qual_Thk_Range_groove_min\", \"Qual_Thk_Range_groove_max\"])\r\n            beforeSubmit(\"Qualified_Thickness_Range_fillet_select\", [\"Qual_Thk_Range_fillet_min\", \"Qual_Thk_Range_fillet_max\"])\r\n            beforeSubmit(\"Pipe_Diameter_Range_select\", [\"Pipe_Diameter_Range_min\", \"Pipe_Diameter_Range_max\"])\r\n            beforeSubmit(\"Max_Pass_Thk_Limit_select\", [\"Max_Pass_Thk_Limit\"])\r\n        } else if (tableStateRef.current.title.includes(\"404\")) {\r\n            beforeSubmit(\"Depo_Weld_Metal_groove_select\", [\"Depo_Weld_Metal_groove\"])\r\n            beforeSubmit(\"Depo_Weld_Metal_fillet_select\", [\"Depo_Weld_Metal_fillet\"])\r\n        } else if (tableStateRef.current.title.includes(\"406\")) {\r\n            beforeSubmit(\"Preheat_Temp_select\", [\"Preheat_Temp_min\", \"Preheat_Temp_max\", \"Preheat_Temp_over_thk_1\", \"Preheat_Temp_over_thk_1_temp\", \"Preheat_Temp_over_thk_2\", \"Preheat_Temp_over_thk_2_temp\"])\r\n            beforeSubmit(\"Interpass_Temp_select\", [\"Interpass_Temp_min\", \"Interpass_Temp_max\"])\r\n        } else if (tableStateRef.current.title.includes(\"407\")) {\r\n            beforeSubmit(\"Postweld_Heat_Treat_Temp_select\", [\"Postweld_Heat_Treat_Temp_min\", \"Postweld_Heat_Treat_Temp_max\"])\r\n            beforeSubmit(\"Holding_Time_select\", [\"Holding_Time_per_thk_time\", \"Holding_Time_per_thk\", \"Holding_Time_min\"])\r\n        } else if (tableStateRef.current.title.includes(\"408\")) {\r\n            beforeSubmit(\"Shielding_Gas_select\", [\"Shielding_Gas_1_Composition\", \"Shielding_Gas_2_Composition\", \"Shielding_Gas_3_Composition\", \"Shielding_Gas_Flow_Rate_min\", \"Shielding_Gas_Flow_Rate_max\"])\r\n            beforeSubmit(\"Backing_Gas_select\", [\"Backing_Gas_1_Composition\", \"Backing_Gas_2_Composition\", \"Backing_Gas_3_Composition\", \"Backing_Gas_Flow_Rate_min\", \"Backing_Gas_Flow_Rate_max\"])\r\n            beforeSubmit(\"Trailing_Gas_select\", [\"Trailing_Gas_1_Composition\", \"Trailing_Gas_2_Composition\", \"Trailing_Gas_3_Composition\", \"Trailing_Gas_Flow_Rate_min\", \"Trailing_Gas_Flow_Rate_max\"])\r\n        } else if (tableStateRef.current.title.includes(\"409\")) {\r\n            beforeSubmit(\"Tungsten_Electrode_Size_select\", [\"Tungsten_Electrode_Size_1\", \"Tungsten_Electrode_Size_2\", \"Tungsten_Electrode_Size_3\"])\r\n        } else if (tableStateRef.current.title.includes(\"410\")) {\r\n            beforeSubmit(\"Orifice_Gas_Cup_or_Nozzle_Tip_select\", [\"Orifice_Gas_Cup_or_Nozzle_Tip_min\", \"Orifice_Gas_Cup_or_Nozzle_Tip_max\"])\r\n            beforeSubmit(\"Contact_Tube_to_Work_Dist_select\", [\"Contact_Tube_to_Work_Dist_min\", \"Contact_Tube_to_Work_Dist_max\"])\r\n            beforeSubmit(\"Multiple_Electrode_Spacing_select\", [\"Multiple_Electrode_Spacing\"])\r\n            beforeSubmit(\"Oscillation_select\", [\"Oscillation\"])\r\n        } else if (tableStateRef.current.title.includes(\"ELECTRODE\")) {\r\n            beforeSubmit(\"Current_Amperes_Range_select\", [\"Current_Amperes_Range_min\", \"Current_Amperes_Range_max\"])\r\n            beforeSubmit(\"Voltage_Range_select\", [\"Voltage_Range_min\", \"Voltage_Range_max\"])\r\n            beforeSubmit(\"Travel_Speed_select\", [\"Travel_Speed_min\", \"Travel_Speed_max\"])\r\n            \r\n        }\r\n        console.log(refinedTable)\r\n\r\n        Object.keys(refinedTable).forEach((process, idx) => {\r\n            Object.keys(refinedTable[idx]).forEach((key) => {\r\n                if (key.includes(\"select\")) {\r\n                    let editedTable = refinedTable[idx];\r\n                    delete editedTable[key];\r\n                    refinedTable = ({\r\n                        ...refinedTable,\r\n                        [idx]: {\r\n                            ...editedTable\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        })  \r\n        console.log(DBData)\r\n\r\n        if (!PROCESS_UNAVAILABLE_TABLES.includes(tableStateRef.current.title)) { // 프로세스 추가 가능 테이블 확인\r\n            if (processState.count === 2) {\r\n                DBData = {\r\n                    [tableStateRef.current.title]: [{\r\n                        \"fields\": {...refinedTable[1],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...refinedTable[0],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                };\r\n            } else if (processState.count === 3) {\r\n                DBData = {\r\n                    [tableStateRef.current.title]: [{\r\n                        \"fields\": {...refinedTable[2],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.third,\r\n                    },{\r\n                        \"fields\": {...refinedTable[1],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...refinedTable[0],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                };\r\n            } else {\r\n                DBData = {\r\n                    [tableStateRef.current.title]: [{\r\n                        \"fields\": {...refinedTable[0],\r\n                            \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                            \"check_message\": tableStateRef.current.comment\r\n                        },\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                };\r\n            }\r\n        } else {\r\n            DBData = { // 추가 프로세스 없음\r\n                [tableStateRef.current.title]: [{\r\n                    \"fields\": {...refinedTable[0],\r\n                        \"check_carefully\": Number(tableStateRef.current.checktype),\r\n                        \"check_message\": tableStateRef.current.comment\r\n                    },\r\n                }]\r\n            };\r\n        }\r\n        console.log(DBData);\r\n        console.log(tableStateRef.current);\r\n        setCurrentTable(prevState => ({\r\n            ...tempTable\r\n        }));\r\n        saveDB();\r\n    }\r\n\r\n    const checkDuplicate = () => {\r\n        enqueueSnackbar('Duplicate Checking ...')\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"WCHKDUP\",\r\n                \"wps_id\": props.docId,\r\n                \"wps_no\": DBData[\"WPS_Doc_Info\"][0][\"fields\"][\"WPS_No\"],\r\n                \"rev_no\": DBData[\"WPS_Doc_Info\"][0][\"fields\"][\"Rev_No\"]\r\n        })\r\n        .then((res) => {\r\n            if (res.data.body.result === \"OK\") {\r\n                if (res.data.body.duplicate === \"false\") {\r\n                    enqueueSnackbar('Duplicate OK (not duplicated)')\r\n                    setIsDUPChecked(true);\r\n                } else {\r\n                    enqueueSnackbar('에러 발생 : Duplicated Document', {variant: 'error'})\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    const saveDB = () => { // 서버 DB 저장 요청\r\n        enqueueSnackbar('DB 저장 요청중...')\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"WINSERT\",\r\n                \"wps_id\": props.docId,\r\n                \"data\": DBData\r\n        })\r\n        .then((res) => {\r\n            console.log(res)\r\n            if (res.data.body.result !== \"Fail\") {\r\n                setIsDBSave(true)\r\n                enqueueSnackbar('DB 저장 성공', {variant: 'success'});\r\n            }\r\n            else {\r\n                enqueueSnackbar('에러 발생 : '+res.data.body.message, {variant: 'error'})\r\n            }\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => { // 최초 페이지 진입 시 데이터 세팅\r\n        if (props.ocrData !== null) {\r\n            if (props.docStatus === \"CHECK\") {\r\n                exceptTableKeys.push(\"WPS_Doc_Info\")\r\n            }\r\n            const sortedTableKeys = Object.keys(ocrData).filter(key => !exceptTableKeys.includes(key)).sort(); // 테이블 key 정렬\r\n            sortedTableKeys.push(\"WPS_ELECTRODE\")\r\n            console.log(sortedTableKeys)\r\n            setTableState({\r\n                total: sortedTableKeys.length,\r\n                current: 0,\r\n                finished: [],\r\n                title: sortedTableKeys[0],\r\n                isProcessAvailable: false,\r\n                list: sortedTableKeys,\r\n                checktype: false,\r\n                comment: \"\"\r\n            });\r\n            const loadTable = cloneDeep(ocrData[sortedTableKeys[0]][\"fields\"]); // 인덱스 0 테이블 로드 및 정제\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            })\r\n            console.log(loadTable)\r\n            setOcrTable(cloneDeep(loadTable));\r\n            setCurrentTable(prevState => ({\r\n                0: {},\r\n                1: {},\r\n                2: {}\r\n            }))\r\n            setProcessState({\r\n                ...processState,\r\n                count: 1\r\n            })\r\n            setRectArea({...rectArea,\r\n                top: 800*ocrData[sortedTableKeys[0]][\"area\"][\"top\"],\r\n                left: 600*ocrData[sortedTableKeys[0]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[sortedTableKeys[0]][\"area\"][\"right\"] - ocrData[sortedTableKeys[0]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[sortedTableKeys[0]][\"area\"][\"bottom\"] - ocrData[sortedTableKeys[0]][\"area\"][\"top\"]),\r\n            })\r\n            // setDBState({ // DB state에 company 필드 임의 삽입\r\n            //     \"Company\": ocrData[\"Company\"]\r\n            // });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.title}>\r\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\r\n                Inspect -  {props.fileName}\r\n            </Box>\r\n            {true ? <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={false} onClick={saveDB}>\r\n                <SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장\r\n            </Button> : null}\r\n            {!true ? <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableStateRef.current.finished.length !== tableStateRef.current.total} onClick={checkDuplicate}>\r\n                <CheckIcon fontSize='small'/>&nbsp;&nbsp;중복 확인\r\n            </Button> : null}\r\n        </div>\r\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"loading-dialog\" maxWidth='xs' fullWidth={true}>\r\n            <DialogTitle id=\"loading-dialog\">DB Save</DialogTitle>\r\n            <List style={{ margin:15 }}>\r\n                <ListItem>\r\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\r\n                    {!isDBSave ? <CircularProgress size={20}/> : <DoneIcon />}\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n        <div className={!tableStateRef.current.title.includes(\"Info\") && !tableStateRef.current.title.includes(\"ELECTRODE\") ? classes.content : classes.content_info}>\r\n\r\n            <div className={classes.leftSide}>\r\n                <Box>\r\n                    OCR 결과\r\n                    {/* <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom + 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomInIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                    <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom - 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomOutIcon fontSize=\"small\"/>\r\n                    </IconButton> */}\r\n                </Box>\r\n\r\n                <Paper elevation={1} className={!tableStateRef.current.title.includes(\"Info\") && !tableStateRef.current.title.includes(\"ELECTRODE\") ? classes.leftPaper : classes.topPaper}>\r\n                    <Document \r\n                        file={props.fileURL}\r\n                        onLoadError={console.error}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                        noData={<div className={classes.guide}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>}>\r\n                        <Page height={400} pageNumber={docState.current} scale={docState.zoom}>\r\n                            <div \r\n                                className={classes.dashedRect}\r\n                                style={{\r\n                                    left: rectArea.left*docState.zoom/2, \r\n                                    top: rectArea.top*docState.zoom/2, \r\n                                    width: rectArea.width*docState.zoom/2, \r\n                                    height: rectArea.height*docState.zoom/2, \r\n                                }}/>\r\n                        </Page>\r\n                    </Document>\r\n                </Paper>\r\n                \r\n                <Grid container>\r\n                    <Button \r\n                        className={classes.prevBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === 1 ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current-1\r\n                            }))\r\n                        }}>\r\n                        이전페이지\r\n                    </Button>\r\n                    <Button \r\n                        className={classes.nextBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === docState.total || docState.total === null ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current+1\r\n                            }))\r\n                        }}>\r\n                        다음페이지\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n            \r\n            <div className={classes.rightSide}>\r\n                <Box>Table - {tableStateRef.current.current+1} / {tableStateRef.current.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableStateRef.current.total-tableStateRef.current.finished.length}</Box>\r\n                {isDBSave ? <Box className={!tableStateRef.current.title.includes(\"Info\") && !tableStateRef.current.title.includes(\"ELECTRODE\") ? classes.watermark : tableStateRef.current.title.includes(\"Info\") ? classes.bottomWatermark : classes.bottomEDWatermark} fontWeight=\"fontWeightBold\">수정완료 테이블</Box> : null}\r\n                \r\n                {/* WPS_Doc_Info Customized Table */}\r\n                {currentTable !== undefined && tableStateRef.current.title.includes(\"Info\") ? \r\n                <Paper elevation={1} className={classes.bottomPaper}>\r\n                    <div className=\"table\" style={{display: \"flex\"}}>\r\n\r\n                        <div className={classes.leftTable}>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"WPS_No\")}\r\n                                {makeField(\"T\", ocrTable[\"WPS_No\"][0], \"WPS_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"WPS_No\"], \"WPS_No\", 0, process, false, true, \r\n                                (value) => {\r\n                                    return value.replace(/(\\s*)/g, \"\")\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_No\")}\r\n                                {makeField(\"T\", ocrTable[\"Rev_No\"][0], \"Rev_No\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Rev_No\"], \"Rev_No\", 0, process, false, currentTable[processState.current][\"Rev_No\"] !== \"\" && !isNaN(currentTable[processState.current][\"Rev_No\"]) && currentTable[processState.current][\"Rev_No\"] >= 0,\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Supporting_PQR_No\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Supporting_PQR_No\"][0], \"Supporting_PQR_No\", 0, process, true)}\r\n                                    {makeField(\"AT\", currentTable[processState.current][\"Supporting_PQR_No\"], \"Supporting_PQR_No\", 0, process, false, null)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Welding_Process\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Welding_Process\"][0], \"Welding_Process\", 0, process, true)}\r\n                                    <div style={{display: 'flex', gap: 5}}>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            setProcessState((prevState) => ({...prevState, first: e.target.value}));\r\n                                            setTable(\"Welding_Process_1\", e.target.value)\r\n                                        }}\r\n                                        className={classes.preDefinedSelect}\r\n                                        style={{width: 80 }}\r\n                                        defaultValue={\"GTAW\"}\r\n                                        value={processState.first}>\r\n                                        {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                            return <option value={item}>{item}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    {processState.count >= 2 ?\r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, second: e.target.value}));\r\n                                                    setTable(\"Welding_Process_2\", e.target.value)\r\n                                                }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                style={{width: 80 }}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.second}>\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon}\r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(2)}/>\r\n                                        </div>\r\n                                        : null}\r\n                                    {processState.count === 3 ? \r\n                                        <div style={{display:'flex'}}>\r\n                                            <select\r\n                                                onChange={(e) => {\r\n                                                    setProcessState((prevState) => ({...prevState, third: e.target.value}));\r\n                                                    setTable(\"Welding_Process_3\", e.target.value)\r\n                                                }}\r\n                                                style={{width: 80 }}\r\n                                                className={classes.preDefinedSelect}\r\n                                                defaultValue={\"GTAW\"}\r\n                                                value={processState.third}\r\n                                                >\r\n                                                {PREDEFINED_FIELDS[\"Welding_Process\"].map((item) => {\r\n                                                    return <option value={item}>{item}</option>\r\n                                                })}\r\n                                            </select>\r\n                                            <img \r\n                                                src={deleteIcon} \r\n                                                className={classes.addItemBtn}\r\n                                                alt=\"delete process button\"\r\n                                                onClick={() => deleteProcess(3)}/>\r\n                                        </div>\r\n                                    : null}\r\n                                    {processState.count !== 3 ? \r\n                                        <img \r\n                                            src={addItemIcon} \r\n                                            className={classes.addItemBtn}\r\n                                            alt=\"add process button\"\r\n                                            onClick={addProcess}/>\r\n                                        : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.rightTable}>\r\n                            <Box>&nbsp;</Box>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Date\")}\r\n                                {makeField(\"T\", ocrTable[\"Date\"][0], \"Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Date\"], \"Date\", 1, process, false)}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Rev_Date\")}\r\n                                {makeField(\"T\", ocrTable[\"Rev_Date\"][0], \"Rev_Date\", 0, process, true)}\r\n                                {makeField(\"D\", currentTable[processState.current][\"Rev_Date\"], \"Rev_Date\", 1, process, false, true, \r\n                                (value) => {\r\n                                    if (currentTable[processState.current][\"Rev_No\"] === 0) {\r\n                                        return null\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Impact_Test\")}\r\n                                {makeField(\"T\", ocrTable[\"Impact_Test\"][0], \"Impact_Test\", 0, process, true)}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Impact_Test_yesno\"], \"Impact_Test_yesno\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Impact_Test_temp\"], \"Impact_Test_temp\", 1, process, currentTable[processState.current][\"Impact_Test_yesno\"] !== \"Yes\", currentTable[processState.current][\"Impact_Test_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Impact_Test_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                                {makeField(\"Type\")}\r\n                                <div>\r\n                                    {makeField(\"T\", ocrTable[\"Type\"][0], \"Type\", 0, process, true)}\r\n                                    {makeField(\"AP\", currentTable[processState.current][\"Type\"], \"Type\", 0, process, false)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"Code\")}\r\n                                {makeField(\"T\", ocrTable[\"Code\"][0], \"Code\", 0, process, true)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Code\"], \"Code\", 0, process, false)}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                \r\n                {!tableStateRef.current.title.includes(\"Info\") && !tableStateRef.current.title.includes(\"ELECTRODE\") ? \r\n                <>\r\n                <div style={{display: 'flex'}}>\r\n                    <Checkbox color=\"default\" size='small' checked={tableStateRef.current.checktype} \r\n                    onChange={e => \r\n                        setTableState(prevState => ({\r\n                            ...prevState,\r\n                            checktype: e.target.checked,\r\n                        }))}/>\r\n                    <div style={{paddingTop: 8, fontSize: 14, width: 200}}>Suggest to Recheck</div>\r\n                    <TextField \r\n                        margin=\"dense\"\r\n                        inputProps={{\r\n                            style: {\r\n                                fontSize: 12, \r\n                                padding: 5, \r\n                                color: \"red\"\r\n                            }}} \r\n                        className={classes.highlightedTextBorder}\r\n                        value={tableStateRef.current.comment}\r\n                        style={{height: 20}}\r\n                        fullWidth\r\n                        variant=\"outlined\" \r\n                        label=\"Comment\" InputLabelProps={{ shrink: true, classes: {\r\n                            root: classes.highlightedTextLabel,\r\n                          }, }} \r\n                        onChange={e => \r\n                            setTableState(prevState => ({\r\n                                ...prevState,\r\n                                comment: e.target.value\r\n                            }))\r\n                        }/>\r\n                </div>\r\n                <div className={classes.processArea}>\r\n                    <div className={classes.processTab} style={{marginLeft: 28, background: processState.current===0 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===0 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(0)}>\r\n                        {processState.first}\r\n                    </div>\r\n                    {processState.count >= 2 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===1 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===1 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(1)}>\r\n                            {processState.second}\r\n                        </div> : null}\r\n                    {processState.count >= 3 ?\r\n                        <div className={classes.processTab} style={{background: processState.current===2 ? \"rgba(238, 238, 238, 1)\" : 'rgba(151, 162, 185, 1)', color: processState.current===2 ? \"rgba(23, 62, 139, 1)\" : 'white'}} onClick={() => moveProcess(2)}>\r\n                            {processState.third}\r\n                        </div> : null}\r\n                </div>\r\n                </> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"402\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Type_of_Joint\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Type_of_Joint\"][0], \"Type_of_Joint\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Type_of_Joint\"], \"Type_of_Joint\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing\")}\r\n                        {makeField(\"T\", ocrTable[\"Backing\"][0], \"Backing\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Backing\"], \"Backing\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Backing_Material\")}\r\n                        <div style={{alignSelf: \"center\"}}>\r\n                            {makeField(\"T\", ocrTable[\"Backing_Material\"][0], \"Backing_Material\", 0, process, true)}\r\n                        </div>\r\n                        <div style={{display: \"grid\"}}>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"groove\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material_groove\"], \"Backing_Material_groove\", 0, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"60px 1fr\", gap: 5}}>\r\n                                {makeField(\"fillet\")}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Backing_Material_fillet\"], \"Backing_Material_fillet\", 1, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Root_Spacing\")}\r\n                        <div>\r\n                            <div style={{display: \"grid\"}}>\r\n                                {makeField(\"T\", ocrTable[\"Root_Spacing\"][0], \"Root_Spacing\", 0, process, true)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Root_Spacing_select\"], \"Root_Spacing_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing_min\"], \"Root_Spacing_min\", 1, process, currentTable[processState.current][\"Root_Spacing_select\"] !== \"Value\", currentTable[processState.current][\"Root_Spacing_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Root_Spacing_min\"]), \r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Root_Spacing_max\"], \"Root_Spacing_max\", 2, process, currentTable[processState.current][\"Root_Spacing_select\"] !== \"Value\", currentTable[processState.current][\"Root_Spacing_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Root_Spacing_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Retainers\")}\r\n                        {makeField(\"T\", ocrTable[\"Retainers\"][0], \"Retainers\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Retainers\"], \"Retainers\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"403\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"P_No\"][0], \"P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"P_No\"], \"P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Gr_No\"][0], \"Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Gr_No\"], \"Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"to_P_No\")}\r\n                        {makeField(\"T\", ocrTable[\"to_P_No\"][0], \"to_P_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"to_P_No\"], \"to_P_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"to_Gr_No\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"to_Gr_No\"][0], \"to_Gr_No\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"to_Gr_No\"], \"to_Gr_No\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"or_Spec_Type_and_Grade\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"or_Spec_Type_and_Grade\"][0], \"or_Spec_Type_and_Grade\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"T\", currentTable[processState.current][\"Spec\"], \"Spec\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Type_Grade\"], \"Type_Grade\", 1, process, false)}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"to_Spec\"], \"to_Spec\", 2, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"to_Type_Grade\"], \"to_Type_Grade\", 3, process, false)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"][0], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range_groove_select\"], \"Qualified_Thickness_Range_groove_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_groove_min\"], \"Qual_Thk_Range_groove_min\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range_groove_select\"] !== \"Value\", currentTable[processState.current][\"Qual_Thk_Range_groove_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_groove_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_groove_max\"], \"Qual_Thk_Range_groove_max\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range_groove_select\"] !== \"Value\", currentTable[processState.current][\"Qual_Thk_Range_groove_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_groove_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Qualified_Thickness_Range(Fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Qualified_Thickness_Range\"], \"Qualified_Thickness_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Qualified_Thickness_Range_fillet_select\"], \"Qualified_Thickness_Range_fillet_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"], \"Qual_Thk_Range_fillet_min\", 1, process, currentTable[processState.current][\"Qualified_Thickness_Range_fillet_select\"] !== \"Value\", currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_fillet_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"], \"Qual_Thk_Range_fillet_max\", 2, process, currentTable[processState.current][\"Qualified_Thickness_Range_fillet_select\"] !== \"Value\", currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Qual_Thk_Range_fillet_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Pipe_Diameter_Range\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Pipe_Diameter_Range\"][0], \"Pipe_Diameter_Range\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Pipe_Diameter_Range_select\"], \"Pipe_Diameter_Range_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range_min\"], \"Pipe_Diameter_Range_min\", 1, process, currentTable[processState.current][\"Pipe_Diameter_Range_select\"] !== \"Value\", currentTable[processState.current][\"Pipe_Diameter_Range_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"to\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Pipe_Diameter_Range_max\"], \"Pipe_Diameter_Range_max\", 2, process, currentTable[processState.current][\"Pipe_Diameter_Range_select\"] !== \"Value\", currentTable[processState.current][\"Pipe_Diameter_Range_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Pipe_Diameter_Range_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Max_Pass_Thk_Limit\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Max_Pass_Thk_Limit\"][0], \"Max_Pass_Thk_Limit\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Max_Pass_Thk_Limit_select\"], \"Max_Pass_Thk_Limit_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"], \"Max_Pass_Thk_Limit\", 1, process, currentTable[processState.current][\"Max_Pass_Thk_Limit_select\"] !== \"Value\", currentTable[processState.current][\"Max_Pass_Thk_Limit\"] !== \"\" && !isNaN(currentTable[processState.current][\"Max_Pass_Thk_Limit\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"404\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"F_No\")}\r\n                        {makeField(\"T\", ocrTable[\"F_No\"][0], \"F_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"F_No\"], \"F_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"A_No\")}\r\n                        {makeField(\"T\", ocrTable[\"A_No\"][0], \"A_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"A_No\"], \"A_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"SFA_No\")}\r\n                        {makeField(\"T\", ocrTable[\"SFA_No\"][0], \"SFA_No\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"SFA_No\"], \"SFA_No\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"AWS_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"AWS_Class\"][0], \"AWS_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"AWS_Class\"], \"AWS_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Brand_Name\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Brand_Name\"][0], \"Brand_Name\", 0, process, true)}\r\n                            {makeField(\"T\", currentTable[processState.current][\"Brand_Name\"], \"Brand_Name\", 0, process, false)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(groove)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"][0], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal_groove_select\"], \"Depo_Weld_Metal_groove_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal_groove\"], \"Depo_Weld_Metal_groove\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal_groove_select\"] !== \"Value\", currentTable[processState.current][\"Depo_Weld_Metal_groove\"] !== \"\" && !isNaN(currentTable[processState.current][\"Depo_Weld_Metal_groove\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Depo_Weld_Metal(fillet)\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Depo_Weld_Metal\"][0], \"Depo_Weld_Metal\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Depo_Weld_Metal_fillet_select\"], \"Depo_Weld_Metal_fillet_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Depo_Weld_Metal_fillet\"], \"Depo_Weld_Metal_fillet\", 1, process, currentTable[processState.current][\"Depo_Weld_Metal_fillet_select\"] !== \"Value\", currentTable[processState.current][\"Depo_Weld_Metal_fillet\"] !== \"\" && !isNaN(currentTable[processState.current][\"Depo_Weld_Metal_fillet\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Filler_Product_Form\")}\r\n                        {makeField(\"T\", ocrTable[\"Filler_Product_Form\"][0], \"Filler_Product_Form\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Filler_Product_Form\"], \"Filler_Product_Form\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Size\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Size\"][0], \"Size\", 0, process, true)}\r\n                            {makeField(\"AT\", currentTable[processState.current][\"Size\"], \"Size\", 0, process, false, \r\n                            value => { return value !== \"\" && !isNaN(value)}, \r\n                            value => {\r\n                                if (isNaN(value) || value.includes(\".\")) {\r\n                                    return value\r\n                                } else {\r\n                                    return Number(value)\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Supplemental\")}\r\n                        {makeField(\"T\", ocrTable[\"Supplemental\"][0], \"Supplemental\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Supplemental\"], \"Supplemental\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Element\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Element\"][0], \"Alloy_Element\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Element\"], \"Alloy_Element\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Wire_Class\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Wire_Class\"][0], \"Flux_Wire_Class\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Wire_Class\"], \"Flux_Wire_Class\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Alloy_Flux\")}\r\n                        {makeField(\"T\", ocrTable[\"Alloy_Flux\"][0], \"Alloy_Flux\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Alloy_Flux\"], \"Alloy_Flux\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Trade_Name\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Trade_Name\"][0], \"Flux_Trade_Name\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Trade_Name\"], \"Flux_Trade_Name\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Flux_Type\")}\r\n                        {makeField(\"T\", ocrTable[\"Flux_Type\"][0], \"Flux_Type\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Flux_Type\"], \"Flux_Type\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Recrushed_Slag\")}\r\n                        {makeField(\"T\", ocrTable[\"Recrushed_Slag\"][0], \"Recrushed_Slag\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Recrushed_Slag\"], \"Recrushed_Slag\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Consumable_Insert\")}\r\n                        {makeField(\"T\", ocrTable[\"Consumable_Insert\"][0], \"Consumable_Insert\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Consumable_Insert\"], \"Consumable_Insert\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"405\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Groove\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Groove\"][0], \"Position_of_Groove\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Groove\"], \"Position_of_Groove\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Position_of_Fillet\")}\r\n                        {makeField(\"T\", ocrTable[\"Position_of_Fillet\"][0], \"Position_of_Fillet\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Position_of_Fillet\"], \"Position_of_Fillet\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Welding_Progression\")}\r\n                        {makeField(\"T\", ocrTable[\"Welding_Progression\"][0], \"Welding_Progression\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Welding_Progression\"], \"Welding_Progression\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"406\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Preheat_Temp\")}\r\n                        <div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 5}}>\r\n                                {makeField(\"T\", ocrTable[\"Min_Preheat_Temp\"][0], \"Min_Preheat_Temp\", 0, process, true)}\r\n                                {makeField(\"P\", currentTable[processState.current][\"Preheat_Temp_select\"], \"Preheat_Temp_select\", 0, process, true)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_min\"], \"Preheat_Temp_min\", 0, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                                {makeField(\"Max.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_max\"], \"Preheat_Temp_max\", 1, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"T1 >\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_1\"], \"Preheat_Temp_over_thk_1\", 2, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_over_thk_1\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_1\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"], \"Preheat_Temp_over_thk_1_temp\", 3, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_1_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"T1 >\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_2\"], \"Preheat_Temp_over_thk_2\", 4, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_over_thk_2\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_2\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"], \"Preheat_Temp_over_thk_2_temp\", 5, process, currentTable[processState.current][\"Preheat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"] !== \"\" && !isNaN(currentTable[processState.current][\"Preheat_Temp_over_thk_2_temp\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Interpass_Temp\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Max_Interpass_Temp\"][0], \"Max_Interpass_Temp\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 40px 1fr 40px 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Interpass_Temp_select\"], \"Interpass_Temp_select\", 0, process, false)}\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Interpass_Temp_min\"], \"Interpass_Temp_min\", 1, process, currentTable[processState.current][\"Interpass_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Interpass_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Interpass_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Interpass_Temp_max\"], \"Interpass_Temp_max\", 2, process, currentTable[processState.current][\"Interpass_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Interpass_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Interpass_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Preheat_Maintain\")}\r\n                        {makeField(\"T\", ocrTable[\"Preheat_Maintain\"][0], \"Preheat_Maintain\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Preheat_Maintain\"], \"Preheat_Maintain\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"407\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Postweld_Heat_Treat_Temp\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Postweld_Heat_Treat_Temp\"][0], \"Postweld_Heat_Treat_Temp\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"], \"Postweld_Heat_Treat_Temp_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"], \"Postweld_Heat_Treat_Temp_min\", 1, process, currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Postweld_Heat_Treat_Temp_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"], \"Postweld_Heat_Treat_Temp_max\", 1, process, currentTable[processState.current][\"Postweld_Heat_Treat_Temp_select\"] !== \"Value\", currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Postweld_Heat_Treat_Temp_max\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"°C\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Holding_Time\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Holding_Time\"][0], \"Holding_Time\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Holding_Time_select\"], \"Holding_Time_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_per_thk_time\"], \"Holding_Time_per_thk_time\", 1, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"Value\", currentTable[processState.current][\"Holding_Time_per_thk_time\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_per_thk_time\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"min /\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_per_thk\"], \"Holding_Time_per_thk\", 2, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"Value\", currentTable[processState.current][\"Holding_Time_per_thk\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_per_thk\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"Min.\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Holding_Time_min\"], \"Holding_Time_min\", 3, process, currentTable[processState.current][\"Holding_Time_select\"] !== \"Value\", currentTable[processState.current][\"Holding_Time_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Holding_Time_min\"]),\r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"408\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Shielding)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Shielding_Gas_select\"], \"Shielding_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Shielding_Gas\"], \"Shielding_Gas\", 1, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Shielding)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            style={{}}\r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Shielding_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Shielding_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Shielding_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Shielding_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Shielding_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Shielding_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Shielding_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Shielding_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Shielding_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Shielding_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Shielding)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"], \"Shielding_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"], \"Shielding_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Shielding_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Shielding_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Backing)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Backing_Gas_select\"], \"Backing_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Backing_Gas\"], \"Backing_Gas\", 1, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Backing)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Backing_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Backing_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Backing_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Backing_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Backing_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Backing_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Backing_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Backing_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Backing_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Backing_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Backing)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"], \"Backing_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"], \"Backing_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Backing_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 3fr\", gap: 5}}>\r\n                        {makeField(\"Gas(Trailing)\")}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Trailing_Gas_select\"], \"Trailing_Gas_select\", 0, process, true)}\r\n                        {makeField(\"AT\", currentTable[processState.current][\"Trailing_Gas\"], \"Trailing_Gas\", 1, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Composition(Trailing)\")}\r\n                        <div style={{display: 'flex', gap: 5}}>\r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yse\" ? 'white' : null }}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_1_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_1_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_1_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_1_Composition\", numCheck(e.target.value));\r\n                            }}/>\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_2_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_2_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_2_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== undefined ? \r\n                            <TextField \r\n                            margin=\"dense\" \r\n                            inputProps={{style: {fontSize: 10, background: !currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\" ? 'white' : null}}} \r\n                            value={currentTable[processState.current][\"Trailing_Gas_3_Composition\"]} \r\n                            disabled={currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\"}\r\n                            error={currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_3_Composition\"])}\r\n                            fullWidth \r\n                            variant=\"outlined\" \r\n                            onChange={e=> {\r\n                                setTable(\"Trailing_Gas_3_Composition\", numCheck(e.target.value));\r\n                            }}/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] === undefined || currentTable[processState.current][\"Trailing_Gas_3_Composition\"] === undefined ? <img \r\n                            src={addItemIcon} \r\n                            className={classes.addTextFieldBtn}\r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Trailing_Gas_2_Composition\"] === undefined) {\r\n                                    setTable(\"Trailing_Gas_2_Composition\", \"\")\r\n                                } else {\r\n                                    setTable(\"Trailing_Gas_3_Composition\", \"\")\r\n                                }\r\n                            }} alt=\"add icon\"/> : null}\r\n\r\n                            {currentTable[processState.current][\"Trailing_Gas_2_Composition\"] !== undefined ? <img\r\n                            src={deleteIcon} \r\n                            className={classes.addTextFieldBtn} \r\n                            onClick={() => {\r\n                                if (currentTable[processState.current][\"Trailing_Gas_3_Composition\"] !== undefined) {\r\n                                    deleteTableKey(\"Trailing_Gas_3_Composition\")\r\n                                } else {\r\n                                    deleteTableKey(\"Trailing_Gas_2_Composition\")\r\n                                }\r\n                            }} alt=\"delete icon\"/> : null}\r\n                        </div>\r\n                        {makeField(\"%\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 40px 1fr 40px\", gap: 5}}>\r\n                        {makeField(\"Flow Rate(Trailing)\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"], \"Trailing_Gas_Flow_Rate_min\", 1, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_Flow_Rate_min\"]), numCheck)}\r\n                        {makeField(\"~\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"], \"Trailing_Gas_Flow_Rate_max\", 2, process, currentTable[processState.current][\"Trailing_Gas_select\"] !== \"Yes\", currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Trailing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                        {makeField(\"l/min\")}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"409\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Current\")}\r\n                        {makeField(\"T\", ocrTable[\"Current\"][0], \"Current\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Current\"], \"Current\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Polarity\")}\r\n                        {makeField(\"T\", ocrTable[\"Polarity\"][0], \"Polarity\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Polarity\"], \"Polarity\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Tungsten_Electrode_Type\")}\r\n                        {makeField(\"T\", ocrTable[\"Tungsten_Electrode_Type\"][0], \"Tungsten_Electrode_Type\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Tungsten_Electrode_Type\"], \"Tungsten_Electrode_Type\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Tungsten_Electrode_Size\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Tungsten_Electrode_Size\"][0], \"Tungsten_Electrode_Size\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 3fr\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Tungsten_Electrode_Size_select\"], \"Tungsten_Electrode_Size_select\", 0, process, false)}\r\n                                {makeField(\"AT\", currentTable[processState.current][\"Tungsten_Electrode_Size\"], \"Tungsten_Electrode_Size\", 0, process, currentTable[processState.current][\"Tungsten_Electrode_Size_select\"] !== \"Value\",\r\n                                value => { return value !== \"\" && !isNaN(value)}, \r\n                                value => {\r\n                                    if (isNaN(value) || value.includes(\".\")) {\r\n                                        return value\r\n                                    } else {\r\n                                        return Number(value)\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Pulsing_Current\")}\r\n                        {makeField(\"T\", ocrTable[\"Pulsing_Current\"][0], \"Pulsing_Current\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Pulsing_Current\"], \"Pulsing_Current\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Mode_of_Metal_Transfer\")}\r\n                        {makeField(\"T\", ocrTable[\"Mode_of_Metal_Transfer\"][0], \"Mode_of_Metal_Transfer\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Mode_of_Metal_Transfer\"], \"Mode_of_Metal_Transfer\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"410\") ? \r\n                <Paper elevation={0} className={classes.rightPaper}>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Stringer_or_Weave_Bead\")}\r\n                        {makeField(\"T\", ocrTable[\"Stringer_or_Weave_Bead\"][0], \"Stringer_or_Weave_Bead\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Stringer_or_Weave_Bead\"], \"Stringer_or_Weave_Bead\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Orifice_Gas_Cup_or_Nozzle_Tip\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Orifice_Gas_Cup_or_Nozzle_Tip\"][0], \"Orifice_Gas_Cup_or_Nozzle_Tip\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_min\", 1, process, currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"] !== \"Value\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_min\"]), numCheck)}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"], \"Orifice_Gas_Cup_or_Nozzle_Tip_max\", 2, process, currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_select\"] !== \"Value\", currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Orifice_Gas_Cup_or_Nozzle_Tip_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Initial_or_Interpass_Cleaning\")}\r\n                        {makeField(\"T\", ocrTable[\"Initial_or_Interpass_Cleaning\"][0], \"Initial_or_Interpass_Cleaning\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Initial_or_Interpass_Cleaning\"], \"Initial_or_Interpass_Cleaning\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Contact_Tube_to_Work_Dist\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Contact_Tube_to_Work_Dist\"][0], \"Contact_Tube_to_Work_Dist\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"], \"Contact_Tube_to_Work_Dist_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"], \"Contact_Tube_to_Work_Dist_min\", 1, process, currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"] !== \"Value\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"] !== \"\" && !isNaN(currentTable[processState.current][\"Contact_Tube_to_Work_Dist_min\"]), numCheck)}\r\n                                {makeField(\"~\")}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"], \"Contact_Tube_to_Work_Dist_max\", 2, process, currentTable[processState.current][\"Contact_Tube_to_Work_Dist_select\"] !== \"Value\", currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Contact_Tube_to_Work_Dist_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Closed_to_Out_Chamber\")}\r\n                        {makeField(\"T\", ocrTable[\"Closed_to_Out_Chamber\"][0], \"Closed_to_Out_Chamber\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Closed_to_Out_Chamber\"], \"Closed_to_Out_Chamber\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Use_of_Thermal_Process\")}\r\n                        {makeField(\"T\", ocrTable[\"Use_of_Thermal_Process\"][0], \"Use_of_Thermal_Process\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Use_of_Thermal_Process\"], \"Use_of_Thermal_Process\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Method_of_Back_Gouging\")}\r\n                        {makeField(\"T\", ocrTable[\"Method_of_Back_Gouging\"][0], \"Method_of_Back_Gouging\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Method_of_Back_Gouging\"], \"Method_of_Back_Gouging\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Single_or_Multiple_Pass\")}\r\n                        {makeField(\"T\", ocrTable[\"Single_or_Multiple_Pass\"][0], \"Single_or_Multiple_Pass\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Single_or_Multiple_Pass\"], \"Single_or_Multiple_Pass\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Single_or_Multiple_Electrode\")}\r\n                        {makeField(\"T\", ocrTable[\"Single_or_Multiple_Electrode\"][0], \"Single_or_Multiple_Electrode\", 0, process, true)}\r\n                        {makeField(\"P\", currentTable[processState.current][\"Single_or_Multiple_Electrode\"], \"Single_or_Multiple_Electrode\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Multiple_Electrode_Spacing\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Multiple_Electrode_Spacing\"][0], \"Multiple_Electrode_Spacing\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Multiple_Electrode_Spacing_select\"], \"Multiple_Electrode_Spacing_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Multiple_Electrode_Spacing\"], \"Multiple_Electrode_Spacing\", 1, process, currentTable[processState.current][\"Multiple_Electrode_Spacing_select\"] !== \"Value\", currentTable[processState.current][\"Multiple_Electrode_Spacing\"] !== \"\" && !isNaN(currentTable[processState.current][\"Multiple_Electrode_Spacing\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr 1fr\", gap: 5}}>\r\n                        {makeField(\"Peening\")}\r\n                        {makeField(\"T\", ocrTable[\"Peening\"][0], \"Peening\", 0, process, true)}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Peening\"], \"Peening\", 0, process, false)}\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Oscillation\")}\r\n                        <div>\r\n                            {makeField(\"T\", ocrTable[\"Oscillation\"][0], \"Oscillation\", 0, process, true)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px\", gap: 5}}>\r\n                                {makeField(\"P\", currentTable[processState.current][\"Oscillation_select\"], \"Oscillation_select\", 0, process, false)}\r\n                                {makeField(\"T\", currentTable[processState.current][\"Oscillation\"], \"Oscillation\", 1, process, currentTable[processState.current][\"Oscillation_select\"] !== \"Value\", currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"] !== \"\" && !isNaN(currentTable[processState.current][\"Backing_Gas_Flow_Rate_max\"]), numCheck)}\r\n                                {makeField(\"mm\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableRow\" style={{display: \"grid\", gridTemplateColumns: \"130px 1fr\", gap: 5}}>\r\n                        {makeField(\"Others\")}\r\n                        {makeField(\"T\", currentTable[processState.current][\"Others\"], \"Others\", 0, process, false)}\r\n                    </div>\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"ELECTRODE\") ? \r\n                <Paper elevation={0} className={classes.bottomPaper}>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 150px 120px 70px\"}}>\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Weld_Layer\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Welding_Process\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Class\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Dia\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Type_Polar\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Amperes_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Voltage_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Travel_Speed\"} fullWidth variant=\"outlined\" />\r\n                        {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Heat_Input\"} fullWidth variant=\"outlined\" /> */}\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Remark\"} fullWidth variant=\"outlined\" />\r\n                    </div>\r\n                    {ocrTable[\"Weld_Layer\"].map((item, idx) => {\r\n                        return (<div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 150px 120px 70px\"}}>\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Weld_Layer\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Welding_Process\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Filler_Metal_Class\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Filler_Metal_Dia\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Current_Type_Polar\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Current_Amperes_Range\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Voltage_Range\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Travel_Speed\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                            {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Heat_Input\"][idx] ?? \"\"} fullWidth variant=\"outlined\" /> */}\r\n                            <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldValue}} value={ocrTable[\"Remark\"][idx] ?? \"\"} fullWidth variant=\"outlined\" />\r\n                        </div>)\r\n                    })}\r\n                </Paper> : null}\r\n\r\n                {tableStateRef.current.title.includes(\"ELECTRODE\") ? \r\n                <Paper elevation={0} className={classes.bottomPaper}>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 200px 240px 70px\", gap: \"5px\"}}>\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Weld_Layer\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Welding_Process\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Class\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Filler_Metal_Dia\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Type_Polar\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Current_Amperes_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Voltage_Range\"} fullWidth variant=\"outlined\" />\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Travel_Speed\"} fullWidth variant=\"outlined\" />\r\n                        {/* <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Heat_Input\"} fullWidth variant=\"outlined\" /> */}\r\n                        <InputBase margin=\"dense\" multiline={true} rowsMax=\"2\" inputProps={{className: classes.electrodeFieldName}} value={\"Remark\"} fullWidth variant=\"outlined\" />\r\n                    </div>\r\n                    {Object.keys(currentTable).map((item, idx) => {\r\n                        return (<div style={{display: \"grid\", gridTemplateColumns: \"120px 130px 120px 150px 150px 200px 200px 240px 70px\", gap: \"5px\"}}>\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Weld_Layer\"], \"Weld_Layer\", idx, process, false)}\r\n                            {makeFieldForED(\"P\", currentTable[idx][\"Welding_Process\"], \"Welding_Process\", idx, process, false)}\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Filler_Metal_Class\"], \"Filler_Metal_Class\", idx, process, false)}\r\n                            \r\n                            {makeFieldForED(\"AT\", currentTable[idx][\"Filler_Metal_Dia\"], \"Filler_Metal_Dia\", idx, process, false,\r\n                            value => { return value !== \"\" && !isNaN(value)}, numCheck)}\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Type\"], \"Current_Type\", idx, process, false)}\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Polar\"], \"Current_Polar\", idx, process, false)}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Current_Amperes_Range_select\"], \"Current_Amperes_Range_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Current_Amperes_Range_min\"], \"Current_Amperes_Range_min\", idx, process, currentTable[idx][\"Current_Amperes_Range_select\"] !== \"Value\", currentTable[idx][\"Current_Amperes_Range_min\"] !== \"\" && !isNaN(currentTable[idx][\"Current_Amperes_Range_min\"]))}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Current_Amperes_Range_max\"], \"Current_Amperes_Range_max\", idx, process, currentTable[idx][\"Current_Amperes_Range_select\"] !== \"Value\", currentTable[idx][\"Current_Amperes_Range_max\"] !== \"\" && !isNaN(currentTable[idx][\"Current_Amperes_Range_max\"]))}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Voltage_Range_select\"], \"Voltage_Range_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Voltage_Range_min\"], \"Voltage_Range_min\", idx, process, currentTable[idx][\"Voltage_Range_select\"] !== \"Value\", currentTable[idx][\"Voltage_Range_min\"] !== \"\" && !isNaN(currentTable[idx][\"Voltage_Range_min\"]))}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Voltage_Range_max\"], \"Voltage_Range_max\", idx, process, currentTable[idx][\"Voltage_Range_select\"] !== \"Value\", currentTable[idx][\"Voltage_Range_max\"] !== \"\" && !isNaN(currentTable[idx][\"Voltage_Range_max\"]))}\r\n                            </div>\r\n                            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\"}}>\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Travel_Speed_select\"], \"Travel_Speed_select\", idx, process, false)}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Travel_Speed_min\"], \"Travel_Speed_min\", idx, process, currentTable[idx][\"Travel_Speed_select\"] !== \"Value\", currentTable[idx][\"Travel_Speed_min\"] !== \"\" && !isNaN(currentTable[idx][\"Travel_Speed_min\"]))}\r\n                                {makeFieldForED(\"T\", currentTable[idx][\"Travel_Speed_max\"], \"Travel_Speed_max\", idx, process, currentTable[idx][\"Travel_Speed_select\"] !== \"Value\", currentTable[idx][\"Travel_Speed_max\"] !== \"\" && !isNaN(currentTable[idx][\"Travel_Speed_max\"]))}\r\n                                {makeFieldForED(\"P\", currentTable[idx][\"Travel_Speed_unit\"], \"Travel_Speed_unit\", idx, process, false)}\r\n                            </div>\r\n                            {makeFieldForED(\"T\", currentTable[idx][\"Remark\"], \"Remark\", idx, process, false)}\r\n                        </div>)\r\n                    })}\r\n                    <div style={{display: 'flex'}}>\r\n                        <img \r\n                            src={addIcon} \r\n                            className={classes.addItemBtn}\r\n                            onClick={() => {\r\n                                console.log(Object.keys(currentTable).length)\r\n                                setCurrentTable(prevState => ({\r\n                                    ...prevState,\r\n                                    [Object.keys(currentTable).length]: {}\r\n                                }))\r\n                            }} alt=\"add icon\"/>\r\n                        <img \r\n                            src={deleteIcon} \r\n                            className={classes.addItemBtn}\r\n                            onClick={() => {\r\n                                let tempTable = currentTable;\r\n                                delete tempTable[Object.keys(currentTable).length-1]\r\n                                setCurrentTable(prevState => ({\r\n                                    ...tempTable\r\n                                }))\r\n                            }} alt=\"add icon\"/>\r\n                    </div>\r\n                    \r\n                </Paper> : null}\r\n                \r\n\r\n                <Grid container>\r\n                    <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\r\n                    {isDBSave && !tableStateRef.current.title.includes(\"Info\") ? <Button className={classes.editTableBtn} variant=\"outlined\" onClick={()=> setIsDBSave(false)}>변경</Button> : null}\r\n                    {!isDBSave || tableStateRef.current.title.includes(\"Info\") ? <Button className={isDBSave ? classes.disabledSubmitTableBtn : classes.submitTableBtn} disabled={isDBSave} variant=\"outlined\" onClick={()=> submitTable()}>적용</Button> : null}\r\n                    <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        <Box style={{marginTop: 10, marginLeft: 10}}>Note</Box>\r\n        <Paper elevation={1} className={classes.notePaper}>\r\n            {ocrData !== null && ocrData[\"WPS_NOTES\"] !== undefined ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\r\n                return <div style={{fontSize: 14}}>{item}<br></br></div>\r\n            }) : null}\r\n        </Paper>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/icon_add_process.f73162a2.svg\";","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Dialog, DialogTitle, List, ListItem, CircularProgress, Typography, Box, Grid } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n    uploader: {\n        marginBottom: 10\n    },\n    controller: {\n        display: 'flex',\n        marginTop: 10, \n        marginLeft: 10,\n        gap: 20\n    },\n    uploadBtn: {\n        width: 292,\n        height: 35,\n        background: \"rgba(23, 62, 139, 1)\",\n        color: \"white\"\n    },\n    fileManager: {\n        marginTop: 56\n    },\n    headerRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    fileList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    fileRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '90px 180px 180px 180px 120px',\n        gap: 80,\n        fontSize: 16,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n    rowDivider: {\n        width: 1192,\n        marginLeft: 23,\n        height: 1,\n        borderBottom: '0.5px solid #000000',\n    },\n    inspectBtn: {\n        width: 88, \n        height: 30, \n        background: \"rgba(23, 62, 139, 1)\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    editBtn: {\n        width: 88, \n        height: 30, \n        background: \"#DD2818\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    disabledBtn: {\n        width: 88, \n        height: 30, \n        background: \"#c0c0c0\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogContent: {\n        margin: 10\n    },\n    version: {\n        marginLeft: 'auto', \n        marginTop: 'auto', \n        color: 'white', \n        fontSize: 7\n    },\n    fileDialog: {\n        width: 1500,\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    fileDescription: {\n        padding: 20,\n    },\n    closeDialogBtn: {\n        marginLeft: 'auto',\n        marginTop: 2,\n        left: 5,\n        width: 60, \n        height: 30, \n        background: \"#1A374D\", \n        fontSize: 16,\n        color: \"white\"\n    },\n    dialogHeaderRow: {\n        marginLeft: 10,\n        marginTop: 20,\n        paddingTop: 6,\n        paddingLeft: 46,\n        width: 1254,\n        height: 43,\n        background: '#C4C4C4',\n        border: '1px solid #000000',\n        display: 'grid',\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px',\n        gap: 70,\n        fontWeight: 'bold',\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n    },\n    docList: {\n        marginLeft: 10,\n        width: 1254,\n        height: 300,\n        overflowX: 'auto',\n        background: '#F1F1F1',\n        border: '1px solid #000000',\n    },\n    docRow: {\n        display: 'grid',\n        width: 1234,\n        paddingLeft: 46,\n        paddingTop: 17,\n        height: 57,\n        gridTemplateColumns: '40px 60px 60px 190px 190px 100px 60px',\n        gap: 70,\n        fontSize: 18,\n        letterSpacing: '-0.03em',\n        cursor: 'pointer'\n    },\n}));\n\nexport default function Uploader(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [fileDialogOpen, setFileDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n    const [fileList, setFileList] = useState(null);\n    const [docList, setDocList] = useState(null);\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                console.log(res)\n                if (res.data.body.result === \"OK\") {\n                    axios.put(res.data.body.upload_url, tempFile)\n                    .then((res) => {\n                        console.log(res)\n                        setUploadState({...uploadState, upload: true});\n                        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                            \"action\": \"OCR\",\n                            \"file\": tempFile.name\n                        }, {headers : {\"InvocationType\":\"Event\"}})\n                        .then((res) => {\n                            console.log(res)\n                            const timeout = setTimeout(() => {\n                                setLoadingDialogOpen(false);\n                                clearInterval(timer)\n                                return Promise.reject(\"Timeout ERROR\")\n                            }, 120000)\n                            const timer = setInterval(() => {\n                                axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                    \"action\": \"STATUS\",\n                                    \"file\": tempFile.name\n                                })\n                                .then((res) => {\n                                    console.log(res)\n                                    if (res.data.body.result === \"OK\") {\n                                        if (res.data.body.status === \"READY\") {\n                                            clearInterval(timer);\n                                            clearTimeout(timeout);\n                                            setUploadState({...uploadState, ocr: true});\n                                            setLoadingDialogOpen(false);\n                                            enqueueSnackbar(\"업로드 및 OCR 완료\", {variant: 'success'});\n                                            loadFileList();\n                                            setUploadState({...uploadState, ocr: false});\n                                        } else if (res.data.body.status === \"ERROR\") {\n                                            return Promise.reject(res.data.body.message);\n                                        }\n                                    } else {\n                                        return Promise.reject(res.data.body.message);\n                                    }\n                                })\n                            }, 5000);\n                            \n                            \n                            // 2 min 초과 시 타임아웃\n                        })\n                    })\n                } else return Promise.reject(res.data.body.message);\n                \n            })\n            .catch((err)=> {\n                console.log(err);\n                setLoadingDialogOpen(false);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'});\n        }\n    }\n\n    const loadFileList = () => {\n        enqueueSnackbar(\"Loading File List...\")\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"FLIST\"\n            })\n            .then((res)=> {\n                console.log(res.data.body.data)\n                setFileList(res.data.body.data)\n                closeSnackbar()\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            });\n    }\n\n    const loadDocList = (fileId, fileName) => {\n        enqueueSnackbar('Loading...');\n        props.setFileName(fileName)\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WPLIST\",\n                \"file_id\": fileId\n            })\n            .then((res)=> {\n                console.log(res.data.body.data);\n                setDocList(res.data.body.data);\n                closeSnackbar();\n                setFileDialogOpen(true);\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            })\n    }\n\n    const loadOcrData = (wpsId, docStatus) => {\n        enqueueSnackbar('Loading...');\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"WEDIT\",\n                \"wps_id\": wpsId\n            })\n            .then((res)=> {\n                console.log(res.data);\n                if (res.data.body.result === \"OK\") {\n                    props.setDocId(wpsId);\n                    props.setDocStatus(docStatus);\n                    props.setOcrData(res.data.body.data);\n                    props.setFileURL(res.data.body.download_url);\n                    history.push('/inspect');\n                } else {\n                    return Promise.reject(res.data.body.message)\n                }\n            })\n            .catch((err)=> {\n                console.log(err);\n                enqueueSnackbar('에러 발생 : '+err, {variant: 'error'});\n            })\n    }\n\n\n\n    const InspectBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.inspectBtn} disabled={props.disabled}>\n            검수\n        </Button>)\n    }\n\n    const EditBtn = (props) => {\n        return (\n        <Button className={props.disabled ? classes.disabledBtn : classes.editBtn} disabled={props.disabled} onClick={() => loadOcrData(props.wpsId, props.docStatus)}>\n            편집\n        </Button>)\n    }\n\n    const showBtn = (status, wpsId, fileName) => {\n        switch (status) {\n            case \"READY\":\n            case \"CHECK\":\n                return (<EditBtn wpsId={wpsId} docStatus={status}/>)\n            case \"INPSECT\":\n            case \"COMPLETE\":\n                return (<InspectBtn />)\n            default:\n                return (<Button className={classes.disabledBtn}></Button>)\n        }\n    }\n\n    useEffect(() => {\n        loadFileList();\n\n    }, [])\n\n    return (\n        <>\n        <div className={classes.uploader}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                Upload Data\n            </Box>\n            <div className={classes.controller}>\n                <Button variant=\"outlined\" component=\"label\" className={classes.uploadBtn}>\n                    <input type=\"file\" style={{display:\"none\"}} accept=\"application/pdf\" onChange={handleFile} />\n                    {tempFile==null ? \"업로드\" : \"업로드 : \"+ tempFile.name}\n                </Button>\n                {tempFile !== null ? <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}>\n                    <CachedIcon fontSize='small'/>&nbsp;&nbsp;업로드 실행\n                </Button> : null}\n            </div>\n        </div>\n\n        <div className={classes.fileManager}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                업로드 파일 관리\n            </Box>\n            <div className={classes.headerRow}>\n                    <div>일련번호</div><div>파일 이름</div><div>업로드 시각</div><div>검수 완료 시각</div><div>상태</div>\n            </div>\n            <div className={classes.fileList}>\n                {fileList ? fileList.map((file, idx) => {\n                    return (<>\n                    <div className={classes.fileRow} onClick={() => loadDocList(file.id, file.file_name)}>\n                        <div>{file.id}</div><div>{file.file_name}</div><div>{file.upload_time}</div><div>{file.complete_time}</div><div>{file.status}</div>\n                    </div>\n                    <div className={classes.rowDivider}/>\n                    </>)\n                }) : null}\n            </div>\n        </div>\n        \n\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"upload-dialog\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"upload-dialog\">업로드 및 OCR</DialogTitle>\n            <List className={classes.dialogContent}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n\n        <Dialog open={fileDialogOpen} className={classes.fileDialog} aria-labelledby=\"file-dialog\" maxWidth={false} fullWidth={true}>\n            <div className={classes.fileDescription}>\n                <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1} style={{display: 'flex'}}>\n                    파일 상세 \n                    <Button className={classes.closeDialogBtn} onClick={() => setFileDialogOpen(false)}>닫기</Button>\n                </Box>\n                \n                <div className={classes.dialogHeaderRow}>\n                        <div>ID</div><div>TYPE</div><div>CODE</div><div>CREATE_TIME</div><div>LAST_UPDATE_TIME</div><div>STATUS</div>\n                </div>\n                <div className={classes.docList}>\n                    {docList ? docList.WPS_List ? docList.WPS_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>WPS</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div>{showBtn(doc.status, doc.id)}</div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                    {docList ? docList.PQR_List ? docList.PQR_List.map((doc, idx) => {\n                        return (<>\n                        <div className={classes.docRow}>\n                            <div>{doc.id}</div><div>PQR</div><div>{doc.code_type}</div><div>{doc.upload_time}</div><div>{doc.inspect_time}</div><div>{doc.status}</div><div></div>\n                        </div>\n                        <div className={classes.rowDivider}/>\n                        </>)\n                    }) : null : null}\n                </div>\n            </div>\n        </Dialog>\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo_otos.103138a0.svg\";","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport crypto from 'crypto';\n\n\nfunction AuthRoute({component: Component, render, ...rest}) {\n    return (\n        <Route {...rest} \n            render = {(props) => sessionStorage.accessToken && crypto.createHash('sha256').update(sessionStorage.accessToken).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\" ? (render ? render(props) : (<Component {...props} />)) \n                    : (<Redirect to={{pathname: \"/login\", state: {from: props.location}}} \n                    />)\n            }\n            />)\n}\n\nexport default AuthRoute;","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport NewInspector from './NewInspector.js';\nimport logo from './img/logo_otos.svg';\nimport AuthRoute from './AuthRoute.js';\n\nconst myTheme = createMuiTheme({\n    typography: {\n        fontFamily: 'Pretendard-Medium',\n      },\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        background: '#ffffff',\n        // background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 50,\n        // boxShadow: 'none'\n    },\n    toolBar: {\n        minHeight: 50,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 60,\n        marginLeft: 24\n    }\n}));\n\nexport default function Main() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [fileURL, setFileURL] = useState(null);\n    const [fileName, setFileName] = useState(\"\");\n    const [docId, setDocId] = useState(0);\n    const [docStatus, setDocStatus] = useState(\"\");\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n        <Router> \n            <CssBaseline />\n            <div className={classes.root}>\n                \n            <AppBar className={classes.appBar} elevation={4}>\n                <Toolbar className={classes.toolBar}>\n                <Grid container justify=\"center\">\n                    <img style={{height: 40}} src={logo}></img>\n                </Grid>\n                {/* <Typography variant=\"h6\">\n                    <Box fontWeight=\"fontWeightBold\">\n                        WeldBeing\n                    </Box>\n                </Typography>\n                <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n                    onClick={() => {\n                        // logout();\n                        // history.push(\"/login\");\n                    }}>\n                    <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                        User | 로그아웃\n                    </Box>\n                </Button> */}\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                paper: classes.drawerPaper,\n                }}>\n                <Toolbar className={classes.toolBar} disableGutters={true}/>\n                <div className={classes.drawerContainer}>\n                    <List>\n                        <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n                        </ListItem>\n                        <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                            <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n\n            <main className={classes.content}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <Uploader setFileURL={(url) => setFileURL(url)} setFileName={(name) => setFileName(name)} setDocId={(id) => setDocId(id)} setDocStatus={(status) => setDocStatus(status)} setOcrData={(data) => setOcrData(data)}/>} />\n                    <Route exact path=\"/inspect\" render={() => <NewInspector fileURL={fileURL} fileName={fileName} docId={docId} docStatus={docStatus} ocrData={ocrData}/>} />\n                </Switch>\n            </main>\n\n            </div>\n        </Router>\n    </ThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport crypto, { sign } from 'crypto';\nimport { Button, CssBaseline, TextField, Typography, Card, Box, Container } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\n\nconst myTheme = createMuiTheme({\n  typography: {\n    fontFamily: 'Pretendard-Medium',\n  },\n  palette: {\n      primary: {\n          light: '#58a5f0',\n          main: '#0277bd',\n          dark: '#58a5f0',\n          contrastText: '#fff',\n      }\n  }\n})\n\nfunction LoginPage() {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const submit = e => {\n      e.preventDefault();\n      enqueueSnackbar('로그인 요청 중...')\n      sessionStorage.setItem('accessToken', password);\n      if (crypto.createHash('sha256').update(password).digest('hex') === \"d042be4d7ca43ee945a7aa49ad867d705e611d39d94704b65faf769fd1b26a8d\") {\n        history.push(\"/\");\n        closeSnackbar();\n      } else {\n        enqueueSnackbar('비밀번호가 올바르지 않습니다', {variant: 'error',})\n      }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        \n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        title: {\n          marginBottom: 30,\n        },\n        logincard: {\n          marginTop: 120,\n        },\n        form: {\n          color: 'black',\n          width: '80%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={myTheme}>\n        <Container className={classes.main} maxWidth=\"xs\">\n            <CssBaseline />\n            <Card className={classes.logincard}>\n            <div className={classes.paper}>\n                <Typography variant=\"h4\" noWrap className={classes.title}>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                  WeldBeing\n                  </Box>\n                </Typography>\n                <form className={classes.form} onSubmit={submit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"비밀번호\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={e=> setPassword(e.target.value)}\n                />\n                \n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={(password === '') }\n                >\n                    로그인\n                </Button>\n                \n                </form>\n            </div>\n            </Card>            \n            </Container>\n            </ThemeProvider>\n        )\n    }\n\nexport default LoginPage;","import './App.css';\nimport Main from './Main.js';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\nimport AuthRoute from './AuthRoute.js'\nimport LoginPage from './LoginPage.js'\n\n\nexport default function App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      <Route path=\"/login\" render={() => <LoginPage/>} />\n      <AuthRoute exact path=\"/\" render={() => <Main />} />\n    </Router>\n  )\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n          <App />\n      </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/icon_delete_process.94d578bf.svg\";","export default __webpack_public_path__ + \"static/media/icon_add_item.d2ef0425.svg\";"],"sourceRoot":""}