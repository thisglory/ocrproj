{"version":3,"sources":["LoginPage.js","Uploader.js","DataDef.js","Inspector.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","LoginPage","Uploader","props","history","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","useState","tempFile","setTempFile","loadingDialogOpen","setLoadingDialogOpen","upload","ocr","uploadState","setUploadState","style","display","marginBottom","Typography","variant","noWrap","Box","fontWeight","m","marginLeft","paddingTop","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","List","margin","ListItem","CircularProgress","size","height","width","marginTop","gap","Button","component","type","accept","onChange","e","preventDefault","target","files","color","onClick","getFile","axios","post","name","then","res","console","log","put","data","body","upload_url","headers","timer","setInterval","result","clearInterval","getOcrData","push","catch","err","fontSize","TableInfo","WPS_tables","useStyles","makeStyles","title","content","leftPaper","overflow","rightPaper","padding","notePaper","dbBtn","prevBtn","nextBtn","tableCard","paddingLeft","cardNum","select","marginRight","formControl","border","borderColor","borderRadius","addProcessBtn","justify","Inspector","classes","ocrData","numPages","setNumPages","pageNumber","setPageNumber","left","top","tableAreaRect","setTableAreaRect","zoomState","setZoomState","currentTable","setCurrentTable","clonedTable","setClonedTable","total","current","finished","isProcessAvailable","tableState","setTableState","DBState","setDBState","saveState","setSaveState","openAddProcess","setOpenAddProcess","first","second","processState","setProcessState","makeField","typeStr","arr","key","idx","undefined","TextField","inputProps","value","newArr","length","CardContent","className","makeFieldForNewProcess","moveTable","to","toMove","prevState","endsWith","useEffect","userFile","Object","keys","disabled","setTimeout","IconButton","Paper","elevation","file","onLoadError","error","onLoadSuccess","noData","textAlign","scale","position","Grid","container","defaultValue","indexOf","map","fieldTypeArr","split","fieldData","Card","gridTemplateColumns","join","makeCard","item","makeCardForNewProcess","concat","tempJson","submitTable","myTheme","theme","root","appBar","background","zIndex","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","ClippedDrawer","setUserFile","setOcrData","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","aria-controls","aria-haspopup","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","render","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"kdASgBA,YAAe,CAC7BC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAyGTC,I,oKCzGA,SAASC,EAASC,GAC7B,IAAMC,EAAUC,cADoB,EAEOC,cAAnCC,EAF4B,EAE5BA,gBAF4B,KAEXC,cACOC,mBAAS,OAHL,mBAG7BC,EAH6B,KAGnBC,EAHmB,OAIcF,oBAAS,GAJvB,mBAI7BG,EAJ6B,KAIVC,EAJU,OAKEJ,mBAAS,CAC3CK,QAAQ,EACRC,KAAK,IAP2B,mBAK7BC,EAL6B,KAKhBC,EALgB,KAiapC,OACI,qCACA,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,aAAa,IAA1C,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,SACA,cAACC,EAAA,EAAD,CAAKC,WAAW,iBAAiBC,EAAG,EAApC,kCAQA,qBAAKR,MAAO,CAACS,WAAW,OAAQC,WAAW,QAI/C,eAACC,EAAA,EAAD,CAAQC,KAAMlB,EAAmBmB,kBAAgB,sBAAsBC,SAAS,KAAKC,WAAW,EAAhG,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,2CACA,eAACC,EAAA,EAAD,CAAMlB,MAAO,CAAEmB,OAAO,IAAtB,UACI,eAACC,EAAA,EAAD,WACI,cAACjB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,yDACEP,EAAYF,OAAyC,cAAC,IAAD,IAAhC,cAACyB,EAAA,EAAD,CAAkBC,KAAM,QAEnD,eAACF,EAAA,EAAD,WACI,cAACjB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,8CACEP,EAAYD,IAAsC,cAAC,IAAD,IAAhC,cAACwB,EAAA,EAAD,CAAkBC,KAAM,cAIxD,qBAAKtB,MAAO,CAAEuB,OAAQ,OAAQC,MAAO,OAAQC,UAAU,GAAIhB,WAAW,IAAtE,SACI,sBAAKT,MAAO,CAACC,QAAS,OAAQyB,IAAK,QAAnC,UACI,cAACvB,EAAA,EAAD,CAAYH,MAAO,CAAEyB,UAAU,GAA/B,+CACA,cAACE,EAAA,EAAD,CAAQvB,QAAQ,WAAWwB,UAAU,QAArC,SAA6C,uBAAOC,KAAK,OAAOC,OAAO,kBAAkBC,SAtFlF,SAACC,GAChBA,EAAEC,iBACFxC,EAAYuC,EAAEE,OAAOC,MAAM,SAqFnB,eAACR,EAAA,EAAD,CAAQvB,QAAQ,WAAWgC,MAAM,UAAUC,QAnFpC,SAACL,GAChBA,EAAEC,iBACe,OAAbzC,GACAP,EAAMqD,QAAQ9C,GACdG,GAAqB,GACrB4C,IAAMC,KAAK,4EAA6E,CACpF,OAAU,SACV,KAAQhD,EAASiD,OAEpBC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZJ,IAAMO,IAAIH,EAAII,KAAKC,KAAKC,WAAYzD,GACnCkD,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZ5C,EAAe,2BAAID,GAAL,IAAkBF,QAAQ,KACxC2C,IAAMC,KAAK,4EAA6E,CACpF,OAAU,MACV,KAAQhD,EAASiD,MAClB,CAACS,QAAU,CAAC,eAAiB,WAC/BR,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZ,IAAMQ,EAAQC,aAAY,WACtBb,IAAMC,KAAK,4EAA6E,CACpF,OAAU,SACV,KAAQhD,EAASiD,OAEpBC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACiB,OAAzBA,EAAII,KAAKC,KAAKK,SACdC,cAAcH,GACdlE,EAAMsE,WAAWZ,EAAII,KAAKC,KAAKD,KAAK,IACpChD,EAAe,2BAAID,GAAL,IAAkBD,KAAK,KACrCX,EAAQsE,KAAK,kBAGtB,cAIdC,OAAM,SAACC,GACJ/D,GAAqB,GACrBN,EAAgB,4BAAS,CAACe,QAAS,cAKvCf,EAAgB,6EAAkB,CAACe,QAAS,WAqCxC,UAAgE,cAAC,IAAD,CAAYuD,SAAS,UAArF,kC,0FCjdHC,EAAY,CACrB,aAAgB,CACZ,OAAU,IACV,KAAQ,IACR,YAAe,OACf,OAAU,IACV,SAAY,IACZ,kBAAqB,QACrB,gBAAmB,QACnB,KAAQ,QACR,KAAQ,KACT,WAAc,CACb,KAAQ,IACR,MAAS,QACT,QAAW,IACX,SAAY,QACZ,uBAA0B,aAC1B,0BAA6B,WAC7B,gBAAmB,OACnB,oBAAuB,WACvB,mBAAsB,OACtB,OAAU,KACX,WAAc,CACb,KAAQ,IACR,KAAQ,IACR,iBAAoB,IACpB,UAAa,IACb,WAAc,IACd,gBAAmB,OACnB,oBAAuB,IACvB,KAAQ,SACR,aAAgB,IAChB,cAAiB,IACjB,gBAAmB,IACnB,WAAc,IACd,gBAAmB,IACnB,UAAa,IACb,eAAkB,IAClB,kBAAqB,IACrB,OAAU,MAGLC,EAAa,CACtB,eACA,aACA,c,uCC1BEC,GAAYC,YAAW,CACzBC,MAAO,CACH/D,QAAS,OACTyB,IAAK,IAETuC,QAAS,CACLzC,MAAO,OACPvB,QAAS,OACTyB,IAAK,GACLD,UAAW,EACXhB,WAAY,IAEhByD,UAAW,CACP1C,MAAO,QACPD,OAAQ,QACRE,UAAW,GACX0C,SAAU,UAEdC,WAAY,CACR5C,MAAO,QACPD,OAAQ,QACRE,UAAW,GACX4C,QAAS,GACTF,SAAU,UAEdG,UAAW,CACP9C,MAAO,QACPD,OAAQ,QACRE,UAAW,GACX4C,QAAS,GACTF,SAAU,UAEdI,MAAO,CACH9C,UAAW,IAEf+C,QAAS,CACL/C,UAAW,IAEfgD,QAAS,CACLhD,UAAW,GACXhB,WAAY,QAEhBiE,UAAW,CACPzE,QAAS,OACTwB,UAAW,GACXkD,YAAa,GACbpD,OAAQ,GACRG,IAAK,GAETkD,QAAS,CACLnE,YAAa,GACbF,WAAY,OACZoD,SAAU,IAGdkB,OAAQ,CACJrD,MAAO,GACPD,OAAQ,GACRuD,YAAa,IAEjBC,YAAa,CACTvD,MAAO,GACPD,OAAQ,GACRE,UAAW,OACXhB,WAAY,MACZ,4DAA6D,CAC3DuE,OAAQ,YACRC,YAAa,UACbC,aAAc,QAGpBC,cAAe,CACX1D,UAAW,EACXkC,SAAU,GACVnC,MAAO,IACPD,OAAQ,GACR6D,QAAQ,YAKD,SAASC,GAAUpG,GAC9B,IAAMqG,EAAUxB,KACV5E,EAAUC,cACVoG,EAAUtG,EAAMsG,QAHe,EAIMnG,cAAnCC,EAJ6B,EAI7BA,gBAJ6B,KAIZC,cACOC,mBAAS,OALJ,mBAK9BiG,EAL8B,KAKpBC,EALoB,OAMDlG,mBAAS,GANR,mBAM9BmG,EAN8B,KAMlBC,EANkB,OAUKpG,mBAAS,CAC/CqG,KAAM,EACNC,IAAK,EACLrE,MAAO,EACPD,OAAQ,IAdyB,mBAU9BuE,EAV8B,KAUfC,EAVe,OAgBHxG,mBAAS,GAhBN,mBAgB9ByG,EAhB8B,KAgBnBC,EAhBmB,OAiBG1G,mBAAS,IAjBZ,mBAiB9B2G,EAjB8B,KAiBhBC,GAjBgB,QAkBC5G,mBAAS,IAlBV,qBAkB9B6G,GAlB8B,MAkBjBC,GAlBiB,SAmBD9G,mBAAS,CACzC+G,MAAO,EACPC,QAAS,EACTC,SAAU,GACVxC,MAAO,GACPyC,oBAAoB,IAxBa,qBAmB9BC,GAnB8B,MAmBlBC,GAnBkB,SA0BPpH,mBAAS,IA1BF,qBA0B9BqH,GA1B8B,MA0BrBC,GA1BqB,SA2BatH,oBAAS,GA3BtB,qBA2B9BG,GA3B8B,MA2BXC,GA3BW,SA4BHJ,oBAAS,GA5BN,qBA4B9BuH,GA5B8B,MA4BnBC,GA5BmB,SA6BOxH,oBAAS,GA7BhB,qBA6B9ByH,GA7B8B,MA6BdC,GA7Bc,SA8BG1H,mBAAS,CAC7C2H,MAAO,OACPC,OAAQ,SAhCyB,qBA8B9BC,GA9B8B,MA8BhBC,GA9BgB,MAmC/BC,GAAY,SAACC,EAASC,EAAKC,EAAKC,GAClC,OAAQH,GACJ,IAAK,IACD,YAAiBI,IAAbH,EAAIE,GACG,cAACE,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAO,GAAI/G,WAAS,EAACX,QAAQ,WACnG2B,SAAU,SAAAC,GAEN,IADA,IAAI+F,EAASP,EACNO,EAAOC,QAAUN,GACpBK,EAAOvE,KAAK,IAEhBuE,EAAOL,GAAO1F,EAAEE,OAAO4F,MACvB3B,GAAgB,2BACbD,GADY,kBAEduB,EAAMM,QAIR,cAACH,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAON,EAAIE,GAAM3G,WAAS,EAACX,QAAQ,WACzG2B,SAAU,SAAAC,GACN,IAAI+F,EAASP,EACbO,EAAOL,GAAO1F,EAAEE,OAAO4F,MACvB3B,GAAgB,2BACTD,GADQ,kBAEVuB,EAAMM,QAGnB,IAAK,KACD,OAAO,cAACH,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAON,EAAIE,GAAM3G,WAAS,EAACX,QAAQ,WACzG2B,SAAU,SAAAC,GACN,IAAI+F,EAASP,EACbO,EAAOL,GAAO1F,EAAEE,OAAO4F,MACvB3B,GAAgB,2BACTD,GADQ,kBAEVuB,EAAMM,QAGnB,QACI,OAAO,cAACE,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,SAA0C2C,MAuEvDY,GAAyB,SAACZ,EAASC,EAAKC,EAAKC,GAC/C,OAAQH,GACJ,IAAK,IACD,YAAYI,IAARH,EACO,cAACI,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAO,GAAI/G,WAAS,EAACX,QAAQ,WACnG2B,SAAU,SAAAC,GAAC,OAAGqE,GAAe,2BACtBD,IADqB,kBAEvBqB,EAAMzF,EAAEE,OAAO4F,YAGjB,cAACF,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAON,EAAIE,GAAM3G,WAAS,EAACX,QAAQ,WACzG2B,SAAU,SAAAC,GACN,IAAI+F,EAASP,EACbO,EAAOL,GAAO1F,EAAEE,OAAO4F,MACvBzB,GAAe,2BACRD,IADO,kBAETqB,EAAMM,QAGnB,IAAK,KACD,OAAO,cAACH,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAON,EAAIE,GAAM3G,WAAS,EAACX,QAAQ,WACzG2B,SAAU,SAAAC,GACN,IAAI+F,EAASP,EACbO,EAAOL,GAAO1F,EAAEE,OAAO4F,MACvBzB,GAAe,2BACRD,IADO,kBAETqB,EAAMM,QAGnB,QACI,OAAO,cAACE,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,SAA0C2C,MA+DvDa,GAAY,SAACC,GACf,IAAMC,EAAS5B,GAAWH,QAAU8B,EAChCC,GAAU,GAAKA,GAAS5B,GAAWJ,MAAM,IACzCK,IAAc,SAAA4B,GAAS,kCAChBA,GADgB,IAEnBhC,QAAS+B,EACTtE,MAAOH,EAAWyE,QAEtBnC,GAAgB,IAChBA,GAAgBZ,EAAQ1B,EAAWyE,IAAnB,QAChBvC,EAAiB,2BAAID,GAAL,IACZD,IAAK,IAAIN,EAAQ1B,EAAWyE,IAAnB,SACT1C,KAAM,IAAIL,EAAQ1B,EAAWyE,IAAnB,UACV9G,MAAO,KAAK+D,EAAQ1B,EAAWyE,IAAnB,WAA+C/C,EAAQ1B,EAAWyE,IAAnB,WAC3D/G,OAAQ,KAAKgE,EAAQ1B,EAAWyE,IAAnB,YAAgD/C,EAAQ1B,EAAWyE,IAAnB,aAEjErB,IAAkB,GACdpD,EAAWyE,GAAQE,SAAS,OAC5B7B,IAAc,SAAA4B,GAAS,kCAChBA,GADgB,IAEnB9B,oBAAoB,OAGxBE,IAAc,SAAA4B,GAAS,kCAChBA,GADgB,IAEnB9B,oBAAoB,SA4GpC,OA1BAgC,qBAAU,WACgB,OAAlBxJ,EAAMsG,UACN3C,QAAQC,IAAI5D,EAAMyJ,UAClB9F,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAI0C,EAAQ1B,EAAW,KAC/BsC,GAAgBZ,EAAQ1B,EAAW,IAAnB,QAChB8C,GAAc,CACVL,MAAO,EACPC,QAAS,EACTC,SAAU,GACVxC,MAAOH,EAAW,GAClB4C,oBAAoB,IAExBV,EAAiB,2BAAID,GAAL,IACZD,IAAK,IAAIN,EAAQ1B,EAAW,IAAnB,SACT+B,KAAM,IAAIL,EAAQ1B,EAAW,IAAnB,UACVrC,MAAO,KAAK+D,EAAQ1B,EAAW,IAAnB,WAA0C0B,EAAQ1B,EAAW,IAAnB,WACtDtC,OAAQ,KAAKgE,EAAQ1B,EAAW,IAAnB,YAA2C0B,EAAQ1B,EAAW,IAAnB,aAE5DjB,QAAQC,IAAI8F,OAAOC,KAAK1C,IACxBW,GAAW,CACP,QAAWtB,EAAO,aAG3B,IAGC,qCACA,sBAAK2C,UAAW5C,EAAQtB,MAAxB,UACI,cAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,SACI,eAACC,EAAA,EAAD,CAAKC,WAAW,iBAAiBC,EAAG,EAApC,wBACgBvB,EAAMyJ,SAAWzJ,EAAMyJ,SAASjG,KAAO,iCAG3D,eAACd,EAAA,EAAD,CAAQvB,QAAQ,WAAWgC,MAAM,UAAU8F,UAAW5C,EAAQf,MAAOsE,SAAUnC,GAAWF,SAASwB,SAAWtB,GAAWJ,MAAOjE,QA3DzH,WACX1C,IAAqB,GACrB4C,IAAMC,KAAK,4EAA6E,CAChF,OAAU,KACV,KAAQ,CAAC,eAEEoE,OAIlBlE,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZoE,IAAa,GACb+B,YAAW,WACPnJ,IAAqB,GACrBT,EAAQsE,KAAK,OACd,QAENC,OAAM,SAACC,GACJd,QAAQC,IAAIa,GACZrE,EAAgB,4BAAS,CAACe,QAAS,cAuCnC,UAAiJ,cAAC,IAAD,CAAauD,SAAS,UAAvK,gCAEJ,eAAChD,EAAA,EAAD,CAAQC,KAAMlB,GAAmBmB,kBAAgB,sBAAsBC,SAAS,KAAKC,WAAW,EAAhG,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,qBACA,cAACC,EAAA,EAAD,CAAMlB,MAAO,CAAEmB,OAAO,IAAtB,SACI,eAACC,EAAA,EAAD,WACI,cAACjB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,oCACEyG,GAA4C,cAAC,IAAD,IAAhC,cAACzF,EAAA,EAAD,CAAkBC,KAAM,aAIlD,sBAAK4G,UAAW5C,EAAQrB,QAAxB,UACI,gCACI,eAAC9D,EAAA,EAAD,WACI,cAAC,IAAD,CAAUwD,SAAS,UADvB,mCAEI,cAACoF,EAAA,EAAD,CAAY1G,QAAS,kBAAM4D,EAAaD,EAAY,IAApD,SAAwD,cAAC,IAAD,CAAYrC,SAAS,YAC7E,cAACoF,EAAA,EAAD,CAAY1G,QAAS,kBAAM4D,EAAaD,EAAY,IAApD,SAAwD,cAAC,KAAD,CAAarC,SAAS,eAElF,cAACqF,EAAA,EAAD,CAAOC,UAAW,EAAGf,UAAW5C,EAAQpB,UAAxC,SACI,cAAC,IAAD,CACAgF,KAAMjK,EAAMyJ,SACZS,YAAavG,QAAQwG,MACrBC,cAxYc,SAAC,GAAgB,IAAf7D,EAAc,EAAdA,SAC5BC,EAAYD,IAwYA8D,OACI,sBAAKtJ,MAAO,CAACyB,UAAU,GAAI8H,UAAW,UAAtC,kGAAqE,uBAArE,6HALJ,SAOI,cAAC,IAAD,CAAMhI,OAAQ,IAAKmE,WAAYA,EAAY8D,MAAOxD,EAAlD,SACI,qBAAKhG,MAAO,CACRyJ,SAAS,WACT7D,KAAME,EAAcF,KAAKI,EAAU,EACnCH,IAAKC,EAAcD,IAAIG,EAAU,EACjCxE,MAAOsE,EAActE,MAAMwE,EAAU,EACrCzE,OAAQuE,EAAcvE,OAAOyE,EAAU,EACvChB,OAAQ,aAAcuE,UAAW,kBAMjD,eAACG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAAChI,EAAA,EAAD,CAAQuG,UAAW5C,EAAQd,QAASpE,QAAQ,WAAWyI,SAAyB,IAAfnD,EAAiCrD,QAAS,kBAAMsD,EAAcD,EAAW,IAA1I,4CACA,cAAC/D,EAAA,EAAD,CAAQuG,UAAW5C,EAAQb,QAASrE,QAAQ,WAAWyI,SAAUnD,IAAeF,GAAyB,OAAbA,EAAkCnD,QAAS,kBAAMsD,EAAcD,EAAW,IAAtK,kDAGR,gCACI,eAACvF,EAAA,EAAD,WAAY,cAAC,IAAD,CAAUwD,SAAS,UAA/B,8CAA+D+C,GAAWH,QAAQ,EAAlF,MAAwFG,GAAWJ,MAAnG,8DAAsII,GAAWJ,MAAMI,GAAWF,SAASwB,UAC3K,eAACgB,EAAA,EAAD,CAAOC,UAAW,EAAGf,UAAW5C,EAAQlB,WAAxC,UACI,eAACjE,EAAA,EAAD,WAAauG,GAAW1C,MAAxB,WACC0C,GAAWD,mBACR,yBACA1E,SAAU,SAACC,GACPqF,IAAgB,SAACkB,GAAD,mBAAC,eAAmBA,GAApB,IAA+BrB,MAAOlF,EAAEE,OAAO4F,WAC/DlF,QAAQC,IAAI,SAEhBqF,UAAW5C,EAAQT,OACnB+E,aAAc,OACd9B,MAAOV,GAAaF,MAPpB,UASI,wBAAQY,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,MAAf,oBACQ,MACsC,IAArDpB,GAAWF,SAASqD,QAAQnD,GAAWH,SACpC,4CAAgB,QAEF,OAAjBL,EAAwByC,OAAOC,KAAK1C,GAAc4D,KAAI,SAACrC,EAAKC,GACzD,OAjXH,SAACD,GACd,IAAMsC,EAAenG,EAAU8C,GAAW1C,OAAOyD,GAAKuC,MAAM,KAE5D,GAAY,8BAARvC,GAA+C,wBAARA,QAA0DE,IAAzBzB,EAAauB,GAAK,GAAkB,CAC5G,IAAIwC,EAAY/D,EAAauB,GAAK,GAAGuC,MAAM,KAC3C,OAAQ,eAACE,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,6BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC9G,cAACwH,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAOmC,EAAU,GAAIlJ,WAAS,EAACX,QAAQ,WACtG2B,SAAU,SAAAC,GACNiI,EAAU,GAAKjI,EAAEE,OAAO4F,MACxB,IAAIC,EAAS7B,EAAauB,GAC1BM,EAAO,GAAKkC,EAAUG,KAAK,KAC3BjE,GAAgB,2BACTD,GADQ,kBAEVuB,EAAMM,QAEf,cAACE,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,eACA,cAACgD,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAOmC,EAAU,GAAIlJ,WAAS,EAACX,QAAQ,WACrG2B,SAAU,SAAAC,GACPiI,EAAU,GAAKjI,EAAEE,OAAO4F,MACxB,IAAIC,EAAS7B,EAAauB,GAC1BM,EAAO,GAAKkC,EAAUG,KAAK,KAC3BjE,GAAgB,2BACTD,GADQ,kBAEVuB,EAAMM,QAEf,cAACE,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,mBAGpB,OAAImF,EAAa/B,QAAU,EACf,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,eAApF,UACI,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOJ,GAAUC,EAASrB,EAAauB,GAAMA,EAAKC,SAGnC,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,qBAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOJ,GAAUC,EAASrB,EAAauB,GAAMA,EAAKC,SAGvC,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,2BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOJ,GAAUC,EAASrB,EAAauB,GAAMA,EAAKC,SAGvC,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,6BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOJ,GAAUC,EAASrB,EAAauB,GAAMA,EAAKC,SAGvC,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,kCAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOJ,GAAUC,EAASrB,EAAauB,GAAMA,EAAKC,cAJnE,EAwTgB2C,CAAS5C,MACf,QAERf,GAAWD,mBACR,cAACiD,EAAA,EAAD,CAAMC,WAAS,EAACvE,QAAQ,SAAxB,SACI,cAACsE,EAAA,EAAD,CAAMY,MAAI,EAAV,SAAW,cAAC3I,EAAA,EAAD,CAAQuG,UAAW5C,EAAQH,cAAe/E,QAAQ,WAAWiC,QAvLzE,WACZ2E,GACCC,IAAkB,IAElBA,IAAkB,GAClBZ,GAAed,EAAQ1B,EAAW6C,GAAWH,UAA9B,UAkLQ,SAAoFS,GAAmC,gBAAlB,sBAC1G,KACbA,GACG,eAACgC,EAAA,EAAD,CAAOC,UAAW,EAAGf,UAAW5C,EAAQlB,WAAxC,UACA,eAACjE,EAAA,EAAD,WAAauG,GAAW1C,MAAxB,WACI,yBACIjC,SAAU,SAACC,GACPqF,IAAgB,SAACkB,GAAD,mBAAC,eAAmBA,GAApB,IAA+BpB,OAAQnF,EAAEE,OAAO4F,WAChElF,QAAQC,IAAI,SAEhBqF,UAAW5C,EAAQT,OACnB+E,aAAc,OACd9B,MAAOV,GAAaD,OAPxB,UASQ,wBAAQW,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,MAAf,uBAGM,OAAjB5B,EAAwByC,OAAOC,KAAK1C,GAAc4D,KAAI,SAACrC,EAAKC,GACzD,OAvSU,SAACD,GAC3B,IAAMsC,EAAenG,EAAU8C,GAAW1C,OAAOyD,GAAKuC,MAAM,KAE5D,GAAY,8BAARvC,GAA+C,wBAARA,QAAyDE,IAAxBvB,GAAYqB,GAAK,GAAkB,CAC3G,IAAMwC,EAAY7D,GAAYqB,GAAK,GAAGuC,MAAM,KAC5C,OAAQ,eAACE,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,6BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC9G,cAACwH,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAOmC,EAAU,GAAIlJ,WAAS,EAACX,QAAQ,WACtG2B,SAAU,SAAAC,GAAC,OAAGqE,GAAe,2BACtBD,IADqB,kBAEvBqB,EAAMzF,EAAEE,OAAO4F,YAEpB,cAACG,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,eACA,cAACgD,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,KAAMmE,MAAOmC,EAAU,GAAIlJ,WAAS,EAACX,QAAQ,WACtG2B,SAAU,SAAAC,GAAC,OAAGmE,GAAgB,2BACvBC,IADsB,kBAExBqB,EAAMzF,EAAEE,OAAO4F,YAEpB,cAACG,EAAA,EAAD,CAAaC,UAAW5C,EAAQV,QAAhC,mBAGpB,OAAImF,EAAa/B,QAAU,EACf,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,eAApF,UACI,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOS,GAAuBZ,EAASnB,GAAYqB,GAAMA,EAAKC,SAG/C,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,qBAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOS,GAAuBZ,EAASnB,GAAYqB,GAAMA,EAAKC,SAGnD,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,2BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOS,GAAuBZ,EAASnB,GAAYqB,GAAMA,EAAKC,SAGnD,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,6BAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOS,GAAuBZ,EAASnB,GAAYqB,GAAMA,EAAKC,SAGnD,IAAxBqC,EAAa/B,OACZ,eAACkC,EAAA,EAAD,CAAM9J,QAAQ,WAAW8H,UAAW5C,EAAQZ,UAAW1E,MAAO,CAACmK,oBAAqB,kCAApF,UACQ,cAACvC,EAAA,EAAD,CAAWzG,OAAO,QAAQ0G,WAAY,CAAC7H,MAAO,CAAC2D,SAAU,GAAIpD,WAAY,MAAOuH,MAAOL,EAAK1G,WAAS,EAACX,QAAQ,aAC7G2J,EAAaD,KAAI,SAACvC,EAASG,GACxB,OAAOS,GAAuBZ,EAASnB,GAAYqB,GAAMA,EAAKC,cAJ/E,EAsPgB6C,CAAsB9C,MAC5B,QAEP,KACF,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAAChI,EAAA,EAAD,CAAQuG,UAAW5C,EAAQd,QAASpE,QAAQ,WAAWiC,QAAS,kBAAM+F,IAAW,IAAjF,4CACA,cAACzG,EAAA,EAAD,CAAQuG,UAAW5C,EAAQb,QAASrE,QAAQ,WAAWgC,MAAM,YAAYC,QAAS,kBA1M9E,YACyC,IAArDqE,GAAWF,SAASqD,QAAQnD,GAAWH,UACvCI,GAAc,2BACPD,IADM,IAETF,SAAUE,GAAWF,SAASgE,OAAO9D,GAAWH,YAGxD,IAAIkE,EAAW,GACf,IAAK,IAAIhD,KAAOvB,EACZuE,EAAQ,2BACDA,GADC,kBAEHhD,EAAMvB,EAAauB,KAGxBf,GAAWD,mBACXI,IAAW,SAAC0B,GAAD,mBAAC,eACLA,GADI,kBAEN7B,GAAW1C,MAAM,IAAIoD,GAAaF,MAF5B,eAGAuD,QAIX5D,IAAW,SAAC0B,GAAD,mBAAC,eACLA,GADI,kBAEN7B,GAAW1C,MAFL,eAGAyG,QAIXzD,IACAH,IAAW,SAAC0B,GAAD,mBAAC,eACLA,GADI,kBAEN7B,GAAW1C,MAAM,IAAIoD,GAAaD,OAF5B,eAGAsD,QAIf7H,QAAQC,IAAIuE,IACZxE,QAAQC,IAAI4H,GACZ7H,QAAQC,IAAI+D,IAmKuF8D,IAAvF,sCACA,cAAC/I,EAAA,EAAD,CAAQuG,UAAW5C,EAAQb,QAASrE,QAAQ,WAAWiC,QAAS,kBAAM+F,GAAU,IAAhF,+CAEJ,eAACjI,EAAA,EAAD,CAAYH,MAAO,CAACyB,UAAW,IAA/B,UAAoC,cAAC,IAAD,CAAUkC,SAAS,UAAvD,kBACA,cAACqF,EAAA,EAAD,CAAOC,UAAW,EAAGf,UAAW5C,EAAQhB,UAAxC,SACiB,OAAZiB,EAAmBA,EAAO,UAAP,oBAA+CuE,KAAI,SAACQ,GACpE,OAAO,sBAAKtK,MAAO,CAAC2D,SAAU,IAAvB,UAA6B2G,EAAK,6BACxC,gBC5jBzB,IAAMK,GAAUnM,YAAe,CAC3BC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKpBgF,GAAYC,aAAW,SAAC6G,GAAD,MAAY,CACrCC,KAAM,CACF5K,QAAS,QAEb6K,OAAQ,CACJ1I,MAAO,UACP2I,WAAY,mDACZC,OAAQ,KACRzJ,OAAQ,IAEZ0J,QAAS,CACLC,UAAW,IAEfC,KAAM,CACFrK,SAAU,GACVsK,cAAe,GAEnBC,WAAY,CACRN,WAAY,gFACZtK,WAAY,OACZkE,YAAa,GACb2G,aAAc,GACdlJ,MAAO,WAEXmJ,WAAY,CACRP,OAAQ,KAEZQ,OAAQ,CACJhK,MAAO,GACPiK,WAAY,EACZT,OAAQ,KACR7G,SAAU,UAEduH,YAAa,CACTlK,MAAO,GACP2C,SAAU,UAEdwH,gBAAiB,CACbxH,SAAU,UAEdyH,WAAY,CACRnL,WAAY,GAEhBwD,QAAS,CACL4H,SAAU,EACVxH,QAASuG,EAAMkB,QAAQ,GACvBrK,UAAW,QAIJ,SAASsK,KACpB,IAAMzG,EAAUxB,KADoB,GAEpB3E,cACgBI,mBAAS,OAHL,mBAG7BmJ,EAH6B,KAGnBsD,EAHmB,OAINzM,mBAAS,MAJH,mBAI7BgG,EAJ6B,KAIpB0G,EAJoB,KAUpC,OAJAxD,qBAAU,WACNyD,SAASC,eAAe,gBAAgBC,UAC1C,IAGF,cAACC,EAAA,EAAD,CAAezB,MAAOD,GAAtB,SACA,cAAC,IAAD,UAEA,sBAAKzC,UAAW5C,EAAQuF,KAAxB,UACA,cAACyB,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAQrE,UAAW5C,EAAQwF,OAA3B,SACI,eAAC0B,EAAA,EAAD,CAAStE,UAAW5C,EAAQ2F,QAA5B,UACE,cAAC9K,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,cAACE,EAAA,EAAD,CAAKC,WAAW,iBAAhB,yBAIF,cAACoB,EAAA,EAAD,CAAQvB,QAAQ,YAAY8H,UAAW5C,EAAQ+F,WAAYoB,gBAAc,cAAcC,gBAAc,OACnGrK,QAAS,aADX,SAKE,cAAC/B,EAAA,EAAD,CAAKqD,SAAS,OAAOpD,WAAW,iBAAhC,oDAOR,eAACoM,EAAA,EAAD,CACIzE,UAAW5C,EAAQkG,OACnBpL,QAAQ,YACRkF,QAAS,CACPsH,MAAOtH,EAAQoG,aAJrB,UAMI,cAACc,EAAA,EAAD,CAAStE,UAAW5C,EAAQ2F,QAAS4B,gBAAgB,IACrD,qBAAK3E,UAAW5C,EAAQqG,gBAAxB,SACE,eAACzK,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAUH,GAAG,eAAe6L,QAAM,EAAClL,UAAWmL,IAAM1E,GAAG,IAAI2E,QAAQ,OAAnE,SACI,cAACC,EAAA,EAAD,CAAc/E,UAAW5C,EAAQsG,WAAjC,SAA6C,cAAC,IAAD,QAEjD,cAACxK,EAAA,EAAD,CAAU0L,QAAM,EAAClL,UAAWmL,IAAM1E,GAAG,WAAW2E,QAAQ,OAAxD,SACI,cAACC,EAAA,EAAD,CAAc/E,UAAW5C,EAAQsG,WAAjC,SAA6C,cAAC,IAAD,gBAMvD,sBAAM1D,UAAW5C,EAAQrB,QAAzB,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiJ,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAACpO,EAAD,CAAUsD,QAAS,SAAC4G,GAAD,OAAU8C,EAAY9C,IAAO3F,WAAY,SAACR,GAAD,OAAUkJ,EAAWlJ,SACrH,cAAC,IAAD,CAAOmK,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,cAAC/H,GAAD,CAAWqD,SAAUA,EAAUnD,QAASA,mB,OC/GhF8H,OAff,WAEE,OACE,cAAC,IAAD,CAAQC,SAAS,WAAjB,SAEE,cAAC,IAAD,CAAOH,KAAK,IAAIC,OAAQ,kBAAM,cAACrB,GAAD,UCCrBwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASX,OACL,cAAC,IAAMY,WAAP,UACA,cAAC,IAAD,CAAkBC,SAAU,EAAGC,iBAAkB,IAAjD,SACE,cAAC,GAAD,QAGJhC,SAASC,eAAe,SAM1BoB,M","file":"static/js/main.9d54e79f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { Button, CssBaseline, TextField, Typography, Card, Box, Container } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { login } from './auth.js';\nimport { useHistory } from \"react-router-dom\"\n\nconst myTheme = createMuiTheme({\n  palette: {\n      primary: {\n          light: '#58a5f0',\n          main: '#0277bd',\n          dark: '#58a5f0',\n          contrastText: '#fff',\n      }\n  }\n})\n\nfunction LoginPage(theme) {\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const submit = e => {\n      e.preventDefault();\n      enqueueSnackbar('로그인 요청 중...')\n      login({email, password})\n      .then(()=> {\n        sessionStorage.setItem('userId', email);\n        history.push(\"/\");\n        closeSnackbar();\n      })\n      .catch(()=> \n        enqueueSnackbar('아이디 또는 비밀번호가 올바르지 않습니다', {variant: 'error',})\n      );\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        \n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        title: {\n          marginBottom: 30,\n        },\n        logincard: {\n          marginTop: 120,\n        },\n        form: {\n          color: 'black',\n          width: '80%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 5),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n      <ThemeProvider theme={myTheme}>\n        <Container className={classes.main} maxWidth=\"xs\">\n            <CssBaseline />\n            <Card className={classes.logincard}>\n            <div className={classes.paper}>\n                <Typography variant=\"h4\" noWrap className={classes.title}>\n                  <Box fontWeight=\"fontWeightBold\" m={1}>\n                  Kant | Admin\n                  </Box>\n                </Typography>\n                <form className={classes.form} onSubmit={submit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"id\"\n                    label=\"아이디\"\n                    name=\"id\"\n                    autoFocus\n                    onChange={e=> setEmail(e.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"비밀번호\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={e=> setPassword(e.target.value)}\n                />\n                \n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={(email === '') || (password === '') }\n                >\n                    로그인\n                </Button>\n                \n                </form>\n            </div>\n            </Card>            \n            </Container>\n            </ThemeProvider>\n        )\n    }\n\nexport default LoginPage;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Dialog, Grid, IconButton, Paper, DialogTitle, List, ListItem, CircularProgress } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useSnackbar } from 'notistack';\nimport Modal from './Modal.js'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useHistory } from 'react-router';\n\n\nexport default function Uploader(props) {\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n    const sampleData = {\n        \"Company\": \"S_T\",\n        \"WPS_Doc_Info\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.06693921983242035,\n                \"right\": 1.0,\n                \"bottom\": 0.16817045211791992\n            },\n            \"fields\": {\n                \"WPS_No\": [\n                    \"F-1010-001\"\n                ],\n                \"Date\": [\n                    \"20. JUL, 2012\"\n                ],\n                \"Rev_No\": [\n                    \"-\",\n                    \"Rev. No.\",\n                    \"o\"\n                ],\n                \"Rev_Date\": [],\n                \"Supporting_PQR_No\": [\n                    \"QGTFC-10H.10H-211A\"\n                ],\n                \"Impact_Test\": [\n                    \"YES\",\n                    \"( C)\",\n                    \"NO\"\n                ],\n                \"Welding_Process\": [\n                    \"FCAW\"\n                ],\n                \"Type\": [\n                    \"SEMI-AUTO\"\n                ],\n                \"Code\": []\n            }\n        },\n        \"WPS_QW_402\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.1790739744901657,\n                \"right\": 0.5,\n                \"bottom\": 0.2804385721683502\n            },\n            \"fields\": {\n                \"Type_of_Joint\": [\n                    \"SEE JOINT DETAIL\"\n                ],\n                \"Backing_Material\": [\n                    \"FILLET :\",\n                    \"BASE METAL\"\n                ],\n                \"Backing\": [\n                    \"Yes\",\n                    \"FC\",\n                    \"No\"\n                ],\n                \"Root_Spacing\": [],\n                \"Retainers\": [\n                    \"NONE\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_403\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.2904154360294342,\n                \"right\": 0.5,\n                \"bottom\": 0.4990725517272949\n            },\n            \"fields\": {\n                \"P_No\": [\n                    \"1\"\n                ],\n                \"Gr_No\": [\n                    \"1\"\n                ],\n                \"to_P_No\": [],\n                \"to_Gr_No\": [],\n                \"or_Spec_Type_and_Grade\": [\n                    \"*1 ( See Note.)\"\n                ],\n                \"Qualified_Thickness_Range\": [\n                    \"GROOVE :\",\n                    \"5 ~ 46mm\",\n                    \"FILLET :\",\n                    \"ALL\"\n                ],\n                \"Depo_Weld_Metal\": [],\n                \"Pipe_Diameter_Range\": [\n                    \"-\"\n                ],\n                \"Max_Pass_Thk_Limit\": [\n                    \"4mm\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_404\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.5097125768661499,\n                \"right\": 0.5,\n                \"bottom\": 0.8120782971382141\n            },\n            \"fields\": {\n                \"F_No\": [\n                    \"6\"\n                ],\n                \"A_No\": [\n                    \"8\"\n                ],\n                \"Specification_No\": [\n                    \"5.22\"\n                ],\n                \"AWS_Class\": [\n                    \"E2209T1-4\"\n                ],\n                \"Brand_Name\": [],\n                \"Depo_Weld_Metal\": [],\n                \"Filler_Product_Form\": [\n                    \"FLUX CORED\"\n                ],\n                \"Size\": [\n                    \"1.2mm\"\n                ],\n                \"Supplemental\": [],\n                \"Alloy_Element\": [],\n                \"Flux_Wire_Class\": [\n                    \"N/A\"\n                ],\n                \"Alloy_Flux\": [],\n                \"Flux_Trade_Name\": [\n                    \"N/A\"\n                ],\n                \"Flux_Type\": [],\n                \"Recrushed_Slag\": [],\n                \"Consumable_Insert\": [\n                    \"NONE\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_405\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.8227624297142029,\n                \"right\": 0.5,\n                \"bottom\": 1.0\n            },\n            \"fields\": {\n                \"Position_of_Groove\": [\n                    \"ALL\"\n                ],\n                \"Position_of_Fillet\": [\n                    \"ALL\"\n                ],\n                \"Welding_Progression\": [\n                    \"UP\",\n                    \"FC\",\n                    \"DOWN -\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_406\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.35335198044776917,\n                \"right\": 1.0,\n                \"bottom\": 0.43557727336883545\n            },\n            \"fields\": {\n                \"Min_Preheat_Temp\": [\n                    \"Min. 10 °\"\n                ],\n                \"Max_Interpass_Temp\": [\n                    \"Max. 150 °C\"\n                ],\n                \"Preheat_Maintain\": [\n                    \"N/A\"\n                ],\n                \"Others\": []\n            }\n        },\n        \"WPS_QW_407\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.44642001390457153,\n                \"right\": 1.0,\n                \"bottom\": 0.5704269409179688\n            },\n            \"fields\": {\n                \"Postweld_Heat_Treat_Temp\": [\n                    \"N/A\"\n                ],\n                \"Holding_Time\": [\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"N/A\"\n                ]\n            }\n        },\n        \"WPS_QW_408\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.5807933211326599,\n                \"right\": 1.0,\n                \"bottom\": 0.7189614176750183\n            },\n            \"fields\": {\n                \"Shielding_Gas\": [\n                    \"Ar /CO2\",\n                    \"75%/25%\",\n                    \"15-20//mm\"\n                ],\n                \"Backing_Gas\": [\n                    \"N/A\",\n                    \"N/A\",\n                    \"N/A\"\n                ],\n                \"Trailing_Gas\": [\n                    \"N/A\",\n                    \"N/A\",\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_409\": {\n            \"page\": 1,\n            \"area\": {\n                \"left\": 0.5,\n                \"top\": 0.7296864986419678,\n                \"right\": 1.0,\n                \"bottom\": 0.8603706955909729\n            },\n            \"fields\": {\n                \"Pulsing_Current\": [],\n                \"Current\": [],\n                \"Polarity\": [],\n                \"Tungsten_Electrode_Type\": [\n                    \"N/A\"\n                ],\n                \"Tungsten_Electrode_Size\": [\n                    \"N/A\"\n                ],\n                \"Mode_of_Metal_Transfer\": [\n                    \"SPRAY / GLOBULAR\"\n                ],\n                \"Heat_Input\": [],\n                \"Electrode_Wire_Feed_Speed_Range\": [\n                    \"N/A\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_QW_410\": {\n            \"page\": 2,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.13226628303527832,\n                \"right\": 1.0,\n                \"bottom\": 0.23131555318832397\n            },\n            \"fields\": {\n                \"Stringer_or_Weave_Bead\": [\n                    \"BOTH\"\n                ],\n                \"Orifice_Gas_Cup_or_Nozzle_Tip\": [\n                    \"12 21mm\"\n                ],\n                \"Initial_or_Interpass_Cleaning\": [\n                    \"BRUSHING and/or GRINDING\"\n                ],\n                \"Contact_Tube_to_Work_Dist\": [\n                    \"N/A\"\n                ],\n                \"Closed_to_Out_Chamber\": [],\n                \"Use_of_Thermal_Process\": [],\n                \"Method_of_Back_Gouging\": [\n                    \"GRINDING / PLASMA\"\n                ],\n                \"Single_or_Multiple_Pass\": [\n                    \"MULTIPLE\"\n                ],\n                \"Single_or_Multiple_Electrode\": [\n                    \"SINGLE\"\n                ],\n                \"Multiple_Electrode_Spacing\": [],\n                \"Manual_or_Automatic\": [],\n                \"Peening\": [\n                    \"NONE\",\n                    \"NONE\"\n                ],\n                \"Oscillation\": [\n                    \"N/A\",\n                    \"475447\"\n                ],\n                \"Others\": [\n                    \"NONE\"\n                ]\n            }\n        },\n        \"WPS_NOTES\": {\n            \"page\": 2,\n            \"area\": {\n                \"left\": 0.0,\n                \"top\": 0.5419971346855164,\n                \"right\": 1.0,\n                \"bottom\": 0.9454333782196045\n            },\n            \"fields\": {\n                \"Instructions\": [\n                    \"1. APPLICABLE METAL.\",\n                    \"ANY MATERIAL OF P No. 10H GR 1 AND P No. 10H GR 1OF QW-422 IN SECTION IX ASME CODE.\",\n                    \"2. THE FOLLOWING VARIABLES ARE NOT APPLIED TO THIS WPS.\",\n                    \"-QW 407.4 T LIMITS\",\n                    \"-QW 410.15 ELECTRODE SPACING\",\n                    \"-QW 410.64 USE OF THERMAL PROCESSES\",\n                    \"3. THE GAS PURGE SHOULD BE HELD UNTIL AT LEAST 2 LAYERS OF WELD HAVE BEEN DEPOSITED.\",\n                    \"0\",\n                    \"S.J.PARK 15-4-2020 1.20.12\",\n                    \"J.H.KIM\",\n                    \"P.R.KIM\",\n                    \"July 20,2012.\",\n                    \"their\",\n                    \"HSBCT\",\n                    \"T. Y. Jang/Date\"\n                ]\n            }\n        }\n    };\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            props.getFile(tempFile)\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                console.log(res);\n                axios.put(res.data.body.upload_url, tempFile)\n                .then((res) => {\n                    console.log(res);\n                    setUploadState({...uploadState, upload: true})\n                    axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                        \"action\": \"OCR\",\n                        \"file\": tempFile.name\n                    }, {headers : {\"InvocationType\":\"Event\"}})\n                    .then((res) => {\n                        console.log(res);\n                        const timer = setInterval(() => {\n                            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                \"action\": \"RESULT\",\n                                \"file\": tempFile.name\n                            })\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.body.result === \"OK\") {\n                                    clearInterval(timer);\n                                    props.getOcrData(res.data.body.data[0]);\n                                    setUploadState({...uploadState, ocr: true})\n                                    history.push('/inspect')\n                                }\n                            })\n                        }, 5000);\n                    })\n                })\n            })\n            .catch((err)=> {\n                setLoadingDialogOpen(false)\n                enqueueSnackbar('에러 발생', {variant: 'error'})\n            })\n            // props.getOcrData(sampleData);\n            // history.push('/inspect');\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'})\n        }\n    }\n\n    return (\n        <>\n        <div style={{display:'flex', marginBottom:10}}>\n            <Typography variant=\"h5\" noWrap >\n            <Box fontWeight=\"fontWeightBold\" m={1}>\n                업로드\n            </Box>\n            </Typography>\n            {/* page navigation button\n            <IconButton><ArrowBackIosIcon fontSize=\"small\"/></IconButton>\n            <Typography variant=\"h7\" style={{marginTop:14}}>1 페이지</Typography>\n            <IconButton><ArrowForwardIosIcon fontSize=\"small\"/></IconButton> */}\n            <div style={{marginLeft:'auto', paddingTop:5}}>\n                \n            </div>\n        </div>\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"simple-dialog-title\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"simple-dialog-title\">업로드 및 OCR</DialogTitle>\n            <List style={{ margin:10 }}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n        <div style={{ height: '100%', width: '100%', marginTop:20, marginLeft:10}}>\n            <div style={{display: 'flex', gap: '20px'}}>\n                <Typography style={{ marginTop:5 }}>업로드 파일 :</Typography>\n                <Button variant=\"outlined\" component=\"label\"><input type=\"file\" accept=\"application/pdf\" onChange={handleFile} /></Button> \n                <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}><CachedIcon fontSize='small'/>&nbsp;&nbsp;실행</Button> \n            </div>\n        </div>\n        </>\n    );\n}","export const TableInfo = {\r\n    \"WPS_Doc_Info\": {\r\n        \"WPS_No\": \"T\",\r\n        \"Date\": \"T\",\r\n        \"Impact_Test\": \"YN/T\",\r\n        \"Rev_No\": \"T\",\r\n        \"Rev_Date\": \"T\",\r\n        \"Supporting_PQR_No\": \"T/T/T\",\r\n        \"Welding_Process\": \"T/T/T\",\r\n        \"Type\": \"T/T/T\",\r\n        \"Code\": \"T\"\r\n    }, \"WPS_QW_403\": {\r\n        \"P_No\": \"T\",\r\n        \"Gr_No\": \"T/T/T\",\r\n        \"to_P_No\": \"T\",\r\n        \"to_Gr_No\": \"T/T/T\",\r\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\r\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\r\n        \"Depo_Weld_Metal\": \"T/mm\",\r\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\r\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\r\n        \"Others\": \"T\"\r\n    }, \"WPS_QW_404\": {\r\n        \"F_No\": \"T\",\r\n        \"A_No\": \"T\",\r\n        \"Specification_No\": \"T\",\r\n        \"AWS_Class\": \"T\",\r\n        \"Brand_Name\": \"T\",\r\n        \"Depo_Weld_Metal\": \"T/mm\",\r\n        \"Filler_Product_Form\": \"T\",\r\n        \"Size\": \"T/T/mm\",\r\n        \"Supplemental\": 'T',\r\n        \"Alloy_Element\": \"T\",\r\n        \"Flux_Wire_Class\": \"T\",\r\n        \"Alloy_Flux\": \"T\",\r\n        \"Flux_Trade_Name\": \"T\",\r\n        \"Flux_Type\": \"T\",\r\n        \"Recrushed_Slag\": \"T\",\r\n        \"Consumable_Insert\": \"T\",\r\n        \"Others\": \"T\"\r\n    }\r\n};\r\nexport const WPS_tables = [\r\n    \"WPS_Doc_Info\", \r\n    \"WPS_QW_403\", \r\n    \"WPS_QW_404\"\r\n]","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Card, CardContent, Grid, IconButton, Paper, TextField, Switch, FormControlLabel, FormControl, InputLabel, Select, MenuItem, NativeSelect } from '@material-ui/core'\nimport { Dialog, DialogTitle, List, ListItem, CircularProgress } from '@material-ui/core'\nimport { useSnackbar } from 'notistack';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport { TableInfo, WPS_tables } from './DataDef.js'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\n\nconst useStyles = makeStyles({\n    title: {\n        display: 'flex', \n        gap: 10\n    },\n    content: {\n        width: '100%', \n        display: 'flex', \n        gap: 20, \n        marginTop: 5, \n        marginLeft: 10\n    },\n    leftPaper: {\n        width: '850px', \n        height: '700px', \n        marginTop: 10, \n        overflow: 'scroll'\n    },\n    rightPaper: {\n        width: '520px', \n        height: '400px', \n        marginTop: 10, \n        padding: 10,\n        overflow: 'scroll'\n    },\n    notePaper: {\n        width: '520px', \n        height: '250px', \n        marginTop: 10, \n        padding: 10,\n        overflow: 'scroll'\n    },\n    dbBtn: {\n        marginTop: 10\n    },\n    prevBtn: {\n        marginTop: 10\n    },\n    nextBtn: {\n        marginTop: 10, \n        marginLeft: \"auto\"\n    },\n    tableCard: {\n        display: 'grid',\n        marginTop: 10,\n        paddingLeft: 10,\n        height: 52,\n        gap: 3,\n    },\n    cardNum: {\n        marginLeft: -10,\n        fontWeight: 'bold',\n        fontSize: 14,\n        // textDecoration: 'underline'\n    },\n    select: {\n        width: 80,\n        height: 20,\n        marginRight: 10\n    },\n    formControl: {\n        width: 80,\n        height: 20,\n        marginTop: '10px',\n        marginLeft: '0px',\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n          border: '1px solid',\n          borderColor: \"#707070\",\n          borderRadius: \"4px\",\n        },\n    },\n    addProcessBtn: {\n        marginTop: 5,\n        fontSize: 12,\n        width: 150,\n        height: 30,\n        justify:\"center\"\n    }\n  });\n\n\nexport default function Inspector(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const ocrData = props.ocrData;\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const onDocumentLoadSuccess = ({numPages}) => {\n        setNumPages(numPages)\n    };\n    const [tableAreaRect, setTableAreaRect] = useState({\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n    });\n    const [zoomState, setZoomState] = useState(3);\n    const [currentTable, setCurrentTable] = useState({});\n    const [clonedTable, setClonedTable] = useState({});\n    const [tableState, setTableState] = useState({\n        total: 0,\n        current: 0,\n        finished: [],\n        title: \"\",\n        isProcessAvailable: false\n    });\n    const [DBState, setDBState] = useState({});\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [saveState, setSaveState] = useState(false)\n    const [openAddProcess, setOpenAddProcess] = useState(false);\n    const [processState, setProcessState] = useState({\n        first: \"GTAW\",\n        second: \"GTAW\"\n    });\n\n    const makeField = (typeStr, arr, key, idx) => {\n        switch (typeStr) {\n            case \"T\":\n                if (arr[idx] === undefined) {\n                    return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={\"\"} fullWidth variant=\"outlined\" \n                    onChange={e=> {\n                        let newArr = arr;\n                        while (newArr.length <= idx) {\n                            newArr.push(\"\");\n                        }\n                        newArr[idx] = e.target.value;\n                        setCurrentTable({\n                        ...currentTable,\n                        [key]: newArr\n                        })\n                    }}/>\n                }\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    setCurrentTable({\n                        ...currentTable,\n                        [key]: newArr\n                    });\n                }}/>\n            case \"YN\":\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    setCurrentTable({\n                        ...currentTable,\n                        [key]: newArr\n                    });\n                }}/>\n            default:\n                return <CardContent className={classes.cardNum}>{typeStr}</CardContent>\n        }\n    }\n\n    const makeCard = (key) => {\n        const fieldTypeArr = TableInfo[tableState.title][key].split('/');\n        // const fieldArr = currentTable[key].split(',');\n        if (key === \"Qualified_Thickness_Range\" || key === \"Pipe_Diameter_Range\" && currentTable[key][1] !== undefined) {\n            let fieldData = currentTable[key][1].split('~')\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldData[0]} fullWidth variant=\"outlined\" \n                            onChange={e=> {\n                                fieldData[0] = e.target.value\n                                let newArr = currentTable[key]\n                                newArr[1] = fieldData.join('~')\n                                setCurrentTable({\n                                    ...currentTable,\n                                    [key]: newArr});\n                            }}/>\n                            <CardContent className={classes.cardNum}>~</CardContent>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldData[1]} fullWidth variant=\"outlined\" \n                             onChange={e=> {\n                                fieldData[1] = e.target.value\n                                let newArr = currentTable[key]\n                                newArr[1] = fieldData.join('~')\n                                setCurrentTable({\n                                    ...currentTable,\n                                    [key]: newArr});\n                            }}/>\n                            <CardContent className={classes.cardNum}>mm</CardContent>\n                        </Card>)\n        }\n        if (fieldTypeArr.length <= 1) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 320px'}}>\n                        <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                        {fieldTypeArr.map((typeStr, idx) => {\n                            return makeField(typeStr, currentTable[key], key, idx)\n                        })}\n                    </Card>)\n        } else if (fieldTypeArr.length === 2) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 158px 158px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, currentTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 3) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 105px 105px 105px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, currentTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 4) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, currentTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 5) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 70px 70px 30px 70px 70px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeField(typeStr, currentTable[key], key, idx)\n                            })}\n                        </Card>)\n        }\n    }\n\n    const makeFieldForNewProcess = (typeStr, arr, key, idx) => {\n        switch (typeStr) {\n            case \"T\":\n                if (arr === undefined) {\n                    return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={\"\"} fullWidth variant=\"outlined\" \n                    onChange={e=> setClonedTable({\n                        ...clonedTable,\n                        [key]: e.target.value\n                    })}/>\n                }\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    setClonedTable({\n                        ...clonedTable,\n                        [key]: newArr\n                    });\n                }}/>\n            case \"YN\":\n                return <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={arr[idx]} fullWidth variant=\"outlined\" \n                onChange={e=> {\n                    let newArr = arr;\n                    newArr[idx] = e.target.value\n                    setClonedTable({\n                        ...clonedTable,\n                        [key]: newArr\n                    });\n                }}/>\n            default:\n                return <CardContent className={classes.cardNum}>{typeStr}</CardContent>\n            }\n    }\n\n    const makeCardForNewProcess = (key) => {\n        const fieldTypeArr = TableInfo[tableState.title][key].split('/');\n        // const fieldArr = currentTable[key].split(',');\n        if (key === \"Qualified_Thickness_Range\" || key === \"Pipe_Diameter_Range\" && clonedTable[key][1] !== undefined) {\n            const fieldData = clonedTable[key][1].split('~')\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldData[0]} fullWidth variant=\"outlined\" \n                            onChange={e=> setClonedTable({\n                                ...clonedTable,\n                                [key]: e.target.value\n                            })}/>\n                            <CardContent className={classes.cardNum}>~</CardContent>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13}}} value={fieldData[1]} fullWidth variant=\"outlined\" \n                            onChange={e=> setCurrentTable({\n                                ...clonedTable,\n                                [key]: e.target.value\n                            })}/>\n                            <CardContent className={classes.cardNum}>mm</CardContent>\n                        </Card>)\n        }\n        if (fieldTypeArr.length <= 1) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 320px'}}>\n                        <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                        {fieldTypeArr.map((typeStr, idx) => {\n                            return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n                        })}\n                    </Card>)\n        } else if (fieldTypeArr.length === 2) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 158px 158px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 3) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 105px 105px 105px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 4) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 80px 40px 80px 40px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n                            })}\n                        </Card>)\n        } else if (fieldTypeArr.length === 5) {\n            return (<Card variant=\"outlined\" className={classes.tableCard} style={{gridTemplateColumns: '130px 70px 70px 30px 70px 70px'}}>\n                            <TextField margin=\"dense\" inputProps={{style: {fontSize: 13, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\n                            {fieldTypeArr.map((typeStr, idx) => {\n                                return makeFieldForNewProcess(typeStr, clonedTable[key], key, idx)\n                            })}\n                        </Card>)\n        }\n    }\n\n    const moveTable = (to) => {\n        const toMove = tableState.current + to;\n        if (toMove >= 0 && toMove <=tableState.total-1) {\n            setTableState(prevState => ({\n                ...prevState,\n                current: toMove,\n                title: WPS_tables[toMove]\n            }));\n            setCurrentTable({})\n            setCurrentTable(ocrData[WPS_tables[toMove]][\"fields\"]);\n            setTableAreaRect({...tableAreaRect,\n                top: 800*ocrData[WPS_tables[toMove]][\"area\"][\"top\"],\n                left: 600*ocrData[WPS_tables[toMove]][\"area\"][\"left\"],\n                width: 600*(ocrData[WPS_tables[toMove]][\"area\"][\"right\"] - ocrData[WPS_tables[toMove]][\"area\"][\"left\"]),\n                height: 800*(ocrData[WPS_tables[toMove]][\"area\"][\"bottom\"] - ocrData[WPS_tables[toMove]][\"area\"][\"top\"]),\n            })\n            setOpenAddProcess(false)\n            if (WPS_tables[toMove].endsWith(\"404\")) {\n                setTableState(prevState => ({\n                    ...prevState,\n                    isProcessAvailable: true\n                }))\n            } else {\n                setTableState(prevState => ({\n                    ...prevState,\n                    isProcessAvailable: false\n                }))\n            }\n        }\n    }\n\n    const addProcess = () => {\n        if(openAddProcess) {\n            setOpenAddProcess(false);\n        } else {\n            setOpenAddProcess(true);\n            setClonedTable(ocrData[WPS_tables[tableState.current]][\"fields\"]);\n        }\n    }\n\n    const submitTable = () => {\n        if (tableState.finished.indexOf(tableState.current) === -1) {\n            setTableState({\n                ...tableState,\n                finished: tableState.finished.concat(tableState.current)\n            })\n        }\n        let tempJson = {}\n        for (let key in currentTable) {\n            tempJson = {\n                ...tempJson,\n                [key]: currentTable[key]\n            }\n        }\n        if (tableState.isProcessAvailable) {\n            setDBState((prevState) => ({\n                ...prevState,\n                [tableState.title+\"_\"+processState.first]: {\n                    ...tempJson\n                }\n            }))\n        } else {\n            setDBState((prevState) => ({\n                ...prevState,\n                [tableState.title]: {\n                    ...tempJson\n                }\n            }))\n        }\n        if (openAddProcess) {\n            setDBState((prevState) => ({\n                ...prevState,\n                [tableState.title+\"_\"+processState.second]: {\n                    ...tempJson\n                }\n            }))\n        }\n        console.log(processState)\n        console.log(tempJson);\n        console.log(DBState);\n    }\n\n    const saveDB = () => {\n        setLoadingDialogOpen(true)\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"DB\",\n                \"data\": [\n                    {\n                        ...DBState\n                    }\n                ]\n        })\n        .then((res) => {\n            console.log(res);\n            setSaveState(true);\n            setTimeout(() => {\n                setLoadingDialogOpen(false)\n                history.push('/')\n            }, 5000);\n        })\n        .catch((err) => {\n            console.log(err);\n            enqueueSnackbar('에러 발생', {variant: 'error'})\n        })\n    }\n\n    \n    useEffect(() => {   \n        if (props.ocrData !== null) {\n            console.log(props.userFile);\n            console.log(ocrData);\n            console.log(ocrData[WPS_tables[0]]);\n            setCurrentTable(ocrData[WPS_tables[0]][\"fields\"]);\n            setTableState({\n                total: 3,\n                current: 0,\n                finished: [],\n                title: WPS_tables[0],\n                isProcessAvailable: false\n            })\n            setTableAreaRect({...tableAreaRect,\n                top: 800*ocrData[WPS_tables[0]][\"area\"][\"top\"],\n                left: 600*ocrData[WPS_tables[0]][\"area\"][\"left\"],\n                width: 600*(ocrData[WPS_tables[0]][\"area\"][\"right\"] - ocrData[WPS_tables[0]][\"area\"][\"left\"]),\n                height: 800*(ocrData[WPS_tables[0]][\"area\"][\"bottom\"] - ocrData[WPS_tables[0]][\"area\"][\"top\"]),\n            })\n            console.log(Object.keys(currentTable));\n            setDBState({\n                \"Company\": ocrData[\"Company\"]\n            });\n        }\n    }, []);\n\n    return (\n        <>\n        <div className={classes.title}>\n            <Typography variant=\"h5\" noWrap >\n                <Box fontWeight=\"fontWeightBold\" m={1}>\n                    Inspect -  {props.userFile ? props.userFile.name : \"파일 없음\"}\n                </Box>\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={saveDB}><SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장</Button>\n        </div>\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"simple-dialog-title\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"simple-dialog-title\">DB Save</DialogTitle>\n            <List style={{ margin:15 }}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\n                    {!saveState ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n        <div className={classes.content}>\n            <div>\n                <Typography>\n                    <DoneIcon fontSize='small'/>&nbsp;&nbsp;OCR 결과&nbsp;&nbsp;\n                    <IconButton onClick={() => setZoomState(zoomState + 1)}><ZoomInIcon fontSize=\"small\"/></IconButton>\n                    <IconButton onClick={() => setZoomState(zoomState - 1)}><ZoomOutIcon fontSize=\"small\"/></IconButton>\n                </Typography>\n                <Paper elevation={1} className={classes.leftPaper}>\n                    <Document \n                    file={props.userFile}\n                    onLoadError={console.error}\n                    onLoadSuccess={onDocumentLoadSuccess}\n                    noData={\n                        <div style={{marginTop:30, textAlign: \"center\"}}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>\n                    }>\n                        <Page height={400} pageNumber={pageNumber} scale={zoomState}>\n                            <div style={{\n                                position:'absolute', \n                                left: tableAreaRect.left*zoomState/2, \n                                top: tableAreaRect.top*zoomState/2, \n                                width: tableAreaRect.width*zoomState/2, \n                                height: tableAreaRect.height*zoomState/2, \n                                border: 'dashed 3px', textAlign: 'center'\n                            }}>\n                            </div>\n                        </Page>\n                    </Document>\n                </Paper>\n                <Grid container>\n                    <Button className={classes.prevBtn} variant=\"outlined\" disabled={pageNumber === 1 ? true : false} onClick={() => setPageNumber(pageNumber-1)}>이전페이지</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" disabled={pageNumber === numPages || numPages === null ? true : false} onClick={() => setPageNumber(pageNumber+1)}>다음페이지</Button>\n                </Grid>\n            </div>\n            <div>\n                <Typography><EditIcon fontSize='small'/>&nbsp;&nbsp;확인 및 수정 - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Typography>\n                <Paper elevation={1} className={classes.rightPaper}>\n                    <Typography>{tableState.title}&nbsp;&nbsp;\n                    {tableState.isProcessAvailable ? \n                        <select\n                        onChange={(e) => {\n                            setProcessState((prevState) => ({...prevState, first: e.target.value}));\n                            console.log(\"here\")\n                        }}\n                        className={classes.select}\n                        defaultValue={\"GTAW\"}\n                        value={processState.first}\n                        >\n                            <option value={\"GTAW\"}>GTAW</option>\n                            <option value={\"SMAW\"}>SMAW</option>\n                            <option value={\"GMAW\"}>GMAW</option>\n                            <option value={\"FCAW\"}>FCAW</option>\n                            <option value={\"SAW\"}>SAW</option>\n                        </select> : null}\n                    {tableState.finished.indexOf(tableState.current) !== -1 ?\n                        \"-  수정 반영 완료\" : null}\n                    </Typography>\n                    {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                        return makeCard(key)\n                    }) : null}\n                </Paper>\n                {tableState.isProcessAvailable ? \n                    <Grid container justify=\"center\">\n                        <Grid item><Button className={classes.addProcessBtn} variant=\"outlined\" onClick={addProcess}>{!openAddProcess ? \"+ Add Process\" : \"Close Process\"}</Button></Grid>\n                    </Grid> : null}\n                {openAddProcess ? \n                    <Paper elevation={1} className={classes.rightPaper}>\n                    <Typography>{tableState.title}&nbsp;&nbsp;\n                        <select\n                            onChange={(e) => {\n                                setProcessState((prevState) => ({...prevState, second: e.target.value}));\n                                console.log(\"here\")\n                            }}\n                            className={classes.select}\n                            defaultValue={\"GTAW\"}\n                            value={processState.second}\n                            >\n                                <option value={\"GTAW\"}>GTAW</option>\n                                <option value={\"SMAW\"}>SMAW</option>\n                                <option value={\"GMAW\"}>GMAW</option>\n                                <option value={\"FCAW\"}>FCAW</option>\n                                <option value={\"SAW\"}>SAW</option>\n                        </select>\n                    </Typography>\n                    {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\n                        return makeCardForNewProcess(key)\n                    }) : null}\n                    </Paper> \n                : null }\n                <Grid container>\n                    <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" color=\"secondary\" onClick={()=> submitTable()}>수정반영</Button>\n                    <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\n                </Grid>\n                <Typography style={{marginTop: 10}}><EditIcon fontSize='small'/>&nbsp;&nbsp;Note</Typography>\n                <Paper elevation={1} className={classes.notePaper}>\n                    {ocrData !== null ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\n                        return <div style={{fontSize: 14}}>{item}<br></br></div>\n                    }) : null}\n                </Paper>\n            </div>\n        </div>\n        </>\n    );\n}","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { refreshAuth, logout } from './auth.js';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport Inspector from './Inspector.js';\n\nconst myTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        color: 'primary',\n        background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 45    \n    },\n    toolBar: {\n        minHeight: 45,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        zIndex: 1400,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 30\n    }\n}));\n\nexport default function ClippedDrawer() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [userFile, setUserFile] = useState(null);\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n    <Router>\n\n    <div className={classes.root}>\n    <CssBaseline />\n\n    <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\">\n            <Box fontWeight=\"fontWeightBold\">\n                WeldBeing\n            </Box>\n          </Typography>\n          <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n            onClick={() => {\n                // logout();\n                // history.push(\"/login\");\n            }}>\n            <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                User | 로그아웃\n            </Box>\n          </Button>\n        </Toolbar>\n    </AppBar>\n\n    <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <Toolbar className={classes.toolBar} disableGutters={true}/>\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n            </ListItem>\n            <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n            </ListItem>\n          </List>\n        </div>\n    </Drawer>\n\n      <main className={classes.content}>\n        <Switch>\n            <Route exact path=\"/\" render={() => <Uploader getFile={(file) => setUserFile(file)} getOcrData={(data) => setOcrData(data)}/>} />\n            <Route exact path=\"/inspect\" render={() => <Inspector userFile={userFile} ocrData={ocrData}/>} />\n            {/* <AuthRoute path=\"/Schedule\" render={() => <Schedule />} />\n            <AuthRoute path=\"/Contents\" render={() => <Contents />} />\n            <AuthRoute path=\"/Devices\" render={() => <Devices />} />\n            <AuthRoute path=\"/Stats\" render={() => <Stats />} /> */}\n        </Switch>\n      </main>\n    </div>\n    </Router>\n    </ThemeProvider>\n  );\n}\n","import './App.css';\nimport LoginPage from './LoginPage.js';\nimport ClippedDrawer from './Main.js';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\nimport AuthRoute from './AuthRoute';\n\nfunction App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      {/* <Route path=\"/login\" render={() => <LoginPage />} /> */}\n      <Route path=\"/\" render={() => <ClippedDrawer />} />\n      {/* <AuthRoute path=\"/Schedule\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Contents\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Devices\" render={() => <ClippedDrawer />} />\n      <AuthRoute path=\"/Stats\" render={() => <ClippedDrawer />} /> */}\n    </Router>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n      <App />\n    </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}