{"version":3,"sources":["Uploader.js","DataDef.js","img/icon_add_process.svg","img/icon_add_item.svg","img/icon_delete_process.svg","Inspector.js","img/logo_otos.svg","Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","display","marginBottom","controller","marginTop","marginLeft","gap","uploadBtn","width","height","background","color","dialogContent","margin","version","fontSize","Uploader","props","classes","history","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","useState","tempFile","setTempFile","loadingDialogOpen","setLoadingDialogOpen","upload","ocr","uploadState","setUploadState","className","Box","fontWeight","m","Button","variant","component","type","style","accept","onChange","e","preventDefault","target","files","name","onClick","getFile","axios","post","then","res","put","data","body","upload_url","headers","timer","setInterval","result","clearInterval","getOcrData","push","catch","err","console","log","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","List","ListItem","Typography","noWrap","CircularProgress","size","TABLE_INFO","EXCEPT_TABLES","PREDEFINED_FIELDS","PROCESS_AVAILABLE_TABLES","PROCESS_OPTIONS","value","content","leftPaper","overflow","rightPaper","padding","notePaper","dbBtn","prevBtn","nextBtn","submitTableBtn","tableCard","paddingLeft","tableCardGas","cardNum","select","marginRight","preDefinedSelect","formControl","border","borderColor","borderRadius","addItemBtn","cursor","dateInput","guide","textAlign","dashedRect","position","leftSide","rightSide","deleteProcessBtn","addProcessBtn","addGasProcessBtn","float","secondProcess","borderLeft","thirdProcess","secondGasProcess","paddingTop","borderTop","thirdGasProcess","gasTable","gridTemplateColumns","watermark","userSelect","left","top","opacity","Inspector","ocrData","total","current","zoom","docState","setDocState","rectArea","setRectArea","list","finished","isProcessAvailable","tableState","setTableState","refinedTable","setRefinedTable","currentTable","setCurrentTable","clonedTable","setClonedTable","clonedTable2","setClonedTable2","count","first","second","third","processState","setProcessState","DBState","setDBState","isDBSave","setIsDBSave","setTable","process","key","newArr","makeField","typeStr","arr","idx","disabled","undefined","TextField","inputProps","length","includes","defaultValue","map","item","selected","i","src","addItemIcon","alt","deleteIcon","pop","CardContent","makeCard","targetTable","fieldTypeArr","split","columnTemplate","makeGasTable","targetKey","gridTemplateRows","gridRowStart","gridRowEnd","gridColumnStart","gridColumnEnd","moveTable","to","toMove","prevState","loadTable","cloneDeep","Object","keys","forEach","join","addProcess","deleteProcess","submitTable","concat","useEffect","sortedTableKeys","filter","sort","userFile","setTimeout","IconButton","Paper","elevation","file","onLoadError","error","onLoadSuccess","numPages","noData","pageNumber","scale","Grid","container","addIcon","InputBase","myTheme","createMuiTheme","palette","primary","light","main","dark","contrastText","root","appBar","zIndex","toolBar","minHeight","logo","paddingBottom","userButton","paddingRight","logoutMenu","drawer","flexShrink","drawerPaper","drawerContainer","drawerItem","flexGrow","spacing","Main","setUserFile","setOcrData","document","getElementById","click","ThemeProvider","CssBaseline","AppBar","Toolbar","justify","Drawer","paper","disableGutters","button","Link","divider","ListItemIcon","exact","path","render","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","autoHideDuration"],"mappings":"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","file":"static/js/main.756a834d.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Dialog, DialogTitle, List, ListItem, CircularProgress, Typography, Box } from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        display: 'flex', \n        marginBottom: 10\n    },\n    controller: {\n        display: 'flex',\n        marginTop: 20, \n        marginLeft: 10,\n        gap: 20\n    },\n    uploadBtn: {\n        width: 292, \n        height: 35, \n        background: \"rgba(23, 62, 139, 1)\", \n        color: \"white\"\n    },\n    dialogContent: {\n        margin: 10\n    },\n    version: {\n        marginLeft: 'auto', \n        marginTop: 'auto', \n        color: 'white', \n        fontSize: 7\n    }\n}));\n\nexport default function Uploader(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [tempFile, setTempFile] = useState(null);\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\n    const [uploadState, setUploadState] = useState({\n        upload: false,\n        ocr: false\n    });\n\n    const handleFile = (e) => {\n        e.preventDefault();\n        setTempFile(e.target.files[0]);\n    }\n\n    const submitFile = (e) => {\n        e.preventDefault();\n        if (tempFile !== null) {\n            props.getFile(tempFile);\n            setLoadingDialogOpen(true);\n            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                \"action\": \"UPLOAD\",\n                \"file\": tempFile.name\n            })\n            .then((res)=> {\n                axios.put(res.data.body.upload_url, tempFile)\n                .then((res) => {\n                    setUploadState({...uploadState, upload: true});\n                    axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                        \"action\": \"OCR\",\n                        \"file\": tempFile.name\n                    }, {headers : {\"InvocationType\":\"Event\"}})\n                    .then((res) => {\n                        const timer = setInterval(() => {\n                            axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\n                                \"action\": \"RESULT\",\n                                \"file\": tempFile.name\n                            })\n                            .then((res) => {\n                                if (res.data.body.result === \"OK\") {\n                                    clearInterval(timer);\n                                    props.getOcrData(res.data.body.data[0]);\n                                    setUploadState({...uploadState, ocr: true});\n                                    history.push('/inspect');\n                                }\n                            })\n                        }, 5000);\n                    })\n                })\n            })\n            .catch((err)=> {\n                console.log(err);\n                setLoadingDialogOpen(false);\n                enqueueSnackbar('에러 발생', {variant: 'error'});\n            })\n        } else {\n            enqueueSnackbar('파일이 선택되지 않았습니다', {variant: 'error'});\n        }\n    }\n\n    return (\n        <>\n        <div className={classes.title}>\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\n                Upload Data\n            </Box>\n        </div>\n        \n        <div className={classes.controller}>\n            <Button variant=\"outlined\" component=\"label\" className={classes.uploadBtn}>\n                <input type=\"file\" style={{display:\"none\"}} accept=\"application/pdf\" onChange={handleFile} />\n                {tempFile==null ? \"업로드\" : \"업로드 : \"+ tempFile.name}\n            </Button>\n            <Button variant=\"outlined\" color=\"primary\" onClick={submitFile}>\n                <CachedIcon fontSize='small'/>&nbsp;&nbsp;실행\n            </Button> \n        </div>\n\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"upload-dialog\" maxWidth='xs' fullWidth={true}>\n            <DialogTitle id=\"upload-dialog\">업로드 및 OCR</DialogTitle>\n            <List className={classes.dialogContent}>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >1) 업로드 진행 &nbsp;&nbsp;</Typography>\n                    {!uploadState.upload ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n                <ListItem>\n                    <Typography variant=\"h6\" noWrap >2) OCR 진행 &nbsp;&nbsp;&nbsp;</Typography>\n                    {!uploadState.ocr ? <CircularProgress size={20}/> : <DoneIcon />}\n                </ListItem>\n            </List>\n        </Dialog>\n        <div className={classes.version}>21/12/30-11:33</div>\n        </>\n    );\n}","export const TABLE_INFO = { // T: Textfield, D: Date, P: Pre-defined selector, AP: Addible Pre-defined selector, etc: text로 처리.\n    \"WPS_Doc_Info\": {\n        \"WPS_No\": \"T\",\n        \"Date\": \"T/D\",\n        \"Impact_Test\": \"T/P/ /T/°C\",\n        \"Rev_No\": \"T\",\n        \"Rev_Date\": \"T\",\n        \"Supporting_PQR_No\": \"T/T/T\",\n        \"Welding_Process\": \"T/AP\",\n        \"Type\": \"T/AP\",\n        \"Code\": \"T\"\n    }, \"WPS_QW_402\": {\n        \"Type_of_Joint\": \"T\",\n        \"Backing\": \"T/P\",\n        \"Backing_Material\": \"T/P/P\",\n        \"Root_Spacing\": \"T/~/T/mm\",\n        \"Retainers\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_403\": {\n        \"P_No\": \"T\",\n        \"Gr_No\": \"T/T/T\",\n        \"to_P_No\": \"T\",\n        \"to_Gr_No\": \"T/T/T\",\n        \"or_Spec_Type_and_Grade\": \"T/T/to/T/T\",\n        \"Qualified_Thickness_Range\": \"T/~/T/mm\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Pipe_Diameter_Range\": \"T/~/T/mm\",\n        \"Max_Pass_Thk_Limit\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_404\": {\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"Specification_No\": \"T\",\n        \"AWS_Class\": \"T\",\n        \"Brand_Name\": \"T\",\n        \"Depo_Weld_Metal\": \"T/mm\",\n        \"Filler_Product_Form\": \"T\",\n        \"Size\": \"T/T/mm\",\n        \"Supplemental\": 'T',\n        \"Alloy_Element\": \"T\",\n        \"Flux_Wire_Class\": \"T\",\n        \"Alloy_Flux\": \"T\",\n        \"Flux_Trade_Name\": \"T\",\n        \"Flux_Type\": \"T\",\n        \"Recrushed_Slag\": \"T\",\n        \"Consumable_Insert\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_405\": {\n        \"Position_of_Groove\": \"T/P\",\n        \"Position_of_Fillet\": \"T/P\",\n        \"Welding_Progression\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_406\": {\n        \"Min_Preheat_Temp\": \"T/°C\",\n        \"Max_Interpass_Temp\": \"T/°C\",\n        \"Preheat_Maintain\": \"T\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_407\": {\n        \"Postweld_Heat_Treat_Temp\": \"T/~/T/°C\",\n        \"Holding_Time\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_408\": {\n        \"Shielding\": \"T/D/T/T/~/T/mm\",\n        \"Backing\": \"T/D/T/T/~/T/mm\",\n        \"Trailing\": \"T/D/T/T/~/T/mm\",\n        \"Shielding_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Backing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Trailing_Gas\": \"T/D/T/T/~/T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_409\": {\n        \"Current\": \"T/P\",\n        \"Polarity\": \"T/P\",\n        \"Tungsten_Electrode_Type\": \"T\",\n        \"Tungsten_Electrode_Size\": \"T/T/mm\",\n        \"Pulsing_Current\": \"T\",\n        \"Mode_of_Metal_Transfer\": \"T/P\",\n        \"Others\": \"T\"\n    }, \"WPS_QW_410\": {\n        \"Stringer_or_Weave_Bead\": \"T/P\",\n        \"Orifice_Gas_Cup_or_Nozzle_Tip\": \"T/~/T/mm\",\n        \"Initial_or_Interpass_Cleaning\": \"T/AP\",\n        \"Contact_Tube_to_Work_Dist\": \"T/~/T/mm\",\n        \"Closed_to_Out_Chamber\": \"T\",\n        \"Use_of_Thermal_Process\": \"T\",\n        \"Method_of_Back_Gouging\": \"T/AP\",\n        \"Single_or_Multiple_Pass\": \"T\",\n        \"Single_or_Multiple_Electrode\": 'T',\n        \"Multiple_Electrode_Spacing\": \"T/mm\",\n        \"Peening\": \"T\",\n        \"Oscillation\": \"T/mm\",\n        \"Others\": \"T\"\n    }, \"WPS_ELECTRODE\": {\n        \"Layer_No\": \"T\",\n        \"Welding_Process\": \"T\",\n        \"MAX_WM_Thickness\": \"T\",\n        \"F_No\": \"T\",\n        \"A_No\": \"T\",\n        \"SFA_No\": \"T\",\n        \"Filler_Metal_Class\": \"T\",\n        \"Filler_Metal_Dia\": \"T\",\n        \"Current_Type_Polar\": 'T',\n        \"Current_Amperes_Range\": \"T\",\n        \"Voltage_Range\": \"T\",\n        \"Travel_Speed_mm_min\": \"T\",\n        \"Travel_Speed_cm_min\": \"T\",\n        \"Heat_Input_kJ_mm\": \"T\",\n        \"Heat_Input_kJ_cm\": \"T\",\n        \"Heat_Input_J_mm\": \"T\",\n        \"Shielding_Gas_Flow_Rate\": \"T\"\n    }, \"PQR_Doc_Info\": {\n        \"PQR_NO\": \"T\",\n        \"DATE\": \"T/D\",\n        \"WPS_NO\": \"T\",\n        \"WELDING_PROCESS\": \"T/AP\",\n        \"TYPE\": \"T/AP\"\n    }, \"PQR_QW_403\": {\n        \"P_NO\": \"T\",\n        \"GR_NO\": \"T/T/T\",\n        \"TO_P_NO\": \"T\",\n        \"TO_GR_NO\": \"T/T/T\",\n        \"SPEC_NO\": \"T/to/T\",\n        \"TYPE_GRADE\": \"T/to/T\",\n        \"THICKNESS\": \"T/mm\",\n        \"DIAMETER\": \"T/mm\",\n        \"MAX_THICKNESS_PER_PASS\": \"T/mm\",\n        \"DEPOSIT_WELD_METAL_THICKNESS\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_404\": {\n        \"F_NO\": \"T\",\n        \"A_NO\": \"T\",\n        \"SFA_NO\": \"T\",\n        \"AWS_CLASS\": \"T\",\n        \"FILLER_PRODUCT_FORM\": \"T\",\n        \"SIZE_OF_ELECTRODE\": \"T/T/mm\",\n        \"WIRE_FLUX_CLASS\": \"T\",\n        \"FLUX_TRADE_NAME\": \"T\",\n        \"BRAND\": \"T\",\n        \"SUPPLEMENTAL\": \"T\",\n        \"ALLOY_ELEMENTS\": \"T\",\n        \"DEPOSIT_WELD_METAL\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_405\": {\n        \"POSITION_OF_GROOVE\": \"T/P\",\n        \"PROGRESSION\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_406\": {\n        \"PREHEAT_TEMP\": \"T/°C\",\n        \"INTERPASS_TEMP\": \"T/°C\",\n        \"PREHEAT_MAINTAIN\": \"T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_407\": {\n        \"TEMPERATURE\": \"T/~/T/°C\",\n        \"HOLDING_TIME\": \"T/Hr,/T/Min/~/T/Hr,/T/Min\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_408\": {\n        \"SHIELDING\": \"T/T/T\",\n        \"BACKING\": \"T/T/T\",\n        \"TRAILING\": \"T/T/T\",\n        \"SHIELDING_GAS\": \"T/T/T\",\n        \"BACKING_GAS\": \"T/T/T\",\n        \"TRAILING_GAS\": \"T/T/T\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_409\": {\n        \"CURRENT\": \"T/P\",\n        \"POLARRITY\": \"T/P\",\n        \"TRANSFER_MODE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_TYPE\": \"T\",\n        \"TUNGSTEN_ELECTRODE_SIZE\": \"T/T/mm\",\n        \"OTHERS\": \"T\"\n    }, \"PQR_QW_410\": {\n        \"STRINGER_OR_WEAVE_BEAD\": \"T/P\",\n        \"ORIFICE_OR_GAS_CUP_SIZE\": \"T/~/T/mm\",\n        \"METHOD_OF_CLEANING\": \"T/T\",\n        \"METHOD_OF_BACK_GOUGING\": \"T\",\n        \"CONTACT_TUBE_TO_WORK_DIST\": \"T/~/T/mm\",\n        \"SINGLE_OR_MULTIPLE_ELECTRODES\": 'T',\n        \"MULTIPASS_OR_SINGLE_PASS\": \"T\",\n        \"CLOSED_TO_OUT_CHAMBER\": \"T\",\n        \"USE_OF_THERMAL_PROCESSES\": \"T\",\n        \"OSCILLATION\": \"T/mm\",\n        \"OTHERS\": \"T\"\n    },\n};\n\nexport const EXCEPT_TABLES = [ // 수정 제외 테이블\n    \"Company\", \"WPS_NOTES\"\n]\n\nexport const PREDEFINED_FIELDS = { // 미리 정의된 selector option 리스트\n    \"Impact_Test\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"Type\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"Welding_Process\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"Backing\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"Backing_Material\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"Retainers\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"Position_of_Groove\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Position_of_Fillet\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"Welding_Progression\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"Current\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"Polarity\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"Mode_of_Metal_Transfer\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"Stringer_or_Weave_Bead\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"Initial_or_Interpass_Cleaning\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"Method_of_Back_Gouging\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"Shielding_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n    \"Backing_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n    \"Trailing_Gas\": [\"있음\", \"NONE\", \"N/A\"],\n\n    \"IMPACT_TEST\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"TYPE\": [\"MANUAL\", \"SEMI AUTO\", \"MECHANIZED\", \"AUTOMATIC\"],\n    \"WELDING_PROCESS\": [\"GTAW\", \"TIG\", \"141\", \"SMAW\", \"MMA\", \"111\", \"GMAW\", \"135\", \"FCAW\", \"136\", \"SAW\", \"121\"],\n    \"BACKING\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"BACKING_MATERIAL\": [\"BASE METAL\", \"WELD METAL\", \"NONE\", \"N/A\"],\n    \"RETAINERS\": [\"YES\", \"NO\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_GROOVE\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"POSITION_OF_FILLET\": [\"ALL\", \"VERTICAL\", \"HORIZONTAL\", \"FLAT\", \"OVERHEAD\", \"NONE\", \"N/A\"],\n    \"WELDING_PROGRESSION\": [\"UP\", \"DOWN\", \"N/A\"],\n    \"CURRENT\": [\"DC\", \"AC\", \"NONE\", \"N/A\"],\n    \"POLARRITY\": [\"EN\", \"EP\", \"NONE\", \"N/A\"],\n    \"MODE_OF_METAL_TRANSFER\": [\"GLOBULAR\", \"SPRAY\", \"SHORT-CIRCUIT\", \"PULSED SPRAY\", \"NONE\", \"N/A\"],\n    \"STRINGER_OR_WEAVE_BEAD\": [\"STRINGER\", \"WEAVE\", \"BOTH\", \"NONE\", \"N/A\"],\n    \"INITIAL_OR_INTERPASS_CLEANING\": [\"BRUSHING\", \"GRINDING\", \"NONE\", \"N/A\"],\n    \"METHOD_OF_BACK_GOUGING\": [\"AIR ARC GOUGING\", \"GRINDING\", \"MACHINING\", \"MECHANICAH GOUGING\", \"THERMAL GOUGING\", \"NONE\", \"N/A\"],\n    \"SHIELDING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"BACKING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n    \"TRAILING_GAS\": [\"있음\", \"NONE\", \"N/A\"],\n}\nexport const PROCESS_AVAILABLE_TABLES = [ // process 추가 가능 테이블\n    \"WPS_QW_404\", \n    \"WPS_QW_405\", \n    \"WPS_QW_408\", \n    \"WPS_QW_409\", \n    \"WPS_QW_410\", \n    \"PQR_QW_404\", \n    \"PQR_QW_405\", \n    \"PQR_QW_408\", \n    \"PQR_QW_409\", \n    \"PQR_QW_410\"\n]\n\nexport const PROCESS_OPTIONS = (\n    <>\n        <option value={\"GTAW\"}>GTAW</option>\n        <option value={\"SMAW\"}>SMAW</option>\n        <option value={\"GMAW\"}>GMAW</option>\n        <option value={\"FCAW\"}>FCAW</option>\n        <option value={\"SAW\"}>SAW</option>\n    </>)","export default __webpack_public_path__ + \"static/media/icon_add_process.f73162a2.svg\";","export default __webpack_public_path__ + \"static/media/icon_add_item.d2ef0425.svg\";","export default __webpack_public_path__ + \"static/media/icon_delete_process.94d578bf.svg\";","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, CardContent, Grid, IconButton, Paper, TextField, InputBase, Dialog, DialogTitle, List, ListItem, CircularProgress, Box, Typography } from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack';\r\nimport { cloneDeep } from 'lodash';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport { TABLE_INFO, PREDEFINED_FIELDS, PROCESS_AVAILABLE_TABLES, EXCEPT_TABLES, PROCESS_OPTIONS } from './DataDef.js'\r\nimport addIcon from './img/icon_add_process.svg';\r\nimport addItemIcon from './img/icon_add_item.svg';\r\nimport deleteIcon from './img/icon_delete_process.svg'\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex', \r\n        gap: 10\r\n    },\r\n    content: {\r\n        width: '100%', \r\n        display: 'flex', \r\n        gap: 25, \r\n        marginTop: 5, \r\n        marginLeft: 10\r\n    },\r\n    leftPaper: {\r\n        width: '650px', \r\n        height: '600px', \r\n        overflow: 'scroll'\r\n    },\r\n    rightPaper: {\r\n        width: '600px', \r\n        height: '600px', \r\n        marginTop: 20, \r\n        padding: 10,\r\n        overflow: 'scroll'\r\n    },\r\n    notePaper: {\r\n        width: '1234px', \r\n        height: '136px', \r\n        marginTop: 10, \r\n        padding: 10,\r\n        overflow: 'scroll'\r\n    },\r\n    dbBtn: {\r\n        marginTop: 10\r\n    },\r\n    prevBtn: {\r\n        width:98, height:23, background:\"rgba(23, 62, 139, 1)\", color:\"white\",\r\n        marginTop: 10\r\n    },\r\n    nextBtn: {\r\n        width:98, height:23, background:\"rgba(23, 62, 139, 1)\", color:\"white\",\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    submitTableBtn: {\r\n        width:98, height:23, background:\"#DD2818\", color:\"white\",\r\n        marginTop: 10, \r\n        marginLeft: \"auto\"\r\n    },\r\n    tableCard: {\r\n        display: 'grid',\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    tableCardGas: {\r\n        width: 120,\r\n        marginTop: 10,\r\n        paddingLeft: 10,\r\n        height: 42,\r\n        gap: 3,\r\n    },\r\n    cardNum: {\r\n        marginLeft: -10,\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        // textDecoration: 'underline'\r\n    },\r\n    select: {\r\n        width: 80,\r\n        height: 20,\r\n        marginRight: 10,\r\n        fontSize: 8\r\n    },\r\n    preDefinedSelect: {\r\n        height: 20,\r\n        marginTop: 15,\r\n        marginLeft: 3,\r\n        fontSize: 8\r\n    },\r\n    formControl: {\r\n        width: 80,\r\n        height: 20,\r\n        marginTop: '10px',\r\n        marginLeft: '0px',\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: '1px solid',\r\n          borderColor: \"#707070\",\r\n          borderRadius: \"4px\",\r\n        },\r\n    },\r\n    addItemBtn: {\r\n        marginTop: 15,\r\n        marginLeft: 5,\r\n        width: 20,\r\n        height: 20,\r\n        cursor: 'pointer'\r\n    },\r\n    dateInput: {\r\n        marginTop: 10,\r\n        height: 30\r\n    },\r\n    guide: {\r\n        marginTop: 30, \r\n        textAlign: \"center\"\r\n    },\r\n    dashedRect: {\r\n        position:'absolute', \r\n        border: 'dashed 3px',\r\n        textAlign: 'center'\r\n    },\r\n    leftSide: {\r\n\r\n    },\r\n    rightSide: {\r\n        position: 'relative'\r\n    },\r\n    deleteProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addProcessBtn: {\r\n        marginLeft: 'auto',\r\n        cursor: 'pointer'\r\n    },\r\n    addGasProcessBtn: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        cursor: 'pointer'\r\n    },\r\n    secondProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    thirdProcess: {\r\n        borderLeft: '0.2px dashed gray'\r\n    },\r\n    secondGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    thirdGasProcess: {\r\n        marginTop:5, \r\n        paddingTop:5, \r\n        borderTop: '0.2px dashed gray'\r\n    },\r\n    gasTable: {\r\n        display: \"grid\", \r\n        gap: 10, \r\n        gridTemplateColumns: '140px 130px 130px 120px'\r\n    },\r\n    watermark: {\r\n        userSelect: 'none',\r\n        position: 'absolute',\r\n        width: 450,\r\n        left: 80,\r\n        top: 300,\r\n        fontSize: 64,\r\n        opacity: 0.15\r\n    }\r\n});\r\n\r\nexport default function Inspector(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const ocrData = props.ocrData;\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    // pdf document 상태 관리\r\n    const [docState, setDocState] = useState({ // pdf page, zoom\r\n        total: 0,\r\n        current: 1,\r\n        zoom: 2.2\r\n    });\r\n    const [rectArea, setRectArea] = useState({ // pdf 점선 사각형 범위\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n\r\n    });\r\n    const onDocumentLoadSuccess = ({numPages}) => { // pdf load 완료 시 호출 -> total page set\r\n        setDocState((prevState) => (\r\n            {...docState,\r\n            total: numPages}\r\n        ))\r\n    };\r\n\r\n    // table 상태 관리\r\n    const [tableState, setTableState] = useState({\r\n        list: [], // total table list\r\n        total: 0,\r\n        current: 0,\r\n        finished: [],\r\n        title: \"\",\r\n        isProcessAvailable: false,\r\n    });\r\n\r\n    const [refinedTable, setRefinedTable] = useState({}); // OCR 데이터 최초 로드 및 정제된 테이블\r\n    const [currentTable, setCurrentTable] = useState({}); // 수정용 현재 테이블\r\n    const [clonedTable, setClonedTable] = useState({}); // 추가 프로세스 테이블 1\r\n    const [clonedTable2, setClonedTable2] = useState({}); // 추가 프로세스 테이블 2\r\n\r\n    // process 상태 관리\r\n    const [processState, setProcessState] = useState({\r\n        count: 1, // 현재 프로세스 개수\r\n        first: \"GTAW\", // currentTable\r\n        second: \"GTAW\", // clonedTable\r\n        third: \"GTAW\" // clonedTable2\r\n    });\r\n\r\n    const [DBState, setDBState] = useState({}); // DB 전송용 정보 저장\r\n    const [isDBSave, setIsDBSave] = useState(false);\r\n    const [loadingDialogOpen, setLoadingDialogOpen] = useState(false);\r\n\r\n    const setTable = (process, key, newArr) => {\r\n        if (process === 1) {\r\n            setClonedTable({\r\n                ...clonedTable,\r\n                [key]: newArr\r\n            })\r\n        } else if (process === 2) {\r\n            setClonedTable2({\r\n                ...clonedTable2,\r\n                [key]: newArr\r\n            })\r\n        } else {\r\n            setCurrentTable({\r\n                ...currentTable,\r\n                [key]: newArr\r\n            })\r\n        }\r\n    };\r\n    \r\n\r\n    const makeField = (typeStr, arr, key, idx, process, disabled) => { // 테이블 row 내부 field 생성 / process) null: 없음, 1: 첫번째 추가 프로세스, 2: 두번째 추가 프로세스\r\n        switch (typeStr) {\r\n            case \"T\": // text field\r\n                if (arr[idx] === undefined) { // 해당 항목의 array 비어 있을 경우\r\n                    return <TextField \r\n                    margin=\"dense\" \r\n                    inputProps={{style: {fontSize: 10}}} \r\n                    value={\"\"} \r\n                    fullWidth \r\n                    variant=\"outlined\" \r\n                    disabled={disabled}\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        while (newArr.length <= idx) {\r\n                            newArr.push(\"\");\r\n                        }\r\n                        newArr[idx] = e.target.value;\r\n                        setTable(process, key, newArr);\r\n                    }}/>\r\n                }\r\n                return <TextField \r\n                margin=\"dense\" \r\n                inputProps={{style: {fontSize: 10}}} \r\n                value={arr[idx]} \r\n                fullWidth \r\n                variant=\"outlined\" \r\n                disabled={disabled}\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value;\r\n                    setTable(process, key, newArr);\r\n                }}/>\r\n            case \"D\": // date input\r\n                return <input \r\n                type=\"date\"\r\n                className={classes.dateInput}\r\n                value={arr[idx]} \r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value;\r\n                    setTable(process, key, newArr);\r\n                }}/>\r\n            case \"P\": // predefined selector\r\n                return <select\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value;\r\n                    setTable(process, key, newArr);\r\n                }}\r\n                className={classes.preDefinedSelect}\r\n                style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={arr[idx]}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"PG\": // predefined selector for GAS Table\r\n                return <select\r\n                onChange={e=> {\r\n                    let newArr = arr;\r\n                    newArr[idx] = e.target.value\r\n                    if (e.target.value !== \"있음\") {\r\n                        for (let i=1; i<=4; i++) {\r\n                            newArr[i] = e.target.value;\r\n                        }\r\n                    } else {\r\n                        for (let i=1; i<=4; i++) {\r\n                            newArr[i] = \"\";\r\n                        }\r\n                    }\r\n                    setTable(process, key, newArr);\r\n                }}\r\n                className={classes.preDefinedSelect}\r\n                style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                value={arr[idx]}>\r\n                    {PREDEFINED_FIELDS[key].map((item, idx) => {\r\n                        if (idx === 0) return <option value={item} selected>{item}</option>\r\n                        else return <option value={item}>{item}</option>\r\n                    })}\r\n                </select>\r\n            case \"AP\": // ADDIBLE predefined selector\r\n                if (arr.length === 1) {\r\n                    arr.push(PREDEFINED_FIELDS[key][0]);\r\n                }\r\n                return (\r\n                <div style={{display: 'flex'}}>\r\n                    <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[1] = e.target.value;\r\n                        setTable(process, key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[1]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    {arr.length >= 3 ? <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[2] = e.target.value;\r\n                        setTable(process, key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[2]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {arr.length >= 4 ? <select\r\n                    onChange={e=> {\r\n                        let newArr = arr;\r\n                        newArr[3] = e.target.value;\r\n                        setTable(process, key, newArr);\r\n                    }}\r\n                    className={classes.preDefinedSelect}\r\n                    style={{width: tableState.title.includes(\"408\") ? 40 : 60/processState.count+20 }}\r\n                    defaultValue={PREDEFINED_FIELDS[key][0]}\r\n                    value={arr[3]}>\r\n                        {PREDEFINED_FIELDS[key].map((item) => {\r\n                            return <option value={item}>{item}</option>\r\n                        })}\r\n                    </select> : null}\r\n\r\n                    {arr.length >= 2 && arr.length <= 3 ? <img \r\n                    src={addItemIcon} \r\n                    className={classes.addItemBtn}\r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.push(\"\");\r\n                        setTable(process, key, newArr);\r\n                    }} alt=\"add icon\"/> : null}\r\n\r\n                    {arr.length >= 3 && arr.length <= 4 ? <img\r\n                    src={deleteIcon} \r\n                    className={classes.addItemBtn} \r\n                    onClick={() => {\r\n                        let newArr = arr;\r\n                        newArr.pop();\r\n                        setTable(process, key, newArr);\r\n                    }} alt=\"add icon\"/> : null}\r\n                </div>)\r\n            default:\r\n                return <CardContent className={classes.cardNum}>{typeStr}</CardContent>\r\n        }\r\n    }\r\n\r\n    const makeCard = (key, process) => { // 테이블 row 생성\r\n        const targetTable = process===1 ? clonedTable : process===2 ? clonedTable2 : currentTable; // process에 따른 target table\r\n        const fieldTypeArr = TABLE_INFO[tableState.title][key].split('/'); // 미리 정의된 각 row 구성 요소 array\r\n        const columnTemplate = \r\n            fieldTypeArr.length <= 1 ? `${355/processState.count}px`\r\n                : fieldTypeArr.length === 2 ? `${180/processState.count}px ${180/processState.count}px`\r\n                : fieldTypeArr.length === 3 ? `${120/processState.count}px ${120/processState.count}px ${120/processState.count}px`\r\n                : fieldTypeArr.length === 4 ? `${90/processState.count}px ${45/processState.count}px ${90/processState.count}px ${45/processState.count}px`\r\n                : fieldTypeArr.length === 5 ? `${70/processState.count}px ${70/processState.count}px ${30/processState.count}px ${70/processState.count}px ${70/processState.count}px`\r\n                : `${50/processState.count}px ${25/processState.count}px ${60/processState.count}px ${25/processState.count}px ${20/processState.count}px ${60/processState.count}px ${25/processState.count}px ${60/processState.count}px ${25/processState.count}px `;\r\n        \r\n        return (<div \r\n        className={classes.tableCard}\r\n        style={{gridTemplateColumns: columnTemplate}}>\r\n            {fieldTypeArr.map((typeStr, idx) => {\r\n                return makeField(typeStr, targetTable[key], key, idx, process, false)\r\n            })}\r\n        </div>)\r\n    }\r\n    \r\n    const makeGasTable = (process) => { // Gas 테이블 생성\r\n        const targetTable = process===1 ? clonedTable : process===2 ? clonedTable2 : currentTable;\r\n        const targetKey = tableState.title.includes(\"WPS\") ? [\"Shielding_Gas\", \"Backing_Gas\", \"Trailing_Gas\", \"Others\"] : [\"SHIELDING_GAS\", \"BACKING_GAS\", \"TRAILING_GAS\", \"OTHERS\"]\r\n        return (\r\n            <div >\r\n                <div style={{display: 'grid', gridTemplateColumns: `130px 130px 130px`, gridTemplateRows: `150px 40px`}}>\r\n                    <div className={classes.tableCardGas}>\r\n                        <div style={{display: 'grid', gap: 5, gridTemplateColumns: `40px 70px`}}>\r\n                            {makeField(\"PG\", targetTable[targetKey[0]], targetKey[0], 0, process, false)}\r\n                            {makeField(\"T\", targetTable[targetKey[0]], targetKey[0], 1, process, targetTable[targetKey[0]][0] === \"NONE\" || targetTable[targetKey[0]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `120px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[0]], targetKey[0], 2, process, targetTable[targetKey[0]][0] === \"NONE\" || targetTable[targetKey[0]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `40px 15px 40px 20px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[0]], targetKey[0], 3, process, targetTable[targetKey[0]][0] === \"NONE\" || targetTable[targetKey[0]][0] === \"N/A\")}\r\n                            {makeField(\"~\")}\r\n                            {makeField(\"T\", targetTable[targetKey[0]], targetKey[0], 4, process, targetTable[targetKey[0]][0] === \"NONE\" || targetTable[targetKey[0]][0] === \"N/A\")}\r\n                            {makeField(\"mm\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.tableCardGas}>\r\n                        <div style={{display: 'grid', gap: 5, gridTemplateColumns: `40px 70px`}}>\r\n                            {makeField(\"PG\", targetTable[targetKey[1]], targetKey[1], 0, process, targetTable[targetKey[1]][0] === \"NONE\" || targetTable[targetKey[1]][0] === \"N/A\")}\r\n                            {makeField(\"T\", targetTable[targetKey[1]], targetKey[1], 1, process, targetTable[targetKey[1]][0] === \"NONE\" || targetTable[targetKey[1]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `120px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[1]], targetKey[1], 2, process, targetTable[targetKey[1]][0] === \"NONE\" || targetTable[targetKey[1]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `40px 15px 40px 20px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[1]], targetKey[1], 3, process, targetTable[targetKey[1]][0] === \"NONE\" || targetTable[targetKey[1]][0] === \"N/A\")}\r\n                            {makeField(\"~\")}\r\n                            {makeField(\"T\", targetTable[targetKey[1]], targetKey[1], 4, process, targetTable[targetKey[1]][0] === \"NONE\" || targetTable[targetKey[1]][0] === \"N/A\")}\r\n                            {makeField(\"mm\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.tableCardGas}>\r\n                        <div style={{display: 'grid', gap: 5, gridTemplateColumns: `40px 70px`}}>\r\n                            {makeField(\"PG\", targetTable[targetKey[2]], targetKey[2], 0, process, targetTable[targetKey[2]][0] === \"NONE\" || targetTable[targetKey[2]][0] === \"N/A\")}\r\n                            {makeField(\"T\", targetTable[targetKey[2]], targetKey[2], 1, process, targetTable[targetKey[2]][0] === \"NONE\" || targetTable[targetKey[2]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `120px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[2]], targetKey[2], 2, process, targetTable[targetKey[2]][0] === \"NONE\" || targetTable[targetKey[2]][0] === \"N/A\")}\r\n                        </div>\r\n                        <div style={{display: 'grid', gridTemplateColumns: `40px 15px 40px 20px`}}>\r\n                            {makeField(\"T\", targetTable[targetKey[2]], targetKey[2], 3, process, targetTable[targetKey[2]][0] === \"NONE\" || targetTable[targetKey[2]][0] === \"N/A\")}\r\n                            {makeField(\"~\")}\r\n                            {makeField(\"T\", targetTable[targetKey[2]], targetKey[2], 4, process, targetTable[targetKey[2]][0] === \"NONE\" || targetTable[targetKey[2]][0] === \"N/A\")}\r\n                            {makeField(\"mm\")}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{gridRowStart:2, gridRowEnd:3, gridColumnStart:1, gridColumnEnd:4, width: 360, marginLeft: 10}}>\r\n                        {makeField(\"T\", process===1 ? clonedTable[targetKey[3]] : process===2 ? clonedTable2[targetKey[3]] : currentTable[targetKey[3]], targetKey[3], 0, process, false)}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    const moveTable = (to) => { // 이전, 다음 테이블 이동 (to: -1 OR +1)\r\n        const toMove = tableState.current + to;\r\n        if (toMove >= 0 && toMove <=tableState.total-1) {\r\n            setTableState(prevState => ({\r\n                ...prevState,\r\n                current: toMove,\r\n                title: prevState.list[toMove],\r\n                isProcessAvailable: false\r\n            }));\r\n            const loadTable = cloneDeep(ocrData[tableState.list[toMove]][\"fields\"]);\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            });\r\n            setRefinedTable(cloneDeep(loadTable));\r\n            setCurrentTable(loadTable); // 테이블 load\r\n            setRectArea({...rectArea, // 점선 사각형 범위 계산\r\n                top: 800*ocrData[tableState.list[toMove]][\"area\"][\"top\"],\r\n                left: 550*ocrData[tableState.list[toMove]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[tableState.list[toMove]][\"area\"][\"right\"] - ocrData[tableState.list[toMove]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[tableState.list[toMove]][\"area\"][\"bottom\"] - ocrData[tableState.list[toMove]][\"area\"][\"top\"]),\r\n            });\r\n            setProcessState({ // process 상태 초기화\r\n                count: 1,\r\n                first: \"GTAW\",\r\n                second: \"GTAW\",\r\n                third: \"GTAW\"\r\n            });\r\n            if (PROCESS_AVAILABLE_TABLES.includes(tableState.list[toMove])) { // process 추가 가능 테이블 확인\r\n                setTableState(prevState => ({\r\n                    ...prevState,\r\n                    isProcessAvailable: true\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    const addProcess = () => { // process 추가\r\n        if (processState.count === 1) {\r\n            setClonedTable(cloneDeep(refinedTable));\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        } else if (processState.count === 2) {\r\n            setClonedTable2(cloneDeep(refinedTable));\r\n            setProcessState({\r\n                ...processState,\r\n                count: 3\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteProcess = (position) => { // process 삭제\r\n        if (position === 2) { // 두번째 process 삭제\r\n            if (processState.count === 3) { // 중간 process 삭제\r\n                setClonedTable(clonedTable2);\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 2,\r\n                    second: processState.third\r\n                });\r\n            }\r\n            else if (processState.count === 2) {\r\n                setProcessState({\r\n                    ...processState,\r\n                    count: 1\r\n                });\r\n            }\r\n        } else if (position === 3) {\r\n            setProcessState({\r\n                ...processState,\r\n                count: 2\r\n            });\r\n        }\r\n    }\r\n\r\n    const submitTable = () => { // 수정된 테이블 DB state 저장\r\n        if (!tableState.finished.includes(tableState.current)) { // finished 리스트에 없는 경우 현재 table 인덱스 추가\r\n            setTableState({\r\n                ...tableState,\r\n                finished: tableState.finished.concat(tableState.current)\r\n            });\r\n        }\r\n        if (tableState.isProcessAvailable) { // 프로세스 추가 가능 테이블 확인\r\n            if (processState.count === 2) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(clonedTable)},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else if (processState.count === 3) {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(clonedTable2)},\r\n                        \"Process\": processState.third,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(clonedTable)},\r\n                        \"Process\": processState.second,\r\n                    },{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            } else {\r\n                setDBState((prevState) => ({\r\n                    ...prevState,\r\n                    [tableState.title]: [{\r\n                        \"fields\": {...cloneDeep(currentTable)},\r\n                        \"Process\": processState.first,\r\n                    }]\r\n                }));\r\n            }\r\n        } else {\r\n            setDBState((prevState) => ({ // 추가 프로세스 없음\r\n                ...prevState,\r\n                [tableState.title]: [{\r\n                    \"fields\": {...cloneDeep(currentTable)},\r\n                }]\r\n            }));\r\n        }\r\n        console.log(DBState)\r\n        console.log(tableState)\r\n    }\r\n\r\n    const saveDB = () => { // 서버 DB 저장 요청\r\n        setLoadingDialogOpen(true)\r\n        axios.post(\"https://7ps0j0pj49.execute-api.ap-northeast-2.amazonaws.com/v1/API_Lambda\", {\r\n                \"action\": \"DB\",\r\n                \"data\": [DBState]\r\n        })\r\n        .then((res) => {\r\n            setIsDBSave(true);\r\n            setTimeout(() => {\r\n                setLoadingDialogOpen(false)\r\n                history.push('/')\r\n            }, 5000);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            enqueueSnackbar('에러 발생', {variant: 'error'})\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => { // 최초 페이지 진입 시 데이터 세팅\r\n        if (props.ocrData !== null) {\r\n            const sortedTableKeys = Object.keys(ocrData).filter(key => !EXCEPT_TABLES.includes(key)).sort(); // 테이블 key 정렬\r\n            setTableState({\r\n                total: sortedTableKeys.length,\r\n                current: 0,\r\n                finished: [],\r\n                title: sortedTableKeys[0],\r\n                isProcessAvailable: false,\r\n                list: sortedTableKeys\r\n            });\r\n            const loadTable = cloneDeep(ocrData[sortedTableKeys[0]][\"fields\"]); // 인덱스 0 테이블 로드 및 정제\r\n            Object.keys(loadTable).forEach((key)=> { // 인덱스 0으로 전체 내용 모으기 및 나머지 필드 빈칸 처리\r\n                loadTable[key][0] = loadTable[key].join(' ')\r\n                for (let i=1; i<loadTable[key].length; i++) {\r\n                    loadTable[key][i] = \"\"\r\n                }\r\n            })\r\n            setRefinedTable(cloneDeep(loadTable));\r\n            setCurrentTable(loadTable);\r\n            setProcessState({\r\n                ...processState,\r\n                count: 1\r\n            })\r\n            setRectArea({...rectArea,\r\n                top: 800*ocrData[sortedTableKeys[0]][\"area\"][\"top\"],\r\n                left: 600*ocrData[sortedTableKeys[0]][\"area\"][\"left\"],\r\n                width: 600*(ocrData[sortedTableKeys[0]][\"area\"][\"right\"] - ocrData[sortedTableKeys[0]][\"area\"][\"left\"]),\r\n                height: 800*(ocrData[sortedTableKeys[0]][\"area\"][\"bottom\"] - ocrData[sortedTableKeys[0]][\"area\"][\"top\"]),\r\n            })\r\n            setDBState({ // DB state에 company 필드 임의 삽입\r\n                \"Company\": ocrData[\"Company\"]\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.title}>\r\n            <Box fontWeight=\"fontWeightBold\" fontSize={24} m={1}>\r\n                Inspect -  {props.userFile ? props.userFile.name : \"파일 없음\"}\r\n            </Box>\r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.dbBtn} disabled={tableState.finished.length !== tableState.total} onClick={saveDB}>\r\n                <SaveAltIcon fontSize='small'/>&nbsp;&nbsp;DB 저장\r\n            </Button>\r\n        </div>\r\n        <Dialog open={loadingDialogOpen} aria-labelledby=\"loading-dialog\" maxWidth='xs' fullWidth={true}>\r\n            <DialogTitle id=\"loading-dialog\">DB Save</DialogTitle>\r\n            <List style={{ margin:15 }}>\r\n                <ListItem>\r\n                    <Typography variant=\"h6\" noWrap >Saving to DB..&nbsp;&nbsp;</Typography>\r\n                    {!isDBSave ? <CircularProgress size={20}/> : <DoneIcon />}\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n        <div className={classes.content}>\r\n\r\n            <div className={classes.leftSide}>\r\n                <Box>\r\n                    OCR 결과\r\n                    <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom + 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomInIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                    <IconButton \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                zoom: docState.zoom - 1\r\n                            }))\r\n                        }}>\r\n                        <ZoomOutIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </Box>\r\n\r\n                <Paper elevation={1} className={classes.leftPaper}>\r\n                    <Document \r\n                        file={props.userFile}\r\n                        onLoadError={console.error}\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                        noData={<div className={classes.guide}>PDF 파일이 업로드되지 않았습니다.<br/>좌측 업로드 메뉴에서 파일을 업로드해주세요.</div>}>\r\n                        <Page height={400} pageNumber={docState.current} scale={docState.zoom}>\r\n                            <div \r\n                                className={classes.dashedRect}\r\n                                style={{\r\n                                    left: rectArea.left*docState.zoom/2, \r\n                                    top: rectArea.top*docState.zoom/2, \r\n                                    width: rectArea.width*docState.zoom/2, \r\n                                    height: rectArea.height*docState.zoom/2, \r\n                                }}/>\r\n                        </Page>\r\n                    </Document>\r\n                </Paper>\r\n                \r\n                <Grid container>\r\n                    <Button \r\n                        className={classes.prevBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === 1 ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current-1\r\n                            }))\r\n                        }}>\r\n                        이전페이지\r\n                    </Button>\r\n                    <Button \r\n                        className={classes.nextBtn} \r\n                        variant=\"outlined\" \r\n                        disabled={docState.current === docState.total || docState.total === null ? true : false} \r\n                        onClick={() => {\r\n                            setDocState((prevState) => ({\r\n                                ...prevState,\r\n                                current: docState.current+1\r\n                            }))\r\n                        }}>\r\n                        다음페이지\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n            \r\n            <div className={classes.rightSide}>\r\n                <Box>Table - {tableState.current+1} / {tableState.total} &nbsp; | &nbsp;남은 수정 테이블 : {tableState.total-tableState.finished.length}</Box>\r\n                {tableState.finished.includes(tableState.current) ? <Box className={classes.watermark} fontWeight=\"fontWeightBold\">수정완료 테이블</Box> : null}\r\n\r\n                {!tableState.title.includes(\"408\") ? <div>\r\n                    <Paper elevation={1} className={classes.rightPaper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <div style={{display: \"grid\", gap: 10, gridTemplateColumns: processState.count===1 ? '140px 360px': processState.count===2 ? '140px 190px 180px' :'140px 130px 130px 120px'}}>\r\n                            <Box>{tableState.title}&nbsp;&nbsp;&nbsp;&nbsp;</Box>\r\n                            {tableState.isProcessAvailable ?\r\n                                <select\r\n                                    onChange={(e) => {\r\n                                        setProcessState((prevState) => ({...prevState, first: e.target.value}));\r\n                                    }}\r\n                                    className={classes.select}\r\n                                    defaultValue={\"GTAW\"}\r\n                                    value={processState.first}>\r\n                                    {PROCESS_OPTIONS}\r\n                                </select> : null}\r\n                            {processState.count >= 2 ?\r\n                                <div style={{display:'flex'}}>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            setProcessState((prevState) => ({...prevState, second: e.target.value}));\r\n                                        }}\r\n                                        className={classes.select}\r\n                                        defaultValue={\"GTAW\"}\r\n                                        value={processState.second}>\r\n                                        {PROCESS_OPTIONS}\r\n                                    </select>\r\n                                    <img \r\n                                        src={deleteIcon}\r\n                                        className={classes.deleteProcessBtn}\r\n                                        alt=\"delete process button\"\r\n                                        onClick={() => deleteProcess(2)}/>\r\n                                </div>\r\n                                : null}\r\n                            {processState.count === 3 ? \r\n                                <div style={{display:'flex'}}>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            setProcessState((prevState) => ({...prevState, third: e.target.value}));\r\n                                            console.log(\"here\")\r\n                                        }}\r\n                                        className={classes.select}\r\n                                        defaultValue={\"GTAW\"}\r\n                                        value={processState.third}\r\n                                        >\r\n                                        {PROCESS_OPTIONS}\r\n                                    </select>\r\n                                    <img \r\n                                        src={deleteIcon} \r\n                                        className={classes.deleteProcessBtn}\r\n                                        alt=\"delete process button\"\r\n                                        onClick={() => deleteProcess(3)}/>\r\n                                </div>\r\n                            : null}\r\n                        </div>\r\n                        {tableState.isProcessAvailable && processState.count !== 3 ? \r\n                            <img \r\n                                src={addIcon} \r\n                                className={classes.addProcessBtn}\r\n                                alt=\"add process button\"\r\n                                onClick={addProcess}/>\r\n                            : null}\r\n                    </div>\r\n                    \r\n                    <div style={{display: \"grid\", gridTemplateColumns: processState.count===1 ? '140px 400px': processState.count===2 ? '140px 195px 180px' :'140px 135px 135px 125px'}}>\r\n                        <div>\r\n                            {currentTable !== null ? \r\n                                Object.keys(currentTable).map((key, idx) => {\r\n                                    return (\r\n                                    <div className={classes.tableCard}>\r\n                                        <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={key} fullWidth variant=\"outlined\" />\r\n                                    </div>)\r\n                                }) : null}\r\n                        </div>\r\n                        <div>\r\n                            {currentTable !== null ? \r\n                                Object.keys(currentTable).map((key, idx) => {\r\n                                    return makeCard(key, null)\r\n                                }) : null}\r\n                        </div>\r\n                        {processState.count >= 2 ? \r\n                            <div className={classes.secondProcess}>\r\n                                {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\r\n                                        return makeCard(key, 1)\r\n                                    }) : null}\r\n                            </div> : null}\r\n                        {processState.count===3 ? \r\n                            <div className={classes.thirdProcess}>\r\n                                {currentTable !== null ? Object.keys(currentTable).map((key, idx) => {\r\n                                        return makeCard(key, 2)\r\n                                    }) : null}\r\n                            </div> : null}\r\n                    </div>                \r\n                    </Paper>\r\n                    <Grid container>\r\n                        <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\r\n                        <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\r\n                        <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\r\n                    </Grid>\r\n                </div> : null}\r\n\r\n                {tableState.title.includes(\"408\") ? \r\n                <div>\r\n                    <Paper elevation={1} className={classes.rightPaper}>\r\n                    <div>\r\n                        <div style={{display: \"grid\", gap: 10, gridTemplateColumns: '140px 130px 130px 120px'}}>\r\n                            {tableState.isProcessAvailable ? \r\n                                <select\r\n                                    onChange={(e) => {\r\n                                        setProcessState((prevState) => ({...prevState, first: e.target.value}));\r\n                                        console.log(\"here\")\r\n                                    }}\r\n                                    className={classes.select}\r\n                                    style={{\r\n                                        marginLeft:10,\r\n                                        marginTop:10\r\n                                    }}\r\n                                    defaultValue={\"GTAW\"}\r\n                                    value={processState.first}\r\n                                    >\r\n                                    {PROCESS_OPTIONS}\r\n                                </select> : null}\r\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Shielding\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Backing\"} fullWidth variant=\"outlined\" />\r\n                            <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Trailing\"} fullWidth variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\r\n                        <div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            {makeGasTable(null)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {processState.count >= 2 ? <>\r\n                    <div className={classes.secondGasProcess}>\r\n                        <div className={classes.gasTable}>\r\n                            {tableState.isProcessAvailable ? \r\n                                <select\r\n                                onChange={(e) => {\r\n                                    setProcessState((prevState) => ({...prevState, second: e.target.value}));\r\n                                }}\r\n                                className={classes.select}\r\n                                style={{\r\n                                    marginLeft:10,\r\n                                    marginTop:10\r\n                                }}\r\n                                defaultValue={\"GTAW\"}\r\n                                value={processState.second}\r\n                                >\r\n                                    {PROCESS_OPTIONS}\r\n                                </select> : null}\r\n                            \r\n                            <div></div>\r\n                            <div></div>\r\n                            <img \r\n                                src={deleteIcon} \r\n                                className={classes.deleteProcessBtn} \r\n                                onClick={() => deleteProcess(2)}\r\n                                alt=\"delete process button\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\r\n                        <div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            {makeGasTable(1)}\r\n                        </div>         \r\n                    </div>\r\n                    </> : null}\r\n\r\n\r\n                    {processState.count === 3 ? <>\r\n                    <div className={classes.thirdGasProcess}>\r\n                        <div className={classes.gasTable}>\r\n                            {tableState.isProcessAvailable ? \r\n                                <select\r\n                                    onChange={(e) => {\r\n                                        setProcessState((prevState) => ({...prevState, third: e.target.value}));\r\n                                    }}\r\n                                    className={classes.select}\r\n                                    style={{\r\n                                        marginLeft:10,\r\n                                        marginTop:10\r\n                                    }}\r\n                                    defaultValue={\"GTAW\"}\r\n                                    value={processState.third}>\r\n                                    {PROCESS_OPTIONS}\r\n                                </select> : null}\r\n                            <div/><div/>\r\n                            <img \r\n                                src={deleteIcon} \r\n                                className={classes.deleteProcessBtn} \r\n                                onClick={() => deleteProcess(3)}\r\n                                alt=\"delete process button\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"grid\", gridTemplateColumns: '140px 400px'}}>\r\n                        <div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Gas\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Percent Composition\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Flow Rate\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                            <div className={classes.tableCard}>\r\n                                <InputBase margin=\"dense\" inputProps={{style: {fontSize: 10, fontWeight: 600}}} value={\"Other\"} fullWidth variant=\"outlined\" />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            {makeGasTable(2)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    </> : null}\r\n                    {tableState.isProcessAvailable && processState.count !== 3 ? \r\n                        <img \r\n                            src={addIcon} \r\n                            className={classes.addGasProcessBtn} \r\n                            alt=\"add process button\"\r\n                            onClick={addProcess}/>\r\n                        : null}           \r\n                    </Paper>    \r\n                    <Grid container>\r\n                        <Button className={classes.prevBtn} variant=\"outlined\" onClick={() => moveTable(-1)}>이전테이블</Button>\r\n                        <Button className={classes.submitTableBtn} variant=\"outlined\" onClick={()=> submitTable()}>수정반영</Button>\r\n                        <Button className={classes.nextBtn} variant=\"outlined\" onClick={() => moveTable(1)}>다음테이블</Button>\r\n                    </Grid>\r\n                </div> : null}\r\n            </div>\r\n        </div>\r\n        <Box style={{marginTop: 10}}>Note</Box>\r\n        <Paper elevation={1} className={classes.notePaper}>\r\n            {ocrData !== null && ocrData[\"WPS_NOTES\"] !== undefined ? ocrData[\"WPS_NOTES\"][\"fields\"][\"Instructions\"].map((item) => {\r\n                return <div style={{fontSize: 14}}>{item}<br></br></div>\r\n            }) : null}\r\n        </Paper>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo_otos.103138a0.svg\";","import React from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Drawer, AppBar, CssBaseline, Toolbar, List, Typography, ListItem, ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Box, Button } from '@material-ui/core';\nimport { Switch, Link, useHistory, Route, BrowserRouter as Router } from \"react-router-dom\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useEffect, useState } from 'react';\nimport Uploader from './Uploader.js';\nimport Inspector from './Inspector.js';\nimport logo from './img/logo_otos.svg';\n\nconst myTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#58a5f0',\n            contrastText: '#fff',\n        }\n    }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        background: '#ffffff',\n        // background: 'linear-gradient(45deg, #0277bd 50%, #88d3ce 90%)',\n        zIndex: 1500,\n        height: 50,\n        // boxShadow: 'none'\n    },\n    toolBar: {\n        minHeight: 50,\n    },\n    logo: {\n        maxWidth: 80,\n        paddingBottom: 2,\n    },\n    userButton: {\n        background: 'linear-gradient(45deg, rgba(254,107,107,0.85) 35%, rgba(255,182,83,0.85) 90%)',\n        marginLeft: 'auto',\n        paddingLeft: 20,\n        paddingRight: 20,\n        color: 'inherit',\n    },\n    logoutMenu: {\n        zIndex: 2000,\n    },\n    drawer: {\n        width: 70,\n        flexShrink: 0,\n        zIndex: 1400,\n        overflow: 'hidden'\n    },\n    drawerPaper: {\n        width: 70,\n        overflow: 'hidden'\n    },\n    drawerContainer: {\n        overflow: 'hidden',\n    },\n    drawerItem: {\n        marginLeft: 7,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginTop: 60,\n        marginLeft: 24\n    }\n}));\n\nexport default function Main() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [userFile, setUserFile] = useState(null);\n    const [ocrData, setOcrData] = useState(null);\n\n    useEffect(() => {\n        document.getElementById('uploadButton').click();\n    },[]);\n\n    return (\n    <ThemeProvider theme={myTheme}>\n        <Router> \n            <CssBaseline />\n            <div className={classes.root}>\n                \n            <AppBar className={classes.appBar} elevation={4}>\n                <Toolbar className={classes.toolBar}>\n                <Grid container justify=\"center\">\n                    <img style={{height: 40}} src={logo}></img>\n                </Grid>\n                {/* <Typography variant=\"h6\">\n                    <Box fontWeight=\"fontWeightBold\">\n                        WeldBeing\n                    </Box>\n                </Typography>\n                <Button variant=\"contained\" className={classes.userButton} aria-controls=\"logout-menu\" aria-haspopup=\"true\" \n                    onClick={() => {\n                        // logout();\n                        // history.push(\"/login\");\n                    }}>\n                    <Box fontSize=\"12px\" fontWeight=\"fontWeightBold\">\n                        User | 로그아웃\n                    </Box>\n                </Button> */}\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                paper: classes.drawerPaper,\n                }}>\n                <Toolbar className={classes.toolBar} disableGutters={true}/>\n                <div className={classes.drawerContainer}>\n                <List>\n                    <ListItem id='uploadButton' button component={Link} to=\"/\" divider='true'>\n                        <ListItemIcon className={classes.drawerItem}><CloudUploadIcon /></ListItemIcon>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/inspect\" divider='true'>\n                        <ListItemIcon className={classes.drawerItem}><CachedIcon /></ListItemIcon>\n                    </ListItem>\n                </List>\n                </div>\n            </Drawer>\n\n            <main className={classes.content}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <Uploader getFile={(file) => setUserFile(file)} getOcrData={(data) => setOcrData(data)}/>} />\n                    <Route exact path=\"/inspect\" render={() => <Inspector userFile={userFile} ocrData={ocrData}/>} />\n                </Switch>\n            </main>\n\n            </div>\n        </Router>\n    </ThemeProvider>\n  );\n}\n","import './App.css';\nimport Main from './Main.js';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\"\n\nexport default function App() {\n\n  return (\n    <Router basename='/ocrproj'>\n      <Route path=\"/\" render={() => <Main />} />\n    </Router>\n  )\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n    <React.StrictMode>\n      <SnackbarProvider maxSnack={1} autoHideDuration={2000}>\n        <App />\n      </SnackbarProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}